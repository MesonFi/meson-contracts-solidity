/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonStatesTest,
  MesonStatesTestInterface,
} from "../MesonStatesTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "addSupportToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "balanceIndexFrom",
    outputs: [
      {
        internalType: "bytes6",
        name: "",
        type: "bytes6",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "checkReleaseSignature",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "checkRequestSignature",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "decodeBalanceIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "lockedSwap",
        type: "uint80",
      },
    ],
    name: "decodeLockedSwap",
    outputs: [
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint200",
        name: "postedSwap",
        type: "uint200",
      },
    ],
    name: "decodePostedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "decodeSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToMeson",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "salt",
        type: "uint80",
      },
      {
        internalType: "uint256",
        name: "expireTs",
        type: "uint256",
      },
      {
        internalType: "bytes2",
        name: "inChain",
        type: "bytes2",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "bytes2",
        name: "outChain",
        type: "bytes2",
      },
      {
        internalType: "uint8",
        name: "outTokenIndex",
        type: "uint8",
      },
      {
        internalType: "bytes6",
        name: "balanceIndexForMeson",
        type: "bytes6",
      },
      {
        internalType: "bytes6",
        name: "outTokenBalanceIndex",
        type: "bytes6",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "amount",
        type: "uint48",
      },
      {
        internalType: "uint80",
        name: "salt",
        type: "uint80",
      },
      {
        internalType: "uint40",
        name: "fee",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "expireTs",
        type: "uint40",
      },
      {
        internalType: "bytes2",
        name: "outChain",
        type: "bytes2",
      },
      {
        internalType: "uint8",
        name: "outToken",
        type: "uint8",
      },
      {
        internalType: "bytes2",
        name: "inChain",
        type: "bytes2",
      },
      {
        internalType: "uint8",
        name: "inToken",
        type: "uint8",
      },
    ],
    name: "encodeSwap",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "lockedSwapFrom",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063a7d3c6a8116100b2578063d4f8232211610081578063eba7fb7711610066578063eba7fb77146105ba578063f7888aec146105e8578063ff378719146105fb57600080fd5b8063d4f823221461056e578063e16a567d1461058157600080fd5b8063a7d3c6a81461039a578063b002249d146104d0578063b3df5b36146104e5578063c7e25a5e1461054057600080fd5b8063554cad8311610109578063793d1e28116100ee578063793d1e28146102795780639aff57d314610338578063a375b4741461036a57600080fd5b8063554cad83146101f05780636a4881dc1461023457600080fd5b80631aba3a551461013b5780631fdafaf41461017d5780632335093c146101925780634f139480146101dd575b600080fd5b610162610149366004610e97565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b61019061018b366004610fa9565b610634565b005b6101cb6101a0366004610e97565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff9091168152602001610174565b6101906101eb366004610f4a565b610648565b6102036101fe36600461111f565b61065e565b6040517fffffffffffff00000000000000000000000000000000000000000000000000009091168152602001610174565b610247610242366004610f0f565b61067e565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835264ffffffffff909116602083015201610174565b61028c610287366004610ff9565b6106a8565b604080519b8c5260208c019a909a52988a019790975269ffffffffffffffffffff909516606089015260808801939093527fffff00000000000000000000000000000000000000000000000000000000000091821660a088015260ff90811660c0880152911660e0860152166101008401527fffffffffffff00000000000000000000000000000000000000000000000000009081166101208401521661014082015261016001610174565b61034b610346366004611037565b610762565b6040805160ff909316835264ffffffffff909116602083015201610174565b61037d610378366004611104565b610772565b6040805164ffffffffff9093168352602083019190915201610174565b6104c36103a8366004611052565b604080517fffffffffffff000000000000000000000000000000000000000000000000000060d08b901b1660208201527fffffffffffffffffffff0000000000000000000000000000000000000000000060b08a901b1660268201527fffffffffff00000000000000000000000000000000000000000000000000000060d889811b8216603084015288901b1660358201527fffff000000000000000000000000000000000000000000000000000000000000808716603a8301527fff0000000000000000000000000000000000000000000000000000000000000060f887811b8216603c850152918616603d8401529084901b16603f82015260609101604051602081830303815290604052905098975050505050505050565b60405161017491906111a3565b6104d8610786565b6040516101749190611149565b61051b6104f336600461101c565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610174565b61055361054e366004610ff9565b6108d3565b60405169ffffffffffffffffffff9091168152602001610174565b61019061057c366004610ee5565b6108fc565b6105ac61058f3660046110e9565b60281b65ff00000000001660009081526004602052604090205490565b604051908152602001610174565b6040517f02ca0000000000000000000000000000000000000000000000000000000000008152602001610174565b6105ac6105f6366004610eb2565b61090a565b61051b6106093660046110e9565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6106418585858585610998565b5050505050565b610656868686868686610b43565b505050505050565b64ffffffffff8116602883901b65ff0000000000161760d01b5b92915050565b600080602883901c73ffffffffffffffffffffffffffffffffffffffff165b9150825b9050915091565b60008060008060008060008060008060006106c38d60d01c90565b9a5060588d901c64ffffffffff169950605a8d901c643fffffffff1698506106eb8d60801c90565b975060308d901c64ffffffffff1696506107058d60081c90565b60f01b95508c94506107178d60201c90565b60f01b93506107268d60181c90565b92506107328d60281b90565b60d01b915065ff000000000060108e901b1664ffffffffff8d161760d01b90509295989b509295989b9093969950565b600080602883901c60ff1661069d565b80600064ffffffffff602883901c166106a1565b606060015b6101008160ff16101561083e5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1661082c578060ff16600114156107d5575090565b6107e0600182611216565b60ff1667ffffffffffffffff8111156107fb576107fb6112b7565b604051908082528060200260200182016040528015610824578160200160208202803683370190505b50915061083e565b8061083681611239565b91505061078b565b60015b8160ff168160ff1610156108ce5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1683610884600184611216565b60ff168151811061089757610897611288565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806108c681611239565b915050610841565b505090565b60006effffffffffffffffffff0000000000602884901b1664ffffffffff8316175b9392505050565b6109068282610cf1565b5050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602090815260408083205493851683526002909152812054909160ff169064ffffffffff1680158061095c575060ff8216155b1561096c57600092505050610678565b64ffffffffff1660289190911b65ff000000000016176000908152600460205260409020549392505050565b73ffffffffffffffffffffffffffffffffffffffff8116610a1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064015b60405180910390fd5b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc8083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa158015610a9c573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610a11565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116610bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610a11565b601485905260008681526034812060209081527f743e50106a7f059b52151dd4ba27a5f6c87b925ddfbdcf1c332e800da4b3df928083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa158015610c49573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ce7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610a11565b5050505050505050565b60ff8116610d5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e64657800000000006044820152606401610a11565b73ffffffffffffffffffffffffffffffffffffffff9091166000818152600160209081526040808320805460ff9096167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909616861790559382528190529190912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e0c57600080fd5b919050565b80357fffff00000000000000000000000000000000000000000000000000000000000081168114610e0c57600080fd5b803564ffffffffff81168114610e0c57600080fd5b803565ffffffffffff81168114610e0c57600080fd5b803560ff81168114610e0c57600080fd5b803569ffffffffffffffffffff81168114610e0c57600080fd5b600060208284031215610ea957600080fd5b6108f582610de8565b60008060408385031215610ec557600080fd5b610ece83610de8565b9150610edc60208401610de8565b90509250929050565b60008060408385031215610ef857600080fd5b610f0183610de8565b9150610edc60208401610e6c565b600060208284031215610f2157600080fd5b813578ffffffffffffffffffffffffffffffffffffffffffffffffff811681146108f557600080fd5b60008060008060008060c08789031215610f6357600080fd5b86359550610f7360208801610de8565b94506040870135935060608701359250610f8f60808801610e6c565b9150610f9d60a08801610de8565b90509295509295509295565b600080600080600060a08688031215610fc157600080fd5b853594506020860135935060408601359250610fdf60608701610e6c565b9150610fed60808701610de8565b90509295509295909350565b6000806040838503121561100c57600080fd5b82359150610edc60208401610e41565b60006020828403121561102e57600080fd5b6108f582610e41565b60006020828403121561104957600080fd5b6108f582610e56565b600080600080600080600080610100898b03121561106f57600080fd5b61107889610e56565b975061108660208a01610e7d565b965061109460408a01610e41565b95506110a260608a01610e41565b94506110b060808a01610e11565b93506110be60a08a01610e6c565b92506110cc60c08a01610e11565b91506110da60e08a01610e6c565b90509295985092959890939650565b6000602082840312156110fb57600080fd5b6108f582610e6c565b60006020828403121561111657600080fd5b6108f582610e7d565b6000806040838503121561113257600080fd5b61113b83610e6c565b9150610edc60208401610e41565b6020808252825182820181905260009190848201906040850190845b8181101561119757835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611165565b50909695505050505050565b600060208083528351808285015260005b818110156111d0578581018301518582016040015282016111b4565b818111156111e2576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060ff821660ff84168082101561123057611230611259565b90039392505050565b600060ff821660ff81141561125057611250611259565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000806000a";

type MesonStatesTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonStatesTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonStatesTest__factory extends ContractFactory {
  constructor(...args: MesonStatesTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonStatesTest> {
    return super.deploy(overrides || {}) as Promise<MesonStatesTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonStatesTest {
    return super.attach(address) as MesonStatesTest;
  }
  connect(signer: Signer): MesonStatesTest__factory {
    return super.connect(signer) as MesonStatesTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonStatesTestInterface {
    return new utils.Interface(_abi) as MesonStatesTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonStatesTest {
    return new Contract(address, _abi, signerOrProvider) as MesonStatesTest;
  }
}
