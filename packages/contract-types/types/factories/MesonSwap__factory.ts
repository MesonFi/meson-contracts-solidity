/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonSwap, MesonSwapInterface } from "../MesonSwap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "expireTsForSwap",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "initiatorForSwap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "providerIndexForSwap",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
    ],
    name: "requestSwap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "total",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "expireTs",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIndexForSwap",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "totalForSwap",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051806080016040528060528152602001620022bf60529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000b795949392919062000117565b60405160208183030381529060405280519060200120600055348015620000dd57600080fd5b50620001bc565b620000ef8162000174565b82525050565b620001008162000188565b82525050565b6200011181620001b2565b82525050565b600060a0820190506200012e6000830188620000f5565b6200013d6020830187620000f5565b6200014c6040830186620000f5565b6200015b606083018562000106565b6200016a6080830184620000e4565b9695505050505050565b6000620001818262000192565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6120f380620001cc6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638e93243b116100a2578063d541beb311610071578063d541beb3146102f2578063dcf66b6d1461030e578063e52d04041461033e578063e7b9c1551461036e578063f7888aec1461039e5761010b565b80638e93243b1461025457806394149c1a146102705780639d8669851461028e578063a433799f146102c25761010b565b80634f64b2be116100de5780634f64b2be146101bc578063552c0120146101ec5780636316d5541461020857806385a991f7146102385761010b565b80631548fdce146101105780631aba3a551461012c5780633ce4dd0f1461015c5780634b89bad61461018c575b600080fd5b61012a60048036038101906101259190611259565b6103ce565b005b610146600480360381019061014191906111bf565b61041b565b6040516101539190611a67565b60405180910390f35b61017660048036038101906101719190611259565b61043e565b6040516101839190611a4c565b60405180910390f35b6101a660048036038101906101a19190611259565b61046d565b6040516101b39190611a9d565b60405180910390f35b6101d660048036038101906101d191906114d6565b61048d565b6040516101e391906117cc565b60405180910390f35b61020660048036038101906102019190611328565b6104cc565b005b610222600480360381019061021d9190611259565b61051e565b60405161022f9190611a82565b60405180910390f35b610252600480360381019061024d919061142d565b610543565b005b61026e60048036038101906102699190611503565b61084f565b005b610278610aaa565b60405161028591906118d1565b60405180910390f35b6102a860048036038101906102a39190611259565b610ab9565b6040516102b995949392919061181e565b60405180910390f35b6102dc60048036038101906102d79190611259565b610b5a565b6040516102e991906117cc565b60405180910390f35b61030c60048036038101906103079190611259565b610b8d565b005b61032860048036038101906103239190611259565b610bda565b6040516103359190611a67565b60405180910390f35b61035860048036038101906103539190611503565b610bfd565b60405161036591906117cc565b60405180910390f35b610388600480360381019061038391906113d1565b610c30565b6040516103959190611871565b60405180910390f35b6103b860048036038101906103b391906111ec565b610c38565b6040516103c59190611a4c565b60405180910390f35b806103d881610c76565b610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e906119ec565b60405180910390fd5b5050565b60036020528060005260406000206000915054906101000a900463ffffffff1681565b60096020528060005260406000206000915054906101000a90046fffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b6002818154811061049d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b856104d681610c76565b610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c906119ec565b60405180910390fd5b50505050505050565b600b6020528060005260406000206000915054906101000a900465ffffffffffff1681565b600060028660ff168154811061055c5761055b611d12565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000806000806105998b86610c7d565b9350935093509350600184878a8a604051600081526020016040526040516105c4949392919061188c565b6020604051602081039080840390855afa1580156105e6573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161461065d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610654906118ec565b60405180910390fd5b60006003600061066b610e8b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060006106cc858565ffffffffffff16610e93565b90508a6007600088815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816008600088815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055508b600a600088815260200190815260200160002060006101000a81548160ff021916908360ff160217905550806009600088815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555082600b600088815260200190815260200160002060006101000a81548165ffffffffffff021916908365ffffffffffff160217905550610809878c83610eda565b7fd7a1fd45274eb446b18cdf83061f521e75114fa2c53ecb42bd853bba72097bab866040516108389190611871565b60405180910390a150505050505050505050505050565b6000610859610e8b565b905060008263ffffffff16116108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b9061198c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610952576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109499061196c565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16146109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e19061194c565b60405180910390fd5b80600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000638000003c60e01b905090565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900463ffffffff16908060000160189054906101000a900460ff16908060010160009054906101000a90046fffffffffffffffffffffffffffffffff16908060010160109054906101000a900465ffffffffffff16905085565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80610b9781610c76565b610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd906119ec565b60405180910390fd5b5050565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600092915050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000919050565b600080600080600080600080610c928a610f81565b93509350935093508389604051602001610cac919061177a565b6040516020818303038152906040528051906020012014610d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf990611a2c565b60405180910390fd5b6000836fffffffffffffffffffffffffffffffff1611610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e9061190c565b60405180910390fd5b6000429050610e1081610d6a9190611b70565b65ffffffffffff168265ffffffffffff1611610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db2906119ac565b60405180910390fd5b611c2081610dc99190611b70565b65ffffffffffff168265ffffffffffff1610610e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e119061192c565b60405180910390fd5b6000610e258c611028565b9050610e3081610c76565b15610e70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6790611a0c565b60405180910390fd5b80858585995099509950995050505050505092959194509250565b600033905090565b6000826fffffffffffffffffffffffffffffffff168284610eb49190611b2a565b9150816fffffffffffffffffffffffffffffffff161015610ed457600080fd5b92915050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846fffffffffffffffffffffffffffffffff166040518463ffffffff1660e01b8152600401610f29939291906117e7565b602060405180830381600087803b158015610f4357600080fd5b505af1158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b919061122c565b50505050565b600080600080600080600080600089806020019051810190610fa39190611286565b5050945094509450945094506040518060a001604052806063815260200161208460639139805190602001208514611010576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611007906119cc565b60405180910390fd5b83838383985098509850985050505050509193509193565b600080828051906020012090506000548160405160200161104a929190611795565b60405160208183030381529060405280519060200120915050919050565b600061107b61107684611add565b611ab8565b90508281526020810184848401111561109757611096611d75565b5b6110a2848285611c75565b509392505050565b6000813590506110b981611fb4565b92915050565b6000813590506110ce81611fcb565b92915050565b6000815190506110e381611fcb565b92915050565b6000813590506110f881611fe2565b92915050565b60008151905061110d81611fe2565b92915050565b60008151905061112281611ff9565b92915050565b600082601f83011261113d5761113c611d70565b5b813561114d848260208601611068565b91505092915050565b60008151905061116581612010565b92915050565b60008135905061117a81612027565b92915050565b60008135905061118f8161203e565b92915050565b6000815190506111a481612055565b92915050565b6000813590506111b98161206c565b92915050565b6000602082840312156111d5576111d4611d7f565b5b60006111e3848285016110aa565b91505092915050565b6000806040838503121561120357611202611d7f565b5b6000611211858286016110aa565b9250506020611222858286016110aa565b9150509250929050565b60006020828403121561124257611241611d7f565b5b6000611250848285016110d4565b91505092915050565b60006020828403121561126f5761126e611d7f565b5b600061127d848285016110e9565b91505092915050565b600080600080600080600060e0888a0312156112a5576112a4611d7f565b5b60006112b38a828b016110fe565b97505060206112c48a828b016110fe565b96505060406112d58a828b01611156565b95505060606112e68a828b01611195565b94505060806112f78a828b01611195565b93505060a06113088a828b01611113565b92505060c06113198a828b016110fe565b91505092959891949750929550565b60008060008060008060c0878903121561134557611344611d7f565b5b600061135389828a016110e9565b965050602087013567ffffffffffffffff81111561137457611373611d7a565b5b61138089828a01611128565b955050604061139189828a016110e9565b94505060606113a289828a016110e9565b93505060806113b389828a016111aa565b92505060a06113c489828a016110bf565b9150509295509295509295565b600080604083850312156113e8576113e7611d7f565b5b600083013567ffffffffffffffff81111561140657611405611d7a565b5b61141285828601611128565b9250506020611423858286016111aa565b9150509250929050565b60008060008060008060c0878903121561144a57611449611d7f565b5b600087013567ffffffffffffffff81111561146857611467611d7a565b5b61147489828a01611128565b965050602061148589828a016111aa565b955050604061149689828a016110aa565b94505060606114a789828a016110e9565b93505060806114b889828a016110e9565b92505060a06114c989828a016111aa565b9150509295509295509295565b6000602082840312156114ec576114eb611d7f565b5b60006114fa8482850161116b565b91505092915050565b60006020828403121561151957611518611d7f565b5b600061152784828501611180565b91505092915050565b61153981611bac565b82525050565b61155061154b82611bac565b611cb5565b82525050565b61155f81611bca565b82525050565b61157661157182611bca565b611cc7565b82525050565b61158581611bd4565b82525050565b6000611598601183611b0e565b91506115a382611da2565b602082019050919050565b60006115bb600283611b1f565b91506115c682611dcb565b600282019050919050565b60006115de602583611b0e565b91506115e982611df4565b604082019050919050565b6000611601601383611b0e565b915061160c82611e43565b602082019050919050565b6000611624601a83611b0e565b915061162f82611e6c565b602082019050919050565b6000611647601883611b0e565b915061165282611e95565b602082019050919050565b600061166a601283611b0e565b915061167582611ebe565b602082019050919050565b600061168d601483611b0e565b915061169882611ee7565b602082019050919050565b60006116b0601d83611b0e565b91506116bb82611f10565b602082019050919050565b60006116d3600e83611b0e565b91506116de82611f39565b602082019050919050565b60006116f6600d83611b0e565b915061170182611f62565b602082019050919050565b6000611719601683611b0e565b915061172482611f8b565b602082019050919050565b61173881611c00565b82525050565b61174781611c3c565b82525050565b61175681611c46565b82525050565b61176581611c56565b82525050565b61177481611c68565b82525050565b6000611786828461153f565b60148201915081905092915050565b60006117a0826115ae565b91506117ac8285611565565b6020820191506117bc8284611565565b6020820191508190509392505050565b60006020820190506117e16000830184611530565b92915050565b60006060820190506117fc6000830186611530565b6118096020830185611530565b611816604083018461173e565b949350505050565b600060a0820190506118336000830188611530565b611840602083018761174d565b61184d604083018661176b565b61185a606083018561172f565b611867608083018461175c565b9695505050505050565b60006020820190506118866000830184611556565b92915050565b60006080820190506118a16000830187611556565b6118ae602083018661176b565b6118bb6040830185611556565b6118c86060830184611556565b95945050505050565b60006020820190506118e6600083018461157c565b92915050565b600060208201905081810360008301526119058161158b565b9050919050565b60006020820190508181036000830152611925816115d1565b9050919050565b60006020820190508181036000830152611945816115f4565b9050919050565b6000602082019050818103600083015261196581611617565b9050919050565b600060208201905081810360008301526119858161163a565b9050919050565b600060208201905081810360008301526119a58161165d565b9050919050565b600060208201905081810360008301526119c581611680565b9050919050565b600060208201905081810360008301526119e5816116a3565b9050919050565b60006020820190508181036000830152611a05816116c6565b9050919050565b60006020820190508181036000830152611a25816116e9565b9050919050565b60006020820190508181036000830152611a458161170c565b9050919050565b6000602082019050611a61600083018461172f565b92915050565b6000602082019050611a7c600083018461174d565b92915050565b6000602082019050611a97600083018461175c565b92915050565b6000602082019050611ab2600083018461176b565b92915050565b6000611ac2611ad3565b9050611ace8282611c84565b919050565b6000604051905090565b600067ffffffffffffffff821115611af857611af7611d41565b5b611b0182611d84565b9050602081019050919050565b600082825260208201905092915050565b600081905092915050565b6000611b3582611c00565b9150611b4083611c00565b9250826fffffffffffffffffffffffffffffffff03821115611b6557611b64611ce3565b5b828201905092915050565b6000611b7b82611c56565b9150611b8683611c56565b92508265ffffffffffff03821115611ba157611ba0611ce3565b5b828201905092915050565b6000611bb782611c1c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600065ffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b611c8d82611d84565b810181811067ffffffffffffffff82111715611cac57611cab611d41565b5b80604052505050565b6000611cc082611cd1565b9050919050565b6000819050919050565b6000611cdc82611d95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f7377617020616d6f756e74206d7573742062652067726561746572207468616e60008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f6578706972657320747320746f6f206c61746500000000000000000000000000600082015250565b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b7f496e64657820616c726561647920726567697374657265640000000000000000600082015250565b7f43616e6e6f742075736520696e64657820300000000000000000000000000000600082015250565b7f6578706972657320747320746f6f206561726c79000000000000000000000000600082015250565b7f496e76616c696420737761702072657175657374207479706568617368000000600082015250565b7f73776170206e6f7420666f756e64000000000000000000000000000000000000600082015250565b7f7377617020636f6e666c69637400000000000000000000000000000000000000600082015250565b7f696e546f6b656e20646f6573206e6f74206d6174636800000000000000000000600082015250565b611fbd81611bac565b8114611fc857600080fd5b50565b611fd481611bbe565b8114611fdf57600080fd5b50565b611feb81611bca565b8114611ff657600080fd5b50565b61200281611bd4565b811461200d57600080fd5b50565b61201981611c00565b811461202457600080fd5b50565b61203081611c3c565b811461203b57600080fd5b50565b61204781611c46565b811461205257600080fd5b50565b61205e81611c56565b811461206957600080fd5b50565b61207581611c68565b811461208057600080fd5b5056fe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e29a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonSwap__factory extends ContractFactory {
  constructor(...args: MesonSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonSwap> {
    return super.deploy(overrides || {}) as Promise<MesonSwap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonSwap {
    return super.attach(address) as MesonSwap;
  }
  connect(signer: Signer): MesonSwap__factory {
    return super.connect(signer) as MesonSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonSwapInterface {
    return new utils.Interface(_abi) as MesonSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonSwap {
    return new Contract(address, _abi, signerOrProvider) as MesonSwap;
  }
}
