/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonSwap, MesonSwapInterface } from "../MesonSwap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "expireTsForSwap",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "initiatorForSwap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "providerIndexForSwap",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
    ],
    name: "requestSwap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "total",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "expireTs",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIndexForSwap",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "totalForSwap",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060800160405280605281526020016200232860529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000b795949392919062000117565b60405160208183030381529060405280519060200120600055348015620000dd57600080fd5b50620001bc565b620000ef8162000174565b82525050565b620001008162000188565b82525050565b6200011181620001b2565b82525050565b600060a0820190506200012e6000830188620000f5565b6200013d6020830187620000f5565b6200014c6040830186620000f5565b6200015b606083018562000106565b6200016a6080830184620000e4565b9695505050505050565b6000620001818262000192565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61215c80620001cc6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638e93243b116100a2578063d541beb311610071578063d541beb3146102f2578063dcf66b6d1461030e578063e52d04041461033e578063e7b9c1551461036e578063f7888aec1461039e5761010b565b80638e93243b1461025457806394149c1a146102705780639d8669851461028e578063a433799f146102c25761010b565b80634f64b2be116100de5780634f64b2be146101bc578063552c0120146101ec5780636316d5541461020857806385a991f7146102385761010b565b80631548fdce146101105780631aba3a551461012c5780633ce4dd0f1461015c5780634b89bad61461018c575b600080fd5b61012a600480360381019061012591906112ac565b6103ce565b005b61014660048036038101906101419190611212565b61041b565b6040516101539190611aba565b60405180910390f35b610176600480360381019061017191906112ac565b61043e565b6040516101839190611a9f565b60405180910390f35b6101a660048036038101906101a191906112ac565b61046d565b6040516101b39190611af0565b60405180910390f35b6101d660048036038101906101d19190611529565b61048d565b6040516101e3919061181f565b60405180910390f35b6102066004803603810190610201919061137b565b6104cc565b005b610222600480360381019061021d91906112ac565b61051e565b60405161022f9190611ad5565b60405180910390f35b610252600480360381019061024d9190611480565b610543565b005b61026e60048036038101906102699190611556565b61088e565b005b610278610ae9565b6040516102859190611924565b60405180910390f35b6102a860048036038101906102a391906112ac565b610af8565b6040516102b9959493929190611871565b60405180910390f35b6102dc60048036038101906102d791906112ac565b610b99565b6040516102e9919061181f565b60405180910390f35b61030c600480360381019061030791906112ac565b610bcc565b005b610328600480360381019061032391906112ac565b610c19565b6040516103359190611aba565b60405180910390f35b61035860048036038101906103539190611556565b610c3c565b604051610365919061181f565b60405180910390f35b61038860048036038101906103839190611424565b610c6f565b60405161039591906118c4565b60405180910390f35b6103b860048036038101906103b3919061123f565b610c77565b6040516103c59190611a9f565b60405180910390f35b806103d881610cb5565b610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90611a3f565b60405180910390fd5b5050565b60036020528060005260406000206000915054906101000a900463ffffffff1681565b60096020528060005260406000206000915054906101000a90046fffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b6002818154811061049d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b856104d681610cb5565b610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90611a3f565b60405180910390fd5b50505050505050565b600b6020528060005260406000206000915054906101000a900465ffffffffffff1681565b600060028660ff168154811061055c5761055b611d7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000806000806105998b86610cbc565b9350935093509350600184878a8a604051600081526020016040526040516105c494939291906118df565b6020604051602081039080840390855afa1580156105e6573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161461065d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106549061193f565b60405180910390fd5b60006003600061066b610ede565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060006106cc858565ffffffffffff16610ee6565b90506040518060a001604052808c73ffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1681526020018d60ff168152602001826fffffffffffffffffffffffffffffffff1681526020018465ffffffffffff168152506006600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160186101000a81548160ff021916908360ff16021790555060608201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060808201518160010160106101000a81548165ffffffffffff021916908365ffffffffffff160217905550905050610848878c83610f2d565b7fd7a1fd45274eb446b18cdf83061f521e75114fa2c53ecb42bd853bba72097bab8660405161087791906118c4565b60405180910390a150505050505050505050505050565b6000610898610ede565b905060008263ffffffff16116108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da906119df565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610991576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610988906119bf565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1614610a29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a209061199f565b60405180910390fd5b80600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000638000003c60e01b905090565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900463ffffffff16908060000160189054906101000a900460ff16908060010160009054906101000a90046fffffffffffffffffffffffffffffffff16908060010160109054906101000a900465ffffffffffff16905085565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80610bd681610cb5565b610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611a3f565b60405180910390fd5b5050565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600092915050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000919050565b600080600080600080600080610cd18a610fd4565b93509350935093508389604051602001610ceb91906117cd565b6040516020818303038152906040528051906020012014610d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3890611a7f565b60405180910390fd5b6000836fffffffffffffffffffffffffffffffff1611610d96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8d9061195f565b60405180910390fd5b6000429050610e108165ffffffffffff16610db19190611bc3565b67ffffffffffffffff168265ffffffffffff1611610e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfb906119ff565b60405180910390fd5b611c208165ffffffffffff16610e1a9190611bc3565b67ffffffffffffffff168265ffffffffffff1610610e6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e649061197f565b60405180910390fd5b6000610e788c61107b565b9050610e8381610cb5565b15610ec3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eba90611a5f565b60405180910390fd5b80858585995099509950995050505050505092959194509250565b600033905090565b6000826fffffffffffffffffffffffffffffffff168284610f079190611b7d565b9150816fffffffffffffffffffffffffffffffff161015610f2757600080fd5b92915050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846fffffffffffffffffffffffffffffffff166040518463ffffffff1660e01b8152600401610f7c9392919061183a565b602060405180830381600087803b158015610f9657600080fd5b505af1158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce919061127f565b50505050565b600080600080600080600080600089806020019051810190610ff691906112d9565b5050945094509450945094506040518060a00160405280606381526020016120ed60639139805190602001208514611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105a90611a1f565b60405180910390fd5b83838383985098509850985050505050509193509193565b600080828051906020012090506000548160405160200161109d9291906117e8565b60405160208183030381529060405280519060200120915050919050565b60006110ce6110c984611b30565b611b0b565b9050828152602081018484840111156110ea576110e9611dde565b5b6110f5848285611cde565b509392505050565b60008135905061110c8161201d565b92915050565b60008135905061112181612034565b92915050565b60008151905061113681612034565b92915050565b60008135905061114b8161204b565b92915050565b6000815190506111608161204b565b92915050565b60008151905061117581612062565b92915050565b600082601f8301126111905761118f611dd9565b5b81356111a08482602086016110bb565b91505092915050565b6000815190506111b881612079565b92915050565b6000813590506111cd81612090565b92915050565b6000813590506111e2816120a7565b92915050565b6000815190506111f7816120be565b92915050565b60008135905061120c816120d5565b92915050565b60006020828403121561122857611227611de8565b5b6000611236848285016110fd565b91505092915050565b6000806040838503121561125657611255611de8565b5b6000611264858286016110fd565b9250506020611275858286016110fd565b9150509250929050565b60006020828403121561129557611294611de8565b5b60006112a384828501611127565b91505092915050565b6000602082840312156112c2576112c1611de8565b5b60006112d08482850161113c565b91505092915050565b600080600080600080600060e0888a0312156112f8576112f7611de8565b5b60006113068a828b01611151565b97505060206113178a828b01611151565b96505060406113288a828b016111a9565b95505060606113398a828b016111e8565b945050608061134a8a828b016111e8565b93505060a061135b8a828b01611166565b92505060c061136c8a828b01611151565b91505092959891949750929550565b60008060008060008060c0878903121561139857611397611de8565b5b60006113a689828a0161113c565b965050602087013567ffffffffffffffff8111156113c7576113c6611de3565b5b6113d389828a0161117b565b95505060406113e489828a0161113c565b94505060606113f589828a0161113c565b935050608061140689828a016111fd565b92505060a061141789828a01611112565b9150509295509295509295565b6000806040838503121561143b5761143a611de8565b5b600083013567ffffffffffffffff81111561145957611458611de3565b5b6114658582860161117b565b9250506020611476858286016111fd565b9150509250929050565b60008060008060008060c0878903121561149d5761149c611de8565b5b600087013567ffffffffffffffff8111156114bb576114ba611de3565b5b6114c789828a0161117b565b96505060206114d889828a016111fd565b95505060406114e989828a016110fd565b94505060606114fa89828a0161113c565b935050608061150b89828a0161113c565b92505060a061151c89828a016111fd565b9150509295509295509295565b60006020828403121561153f5761153e611de8565b5b600061154d848285016111be565b91505092915050565b60006020828403121561156c5761156b611de8565b5b600061157a848285016111d3565b91505092915050565b61158c81611c01565b82525050565b6115a361159e82611c01565b611d1e565b82525050565b6115b281611c1f565b82525050565b6115c96115c482611c1f565b611d30565b82525050565b6115d881611c29565b82525050565b60006115eb601183611b61565b91506115f682611e0b565b602082019050919050565b600061160e600283611b72565b915061161982611e34565b600282019050919050565b6000611631602583611b61565b915061163c82611e5d565b604082019050919050565b6000611654601383611b61565b915061165f82611eac565b602082019050919050565b6000611677601a83611b61565b915061168282611ed5565b602082019050919050565b600061169a601883611b61565b91506116a582611efe565b602082019050919050565b60006116bd601283611b61565b91506116c882611f27565b602082019050919050565b60006116e0601483611b61565b91506116eb82611f50565b602082019050919050565b6000611703601d83611b61565b915061170e82611f79565b602082019050919050565b6000611726600e83611b61565b915061173182611fa2565b602082019050919050565b6000611749600d83611b61565b915061175482611fcb565b602082019050919050565b600061176c601683611b61565b915061177782611ff4565b602082019050919050565b61178b81611c55565b82525050565b61179a81611c91565b82525050565b6117a981611c9b565b82525050565b6117b881611cab565b82525050565b6117c781611cd1565b82525050565b60006117d98284611592565b60148201915081905092915050565b60006117f382611601565b91506117ff82856115b8565b60208201915061180f82846115b8565b6020820191508190509392505050565b60006020820190506118346000830184611583565b92915050565b600060608201905061184f6000830186611583565b61185c6020830185611583565b6118696040830184611791565b949350505050565b600060a0820190506118866000830188611583565b61189360208301876117a0565b6118a060408301866117be565b6118ad6060830185611782565b6118ba60808301846117af565b9695505050505050565b60006020820190506118d960008301846115a9565b92915050565b60006080820190506118f460008301876115a9565b61190160208301866117be565b61190e60408301856115a9565b61191b60608301846115a9565b95945050505050565b600060208201905061193960008301846115cf565b92915050565b60006020820190508181036000830152611958816115de565b9050919050565b6000602082019050818103600083015261197881611624565b9050919050565b6000602082019050818103600083015261199881611647565b9050919050565b600060208201905081810360008301526119b88161166a565b9050919050565b600060208201905081810360008301526119d88161168d565b9050919050565b600060208201905081810360008301526119f8816116b0565b9050919050565b60006020820190508181036000830152611a18816116d3565b9050919050565b60006020820190508181036000830152611a38816116f6565b9050919050565b60006020820190508181036000830152611a5881611719565b9050919050565b60006020820190508181036000830152611a788161173c565b9050919050565b60006020820190508181036000830152611a988161175f565b9050919050565b6000602082019050611ab46000830184611782565b92915050565b6000602082019050611acf60008301846117a0565b92915050565b6000602082019050611aea60008301846117af565b92915050565b6000602082019050611b0560008301846117be565b92915050565b6000611b15611b26565b9050611b218282611ced565b919050565b6000604051905090565b600067ffffffffffffffff821115611b4b57611b4a611daa565b5b611b5482611ded565b9050602081019050919050565b600082825260208201905092915050565b600081905092915050565b6000611b8882611c55565b9150611b9383611c55565b9250826fffffffffffffffffffffffffffffffff03821115611bb857611bb7611d4c565b5b828201905092915050565b6000611bce82611cbd565b9150611bd983611cbd565b92508267ffffffffffffffff03821115611bf657611bf5611d4c565b5b828201905092915050565b6000611c0c82611c71565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600065ffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b611cf682611ded565b810181811067ffffffffffffffff82111715611d1557611d14611daa565b5b80604052505050565b6000611d2982611d3a565b9050919050565b6000819050919050565b6000611d4582611dfe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f7377617020616d6f756e74206d7573742062652067726561746572207468616e60008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f6578706972657320747320746f6f206c61746500000000000000000000000000600082015250565b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b7f496e64657820616c726561647920726567697374657265640000000000000000600082015250565b7f43616e6e6f742075736520696e64657820300000000000000000000000000000600082015250565b7f6578706972657320747320746f6f206561726c79000000000000000000000000600082015250565b7f496e76616c696420737761702072657175657374207479706568617368000000600082015250565b7f73776170206e6f7420666f756e64000000000000000000000000000000000000600082015250565b7f7377617020636f6e666c69637400000000000000000000000000000000000000600082015250565b7f696e546f6b656e20646f6573206e6f74206d6174636800000000000000000000600082015250565b61202681611c01565b811461203157600080fd5b50565b61203d81611c13565b811461204857600080fd5b50565b61205481611c1f565b811461205f57600080fd5b50565b61206b81611c29565b811461207657600080fd5b50565b61208281611c55565b811461208d57600080fd5b50565b61209981611c91565b81146120a457600080fd5b50565b6120b081611c9b565b81146120bb57600080fd5b50565b6120c781611cab565b81146120d257600080fd5b50565b6120de81611cd1565b81146120e957600080fd5b5056fe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e29a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonSwap__factory extends ContractFactory {
  constructor(...args: MesonSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonSwap> {
    return super.deploy(overrides || {}) as Promise<MesonSwap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonSwap {
    return super.attach(address) as MesonSwap;
  }
  connect(signer: Signer): MesonSwap__factory {
    return super.connect(signer) as MesonSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonSwapInterface {
    return new utils.Interface(_abi) as MesonSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonSwap {
    return new Contract(address, _abi, signerOrProvider) as MesonSwap;
  }
}
