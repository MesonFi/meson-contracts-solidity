/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradableMeson,
  UpgradableMesonInterface,
} from "../UpgradableMeson";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getPostedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint200",
        name: "postingValue",
        type: "uint200",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c61318861004b600039600081816107cd0152818161086301528181610c7a0152610d1001526131886000f3fe6080604052600436106101805760003560e01c80638f487dc9116100d6578063ce9247431161007f578063f1d2ec1d11610059578063f1d2ec1d14610512578063f7888aec14610532578063ff3787191461055257600080fd5b8063ce92474314610471578063e16a567d14610491578063eba7fb77146104d757600080fd5b8063b002249d116100b0578063b002249d146103e1578063b3df5b3614610403578063be18e8a41461045157600080fd5b80638f487dc914610381578063903d4296146103a1578063a224cee7146103c157600080fd5b806337b90a4f1161013857806354d6a2b71161011257806354d6a2b7146102fc57806360a2da981461031c5780638302ce5a1461036157600080fd5b806337b90a4f146102a95780634d11b0f1146102c95780634f1ef286146102e957600080fd5b80632335093c116101695780632335093c1461021c57806335eff30f146102675780633659cfe61461028957600080fd5b80631aba3a55146101855780631e2a6075146101d4575b600080fd5b34801561019157600080fd5b506101b96101a0366004612a56565b60676020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b3480156101e057600080fd5b506101f46101ef366004612c39565b61058b565b604080516001600160a01b0394851681529390921660208401521515908201526060016101cb565b34801561022857600080fd5b50610255610237366004612a56565b6001600160a01b031660009081526066602052604090205460ff1690565b60405160ff90911681526020016101cb565b34801561027357600080fd5b50610287610282366004612df9565b610603565b005b34801561029557600080fd5b506102876102a4366004612a56565b6107c2565b3480156102b557600080fd5b506102876102c4366004612e1c565b610960565b3480156102d557600080fd5b506102876102e4366004612d24565b610a0b565b6102876102f7366004612aa4565b610c6f565b34801561030857600080fd5b50610287610317366004612c39565b610dfa565b34801561032857600080fd5b5061033c610337366004612c52565b610f76565b604080516001600160a01b03909316835264ffffffffff9091166020830152016101cb565b34801561036d57600080fd5b5061028761037c366004612d87565b610fc4565b34801561038d57600080fd5b5061028761039c366004612e1c565b6112b9565b3480156103ad57600080fd5b506102876103bc366004612e57565b611511565b3480156103cd57600080fd5b506102876103dc366004612b68565b6115fb565b3480156103ed57600080fd5b506103f661171f565b6040516101cb9190612ecc565b34801561040f57600080fd5b5061043961041e366004612e7a565b6068602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101cb565b34801561045d57600080fd5b5061028761046c366004612c75565b611845565b34801561047d57600080fd5b5061028761048c366004612cc5565b611b01565b34801561049d57600080fd5b506104c96104ac366004612e95565b60281b65ff00000000001660009081526069602052604090205490565b6040519081526020016101cb565b3480156104e357600080fd5b506040517f02ca00000000000000000000000000000000000000000000000000000000000081526020016101cb565b34801561051e57600080fd5b5061028761052d366004612c52565b611c2b565b34801561053e57600080fd5b506104c961054d366004612a71565b611d73565b34801561055e57600080fd5b5061043961056d366004612e95565b60ff166000908152606560205260409020546001600160a01b031690565b6000818152606a6020526040812054602881901c6001600160a01b0316919078ffffffffffffffffffffffffffffffffffffffffffffffffff166001811490836105d857600092506105fb565b64ffffffffff81166000908152606860205260409020546001600160a01b031692505b509193909250565b6000828152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff168061067f5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b8064ffffffffff16156106d45760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610676565b3360009081526067602052604090205464ffffffffff83811691161461073c5760405162461bcd60e51b815260206004820152601860248201527f43616e206f6e6c7920626f756e6420746f207369676e657200000000000000006044820152606401610676565b6000838152606a602052604080822080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff8616171790555184917f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc991a2505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108615760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610676565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108bc7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146109385760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610676565b61094181611df6565b6040805160008082526020820190925261095d91839190611e5e565b50565b600082116109b05760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610676565b65ffffffffffff8116600090815260696020526040812080548492906109d7908490612fb9565b909155505060ff602882901c16600090815260656020526040902054610a07906001600160a01b0316338461207c565b5050565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1680610a825760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610676565b610a8e610e1042612fb9565b603088901c64ffffffffff161015610ad9576000878152606a6020526040902080547fffffffffffffff00000000000000000000000000000000000000000000000000169055610b11565b6000878152606a6020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001660011790555b610b2c8784888888602887901c6001600160a01b03166121f3565b6000610b388860281b90565b90506000605889901c64ffffffffff16610b528a60d01c90565b610b5c9190612fb9565b9050610b688960081c90565b61ffff16603c14158015610b8a5750610b818960201c90565b61ffff16603c14155b15610bdd57643fffffffff605a8a901c168015610bdb5765ffffffffffff831660009081526069602052604081208054839290610bc8908490612fb9565b90915550610bd890508183613033565b91505b505b8315610c245764ffffffffff831665ffffffffffff831681176000908152606960205260408120805492851792849290610c18908490612fb9565b90915550610c64915050565b60ff891660009081526065602090815260408083205464ffffffffff87168452606890925290912054610c64916001600160a01b03908116911683612346565b505050505050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610d0e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610676565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d697f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610de55760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610676565b610dee82611df6565b610a0782826001611e5e565b6000818152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1660018111610e745760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610676565b42603083901c64ffffffffff1610610ece5760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b65640000000000000000000000006044820152606401610676565b6000828152606a6020908152604080832080547fffffffffffffff0000000000000000000000000000000000000000000000000016905560ff851683526065909152902054610f47906001600160a01b0390811690602884901c16610f42605886901c64ffffffffff1660d087901c612fb9565b612346565b60405182907ff6b6b4f7a13f02512c1b3aa8dcc4a07d7775a6a4becbd439efcbd37c5408e67f90600090a25050565b6000806000610f858585612548565b6000908152606b602090815260408083205464ffffffffff808216855260689093529220546001600160a01b03169760289290921c1695509350505050565b846102ca610fd28260081c90565b61ffff16146110235760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610676565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff161561109a5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610676565b60006110a68760d01c90565b905064174876e8008111156111235760405162461bcd60e51b815260206004820152603760248201527f466f7220736563757269747920726561736f6e2c20616d6f756e742063616e6e60448201527f6f742062652067726561746572207468616e203130306b0000000000000000006064820152608401610676565b600061113a4264ffffffffff60308b901c16613033565b9050610e10811161118d5760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610676565b611c2081106111de5760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610676565b6001600160a01b03602885901c166111f989898989856125a9565b6000898152606a6020908152604080832080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff8a1617905560ff8c1683526065909152902054611283906001600160a01b03168261127e60588d901c64ffffffffff1687612fb9565b61207c565b60405189907f5ce4019f772fda6cb703b26bce3ec3006eb36b73f1d3a0eb441213317d9f5e9d90600090a2505050505050505050565b600082116113095760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610676565b338164ffffffffff811661135f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610676565b64ffffffffff81166000908152606860205260409020546001600160a01b0316156113cc5760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610676565b6001600160a01b03821660009081526067602052604090205464ffffffffff16156114395760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610676565b64ffffffffff8116600081815260686020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03881690811790915583526067825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff861682526069905290812080548692906114db908490612fb9565b909155505060ff602884901c1660009081526065602052604090205461150b906001600160a01b0316838661207c565b50505050565b3360008181526067602052604090205464ffffffffff168061159b5760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610676565b64ffffffffff8116602884901b65ff00000000001617600090815260696020526040812080548692906115cf908490613033565b909155505060ff831660009081526065602052604090205461150b906001600160a01b03168386612346565b606c5460ff16156116745760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a65640000000000000000000000000000000000006064820152608401610676565b606c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556116a63390565b606c60016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060005b81518160ff161015610a075761170d828260ff16815181106116f3576116f36130e8565b60200260200101518260016117089190612fd1565b6126f4565b8061171781613099565b9150506116cf565b606060015b6101008160ff1610156117ca5760ff81166000908152606560205260409020546001600160a01b03166117b8578060ff1660011415611761575090565b61176c60018261304a565b60ff1667ffffffffffffffff81111561178757611787613117565b6040519080825280602002602001820160405280156117b0578160200160208202803683370190505b5091506117ca565b806117c281613099565b915050611724565b60015b8160ff168160ff1610156118405760ff81166000908152606560205260409020546001600160a01b03168361180360018461304a565b60ff1681518110611816576118166130e8565b6001600160a01b03909216602092830291909101909101528061183881613099565b9150506117cd565b505090565b846102ca6118538260201c90565b61ffff16146118a45760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610676565b60006118b08784612548565b6000818152606b602052604090205490915069ffffffffffffffffffff161561191b5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610676565b61192887878787876125a9565b3360009081526067602052604090205464ffffffffff16806119b25760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610676565b60006119c06104b042612fb9565b9050603089901c64ffffffffff168110611a425760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74206c6f636b20626563617573652065787069726554732069732060448201527f736f6f6e2e0000000000000000000000000000000000000000000000000000006064820152608401610676565b65ff000000000060108a901b1664ffffffffff8316176000818152606960205260408120805460d08d901c9290611a7a908490613033565b90915550506000848152606b602052604080822080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001664ffffffffff8716602887901b69ffffffffff00000000001617179055518b917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a250505050505050505050565b6000611b0d8784612548565b6000818152606b602052604090205490915069ffffffffffffffffffff1680611b785760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610676565b611b868884898989896121f3565b6000828152606b6020526040812080547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055606581611bc78b60181c90565b60ff1681526020810191909152604001600020546001600160a01b03169050611bf58185610f428c60d01c90565b60405189907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a2505050505050505050565b6000611c378383612548565b6000818152606b602052604090205490915069ffffffffffffffffffff1680611ca25760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610676565b42602882901c64ffffffffff1610611cfc5760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610676565b65ff0000000000601085901b1664ffffffffff8216176000818152606960205260408120805460d088901c9290611d34908490612fb9565b909155505050600091825250606b6020526040902080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555050565b6001600160a01b0380831660009081526066602090815260408083205493851683526067909152812054909160ff169064ffffffffff16801580611db8575060ff8216155b15611dc857600092505050611df0565b64ffffffffff1660289190911b65ff0000000000161760009081526069602052604090205490505b92915050565b606c5461010090046001600160a01b0316336001600160a01b03161461095d5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610676565b6000611e917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611e9c846127c5565b600083511180611ea95750815b15611eba57611eb88484612892565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166120755780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781556040516001600160a01b0383166024820152611fa3908690604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe600000000000000000000000000000000000000000000000000000000179052612892565b5080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b0383811691161461206c5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610676565b61207585612994565b5050505050565b600081116120cc5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610676565b789f4f2726179a224501d762422c946590d9100000000000000081106121345760405162461bcd60e51b815260206004820152600f60248201527f416d6f756e74206f766572666c6f7700000000000000000000000000000000006044820152606401610676565b6001600160a01b0383166323b872dd83306121548564e8d4a51000612ff6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156121bb57600080fd5b505af11580156121cf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150b9190612c1c565b6001600160a01b0381166122495760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610676565b601485905260008681526034812060209081527f743e50106a7f059b52151dd4ba27a5f6c87b925ddfbdcf1c332e800da4b3df928083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa1580156122d2573d6000803e3d6000fd5b505050602060405103516001600160a01b0316836001600160a01b03161461233c5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610676565b5050505050505050565b789f4f2726179a224501d762422c946590d9100000000000000081106123ae5760405162461bcd60e51b815260206004820152600f60248201527f416d6f756e74206f766572666c6f7700000000000000000000000000000000006044820152606401610676565b6000806001600160a01b0385167fa9059cbb00000000000000000000000000000000000000000000000000000000856123ec8664e8d4a51000612ff6565b6040516001600160a01b0390921660248301526044820152606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516124909190612eb0565b6000604051808303816000865af19150503d80600081146124cd576040519150601f19603f3d011682016040523d82523d6000602084013e6124d2565b606091505b50915091508180156124fc5750805115806124fc5750808060200190518101906124fc9190612c1c565b6120755760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610676565b6000828260405160200161258b92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b60405160208183030381529060405280519060200120905092915050565b6001600160a01b0381166125ff5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610676565b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc8083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa158015612681573d6000803e3d6000fd5b505050602060405103516001600160a01b0316836001600160a01b0316146126eb5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610676565b50505050505050565b60ff81166127445760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e64657800000000006044820152606401610676565b6001600160a01b039091166000818152606660209081526040808320805460ff9096167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090961686179055938252606590529190912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b803b6128395760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610676565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060823b6129085760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610676565b600080846001600160a01b0316846040516129239190612eb0565b600060405180830381855af49150503d806000811461295e576040519150601f19603f3d011682016040523d82523d6000602084013e612963565b606091505b509150915061298b8282604051806060016040528060278152602001613155602791396129d4565b95945050505050565b61299d816127c5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606083156129e3575081612a0d565b8251156129f35782518084602001fd5b8160405162461bcd60e51b81526004016106769190612f19565b9392505050565b80356001600160a01b0381168114612a2b57600080fd5b919050565b803564ffffffffff81168114612a2b57600080fd5b803560ff81168114612a2b57600080fd5b600060208284031215612a6857600080fd5b612a0d82612a14565b60008060408385031215612a8457600080fd5b612a8d83612a14565b9150612a9b60208401612a14565b90509250929050565b60008060408385031215612ab757600080fd5b612ac083612a14565b915060208084013567ffffffffffffffff80821115612ade57600080fd5b818601915086601f830112612af257600080fd5b813581811115612b0457612b04613117565b612b34847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612f6a565b91508082528784828501011115612b4a57600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020808385031215612b7b57600080fd5b823567ffffffffffffffff80821115612b9357600080fd5b818501915085601f830112612ba757600080fd5b813581811115612bb957612bb9613117565b8060051b9150612bca848301612f6a565b8181528481019084860184860187018a1015612be557600080fd5b600095505b83861015612c0f57612bfb81612a14565b835260019590950194918601918601612bea565b5098975050505050505050565b600060208284031215612c2e57600080fd5b8151612a0d81613146565b600060208284031215612c4b57600080fd5b5035919050565b60008060408385031215612c6557600080fd5b82359150612a9b60208401612a14565b600080600080600060a08688031215612c8d57600080fd5b853594506020860135935060408601359250612cab60608701612a45565b9150612cb960808701612a14565b90509295509295909350565b60008060008060008060c08789031215612cde57600080fd5b863595506020870135945060408701359350612cfc60608801612a45565b9250612d0a60808801612a14565b9150612d1860a08801612a14565b90509295509295509295565b60008060008060008060c08789031215612d3d57600080fd5b863595506020870135945060408701359350612d5b60608801612a45565b9250612d6960808801612a14565b915060a0870135612d7981613146565b809150509295509295509295565b600080600080600060a08688031215612d9f57600080fd5b853594506020860135935060408601359250612dbd60608701612a45565b9150608086013578ffffffffffffffffffffffffffffffffffffffffffffffffff81168114612deb57600080fd5b809150509295509295909350565b60008060408385031215612e0c57600080fd5b82359150612a9b60208401612a30565b60008060408385031215612e2f57600080fd5b82359150602083013565ffffffffffff81168114612e4c57600080fd5b809150509250929050565b60008060408385031215612e6a57600080fd5b82359150612a9b60208401612a45565b600060208284031215612e8c57600080fd5b612a0d82612a30565b600060208284031215612ea757600080fd5b612a0d82612a45565b60008251612ec281846020870161306d565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612f0d5783516001600160a01b031683529284019291840191600101612ee8565b50909695505050505050565b6020815260008251806020840152612f3881604085016020870161306d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612fb157612fb1613117565b604052919050565b60008219821115612fcc57612fcc6130b9565b500190565b600060ff821660ff84168060ff03821115612fee57612fee6130b9565b019392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561302e5761302e6130b9565b500290565b600082821015613045576130456130b9565b500390565b600060ff821660ff841680821015613064576130646130b9565b90039392505050565b60005b83811015613088578181015183820152602001613070565b8381111561150b5750506000910152565b600060ff821660ff8114156130b0576130b06130b9565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b801515811461095d57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000806000a";

type UpgradableMesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradableMesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradableMeson__factory extends ContractFactory {
  constructor(...args: UpgradableMesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableMeson> {
    return super.deploy(overrides || {}) as Promise<UpgradableMeson>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableMeson {
    return super.attach(address) as UpgradableMeson;
  }
  connect(signer: Signer): UpgradableMeson__factory {
    return super.connect(signer) as UpgradableMeson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableMesonInterface {
    return new utils.Interface(_abi) as UpgradableMesonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableMeson {
    return new Contract(address, _abi, signerOrProvider) as UpgradableMeson;
  }
}
