/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradableMeson,
  UpgradableMesonInterface,
} from "../UpgradableMeson";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "recipientHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getPostedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint200",
        name: "postingValue",
        type: "uint200",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c612e6761004b600039600081816108ec0152818161098201528181610b420152610bd80152612e676000f3fe6080604052600436106101755760003560e01c80638302ce5a116100cb578063b3df5b361161007f578063eba7fb7711610059578063eba7fb7714610509578063f7888aec14610543578063ff3787191461057157600080fd5b8063b3df5b36146103f3578063be18e8a414610441578063e76afb541461046157600080fd5b8063903d4296116100b0578063903d429614610391578063a224cee7146103b1578063b002249d146103d157600080fd5b80638302ce5a146103515780638f487dc91461037157600080fd5b80633659cfe61161012d57806354d6a2b71161010757806354d6a2b7146102f15780636198e339146103115780637c8501871461033157600080fd5b80633659cfe61461029e57806337b90a4f146102be5780634f1ef286146102de57600080fd5b80631e2a60751161015e5780631e2a6075146101eb5780632335093c1461023357806335eff30f1461027e57600080fd5b80630b9b44af1461017a5780631aba3a551461019c575b600080fd5b34801561018657600080fd5b5061019a610195366004612a53565b6105aa565b005b3480156101a857600080fd5b506101d06101b73660046127fb565b60676020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b3480156101f757600080fd5b5061020b6102063660046129de565b610717565b604080516001600160a01b0394851681529390921660208401521515908201526060016101e2565b34801561023f57600080fd5b5061026c61024e3660046127fb565b6001600160a01b031660009081526066602052604090205460ff1690565b60405160ff90911681526020016101e2565b34801561028a57600080fd5b5061019a610299366004612b15565b61078f565b3480156102aa57600080fd5b5061019a6102b93660046127fb565b6108e1565b3480156102ca57600080fd5b5061019a6102d9366004612b38565b610a7f565b61019a6102ec366004612849565b610b37565b3480156102fd57600080fd5b5061019a61030c3660046129de565b610cc2565b34801561031d57600080fd5b5061019a61032c3660046129de565b610e2a565b34801561033d57600080fd5b5061019a61034c3660046129f7565b610fc4565b34801561035d57600080fd5b5061019a61036c366004612aa3565b6111a0565b34801561037d57600080fd5b5061019a61038c366004612b38565b611433565b34801561039d57600080fd5b5061019a6103ac366004612b73565b611696565b3480156103bd57600080fd5b5061019a6103cc36600461290d565b611794565b3480156103dd57600080fd5b506103e66118b8565b6040516101e29190612be8565b3480156103ff57600080fd5b5061042961040e366004612b96565b6068602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e2565b34801561044d57600080fd5b5061019a61045c366004612a53565b6119de565b34801561046d57600080fd5b506104dc61047c3660046129de565b6000908152606b602090815260408083205464ffffffffff60a082901c8116855260689093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316936001600160a01b039091169260c81c90911690565b604080516001600160a01b03948516815293909216602084015264ffffffffff16908201526060016101e2565b34801561051557600080fd5b506040517e3c00000000000000000000000000000000000000000000000000000000000081526020016101e2565b34801561054f57600080fd5b5061056361055e366004612816565b611c4c565b6040519081526020016101e2565b34801561057d57600080fd5b5061042961058c366004612bb1565b60ff166000908152606560205260409020546001600160a01b031690565b6000858152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168061062b5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b1660208201526106829087906034016040516020818303038152906040528051906020012087878786611c9e565b6000868152606b6020908152604080832080547fffff00000000000000000000000000000000000000000000000000000000000016905560ff60188a901c16835260659091529020546001600160a01b03166106e3818460a08a901c611de2565b60405187907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a250505050505050565b6000818152606a60205260408120546001600160a01b03602882901c16919078ffffffffffffffffffffffffffffffffffffffffffffffffff166001811490836107645760009250610787565b64ffffffffff81166000908152606860205260409020546001600160a01b031692505b509193909250565b6000828152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16806108065760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b64ffffffffff81161561085b5760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610622565b6000838152606a602052604080822080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff8616171790555184917f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc991a2505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109805760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610622565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109db7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610a575760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610622565b610a6081611f24565b60408051600080825260208201909252610a7c91839190611f8c565b50565b60008211610acf5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610622565b65ffffffffffff8116600090815260696020526040902054610af190836121a3565b65ffffffffffff8216600090815260696020908152604080832093909355602884901c60ff168252606590522054610b33906001600160a01b03163384612201565b5050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610bd65760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610622565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c317f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610cad5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610622565b610cb682611f24565b610b3382826001611f8c565b6000818152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1660018111610d3c5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b42603083901c64ffffffffff1610610d965760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b65640000000000000000000000006044820152606401610622565b6000828152606a6020908152604080832080547fffffffffffffff0000000000000000000000000000000000000000000000000016905560ff851683526065909152902054610dfb906001600160a01b0390811690602884901c1660a085901c611de2565b60405182907ff6b6b4f7a13f02512c1b3aa8dcc4a07d7775a6a4becbd439efcbd37c5408e67f90600090a25050565b6000818152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1680610ea65760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1611610f395760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610622565b60a081811c64ffffffffff16601084901b65ff000000000016176000818152606960205260409020549091610f71919085901c6121a3565b65ffffffffffff909116600090815260696020908152604080832093909355938152606b90935290912080547fffff00000000000000000000000000000000000000000000000000000000000016905550565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff168061103b5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b611047610e1042612cd5565b603088901c64ffffffffff161015611092576000878152606a6020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001690556110ca565b6000878152606a6020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001660011790555b6110f7878787878760288778ffffffffffffffffffffffffffffffffffffffffffffffffff16901c611c9e565b81156111535764ffffffffff8116602888901b65ffffffffffff811682176000908152606960205260409020549117906111359060a08a901c6121a3565b65ffffffffffff909116600090815260696020526040902055611197565b60ff871660009081526065602090815260408083205464ffffffffff85168452606890925290912054611197916001600160a01b03908116911660a08a901c611de2565b50505050505050565b84600881901c61ffff16603c146111f95760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610622565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16156112705760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610622565b60006112874264ffffffffff60308a901c16612d12565b9050610e1081116112da5760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610622565b611c20811061132b5760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610622565b6001600160a01b03602884901c1661134688888888856122f2565b6000888152606a6020908152604080832080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff891617905560ff8b16835260659091529020546113c0906001600160a01b03168260a08b901c612201565b64ffffffffff8416156113fd5760405188907f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc990600090a2611429565b60405188907f5ce4019f772fda6cb703b26bce3ec3006eb36b73f1d3a0eb441213317d9f5e9d90600090a25b5050505050505050565b600082116114835760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610622565b338164ffffffffff81166114d95760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610622565b64ffffffffff81166000908152606860205260409020546001600160a01b0316156115465760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610622565b6001600160a01b03821660009081526067602052604090205464ffffffffff16156115b35760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610622565b64ffffffffff8116600081815260686020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03881690811790915583526067825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff8616825260699052205461164e90856121a3565b65ffffffffffff841660009081526069602090815260408083209390935560ff602887901c168252606590522054611690906001600160a01b03168386612201565b50505050565b3360008181526067602052604090205464ffffffffff16806117205760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610622565b65ff0000000000602884901b1664ffffffffff82161760008181526069602052604090205461174f908661243b565b65ffffffffffff821660009081526069602090815260408083209390935560ff8716825260659052205461178d906001600160a01b03168487611de2565b5050505050565b606c5460ff161561180d5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a65640000000000000000000000000000000000006064820152608401610622565b606c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905561183f3390565b606c60016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060005b81518160ff161015610b33576118a6828260ff168151811061188c5761188c612dc7565b60200260200101518260016118a19190612ced565b612499565b806118b081612d78565b915050611868565b606060015b6101008160ff1610156119635760ff81166000908152606560205260409020546001600160a01b0316611951578060ff16600114156118fa575090565b611905600182612d29565b60ff1667ffffffffffffffff81111561192057611920612df6565b604051908082528060200260200182016040528015611949578160200160208202803683370190505b509150611963565b8061195b81612d78565b9150506118bd565b60015b8160ff168160ff1610156119d95760ff81166000908152606560205260409020546001600160a01b03168361199c600184612d29565b60ff16815181106119af576119af612dc7565b6001600160a01b0390921660209283029190910190910152806119d181612d78565b915050611966565b505090565b84602081901c61ffff16603c14611a375760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610622565b6000868152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615611ab35760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610622565b611ac086868686866122f2565b3360009081526067602052604090205464ffffffffff1680611b4a5760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610622565b65ff0000000000601088901b1664ffffffffff821617600081815260696020526040902054611b7d9060a08a901c61243b565b65ffffffffffff82166000908152606960205260408120919091556001600160a01b0385169060c8611bb16104b042612cd5565b60008c8152606b602052604080822080547fffff000000000000000000000000000000000000000000000000000000000000167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94851690951b959095179590951790911691909117909155905189917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a25050505050505050565b6001600160a01b038281166000908152606660209081526040808320549385168352606782528083205464ffffffffff1660289490941b65ff0000000000169390931782526069905220545b92915050565b6001600160a01b038116611cf45760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610622565b60008681526020868152604080832082527f5ef297f2881340f11ed62c7c08e0e0c235c333ad8f340d7285f529f16716968a8352808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa158015611d78573d6000803e3d6000fd5b505050602060405103516001600160a01b0316826001600160a01b0316146111975760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610622565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611e6c9190612bcc565b6000604051808303816000865af19150503d8060008114611ea9576040519150601f19603f3d011682016040523d82523d6000602084013e611eae565b606091505b5091509150818015611ed8575080511580611ed8575080806020019051810190611ed891906129c1565b61178d5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610622565b606c5461010090046001600160a01b0316336001600160a01b031614610a7c5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610622565b6000611fbf7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611fca8461256a565b600083511180611fd75750815b15611fe857611fe68484612637565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661178d5780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781556040516001600160a01b03831660248201526120d1908690604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe600000000000000000000000000000000000000000000000000000000179052612637565b5080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b0383811691161461219a5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610622565b61178d85612739565b6000826121b08382612cd5565b9150811015611c985760405162461bcd60e51b815260206004820152600860248201527f6f766572666c6f770000000000000000000000000000000000000000000000006044820152606401610622565b600081116122515760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610622565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b1580156122ba57600080fd5b505af11580156122ce573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169091906129c1565b6001600160a01b0381166123485760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610622565b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc82526040808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa1580156123c9573d6000803e3d6000fd5b505050602060405103516001600160a01b0316826001600160a01b0316146124335760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610622565b505050505050565b6000826124488382612d12565b9150811115611c985760405162461bcd60e51b815260206004820152600960248201527f756e646572666c6f7700000000000000000000000000000000000000000000006044820152606401610622565b60ff81166124e95760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e64657800000000006044820152606401610622565b6001600160a01b039091166000818152606660209081526040808320805460ff9096167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090961686179055938252606590529190912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b803b6125de5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610622565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060823b6126ad5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610622565b600080846001600160a01b0316846040516126c89190612bcc565b600060405180830381855af49150503d8060008114612703576040519150601f19603f3d011682016040523d82523d6000602084013e612708565b606091505b50915091506127308282604051806060016040528060278152602001612e3460279139612779565b95945050505050565b6127428161256a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606083156127885750816127b2565b8251156127985782518084602001fd5b8160405162461bcd60e51b81526004016106229190612c35565b9392505050565b80356001600160a01b03811681146127d057600080fd5b919050565b803564ffffffffff811681146127d057600080fd5b803560ff811681146127d057600080fd5b60006020828403121561280d57600080fd5b6127b2826127b9565b6000806040838503121561282957600080fd5b612832836127b9565b9150612840602084016127b9565b90509250929050565b6000806040838503121561285c57600080fd5b612865836127b9565b915060208084013567ffffffffffffffff8082111561288357600080fd5b818601915086601f83011261289757600080fd5b8135818111156128a9576128a9612df6565b6128d9847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612c86565b915080825287848285010111156128ef57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000602080838503121561292057600080fd5b823567ffffffffffffffff8082111561293857600080fd5b818501915085601f83011261294c57600080fd5b81358181111561295e5761295e612df6565b8060051b915061296f848301612c86565b8181528481019084860184860187018a101561298a57600080fd5b600095505b838610156129b4576129a0816127b9565b83526001959095019491860191860161298f565b5098975050505050505050565b6000602082840312156129d357600080fd5b81516127b281612e25565b6000602082840312156129f057600080fd5b5035919050565b60008060008060008060c08789031215612a1057600080fd5b86359550602087013594506040870135935060608701359250612a35608088016127ea565b915060a0870135612a4581612e25565b809150509295509295509295565b600080600080600060a08688031215612a6b57600080fd5b853594506020860135935060408601359250612a89606087016127ea565b9150612a97608087016127b9565b90509295509295909350565b600080600080600060a08688031215612abb57600080fd5b853594506020860135935060408601359250612ad9606087016127ea565b9150608086013578ffffffffffffffffffffffffffffffffffffffffffffffffff81168114612b0757600080fd5b809150509295509295909350565b60008060408385031215612b2857600080fd5b82359150612840602084016127d5565b60008060408385031215612b4b57600080fd5b82359150602083013565ffffffffffff81168114612b6857600080fd5b809150509250929050565b60008060408385031215612b8657600080fd5b82359150612840602084016127ea565b600060208284031215612ba857600080fd5b6127b2826127d5565b600060208284031215612bc357600080fd5b6127b2826127ea565b60008251612bde818460208701612d4c565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612c295783516001600160a01b031683529284019291840191600101612c04565b50909695505050505050565b6020815260008251806020840152612c54816040850160208701612d4c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612ccd57612ccd612df6565b604052919050565b60008219821115612ce857612ce8612d98565b500190565b600060ff821660ff84168060ff03821115612d0a57612d0a612d98565b019392505050565b600082821015612d2457612d24612d98565b500390565b600060ff821660ff841680821015612d4357612d43612d98565b90039392505050565b60005b83811015612d67578181015183820152602001612d4f565b838111156116905750506000910152565b600060ff821660ff811415612d8f57612d8f612d98565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8015158114610a7c57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000806000a";

type UpgradableMesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradableMesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradableMeson__factory extends ContractFactory {
  constructor(...args: UpgradableMesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableMeson> {
    return super.deploy(overrides || {}) as Promise<UpgradableMeson>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableMeson {
    return super.attach(address) as UpgradableMeson;
  }
  connect(signer: Signer): UpgradableMeson__factory {
    return super.connect(signer) as UpgradableMeson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableMesonInterface {
    return new utils.Interface(_abi) as UpgradableMesonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableMeson {
    return new Contract(address, _abi, signerOrProvider) as UpgradableMeson;
  }
}
