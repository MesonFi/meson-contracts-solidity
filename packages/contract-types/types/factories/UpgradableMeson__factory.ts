/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradableMeson,
  UpgradableMesonInterface,
} from "../UpgradableMeson";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "recipientHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getPostedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint208",
        name: "packedData",
        type: "uint208",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "requestSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c6130e761004b60003960008181610b6601528181610bfc01528181610dbc0152610e5201526130e76000f3fe6080604052600436106101805760003560e01c80637c850187116100d6578063be18e8a41161007f578063f7888aec11610059578063f7888aec14610546578063ff37871914610574578063ffa96ec4146105ad57600080fd5b8063be18e8a414610444578063e76afb5414610464578063eba7fb771461050c57600080fd5b8063a224cee7116100b0578063a224cee7146103b4578063b002249d146103d4578063b3df5b36146103f657600080fd5b80637c850187146103545780638f487dc914610374578063903d42961461039457600080fd5b806335eff30f116101385780634f1ef286116101125780634f1ef2861461030157806354d6a2b7146103145780636198e3391461033457600080fd5b806335eff30f146102a15780633659cfe6146102c157806337b90a4f146102e157600080fd5b80631e2a6075116101695780631e2a6075146101f65780632217d483146102365780632335093c1461025657600080fd5b80630b9b44af146101855780631aba3a55146101a7575b600080fd5b34801561019157600080fd5b506101a56101a0366004612d45565b6105cd565b005b3480156101b357600080fd5b506101db6101c2366004612a8d565b60676020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b34801561020257600080fd5b50610216610211366004612c70565b610743565b604080516001600160a01b039384168152929091166020830152016101ed565b34801561024257600080fd5b506101a5610251366004612c70565b6107b4565b34801561026257600080fd5b5061028f610271366004612a8d565b6001600160a01b031660009081526066602052604090205460ff1690565b60405160ff90911681526020016101ed565b3480156102ad57600080fd5b506101a56102bc366004612d95565b6109fc565b3480156102cd57600080fd5b506101a56102dc366004612a8d565b610b5b565b3480156102ed57600080fd5b506101a56102fc366004612db8565b610cf9565b6101a561030f366004612adb565b610db1565b34801561032057600080fd5b506101a561032f366004612c70565b610f3c565b34801561034057600080fd5b506101a561034f366004612c70565b6110ac565b34801561036057600080fd5b506101a561036f366004612c89565b611246565b34801561038057600080fd5b506101a561038f366004612db8565b611422565b3480156103a057600080fd5b506101a56103af366004612df3565b611685565b3480156103c057600080fd5b506101a56103cf366004612b9f565b611783565b3480156103e057600080fd5b506103e96118a7565b6040516101ed9190612e68565b34801561040257600080fd5b5061042c610411366004612e16565b6068602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101ed565b34801561045057600080fd5b506101a561045f366004612d45565b6119cd565b34801561047057600080fd5b506104df61047f366004612c70565b6000908152606b602090815260408083205464ffffffffff60a082901c8116855260689093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316936001600160a01b039091169260c81c90911690565b604080516001600160a01b03948516815293909216602084015264ffffffffff16908201526060016101ed565b34801561051857600080fd5b506040517e3c00000000000000000000000000000000000000000000000000000000000081526020016101ed565b34801561055257600080fd5b50610566610561366004612aa8565b611c49565b6040519081526020016101ed565b34801561058057600080fd5b5061042c61058f366004612e31565b60ff166000908152606560205260409020546001600160a01b031690565b3480156105b957600080fd5b506101a56105c8366004612ce5565b611c9b565b6000858152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168061064e5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b1660208201526106a59087906034016040516020818303038152906040528051906020012087878786611f00565b6000868152606b6020908152604080832080547fffff00000000000000000000000000000000000000000000000000000000000016905560ff60188a901c16835260659091529020546001600160a01b0316610706818460a08a901c612044565b6040518781527ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad2906020015b60405180910390a150505050505050565b6000818152606a60205260408120546001600160a01b03602882901c16919078ffffffffffffffffffffffffffffffffffffffffffffffffff168261078b57600091506107ae565b64ffffffffff81166000908152606860205260409020546001600160a01b031691505b50915091565b80600881901c61ffff16603c1461080d5760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610645565b6000828152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16156108845760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610645565b600061089b4264ffffffffff603086901c16612f92565b9050610e1081116108ee5760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610645565b611c20811061093f5760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610645565b6000336000858152606a6020908152604080832080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffff0000000000602887901b1617905560ff8816835260659091529020549091506109c3906001600160a01b03168260a087901c6121b6565b6040518481527fffb55ec353614a34485412bc8d469fe16d3c7f0a963be6dd266938f8ff7d6c3f9060200160405180910390a150505050565b6000828152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1680610a735760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610645565b64ffffffffff811615610ac85760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610645565b6000838152606a602090815260409182902080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff86161717905590518481527f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc9910160405180910390a1505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610bfa5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610645565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610cd15760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610645565b610cda816122a7565b60408051600080825260208201909252610cf69183919061230f565b50565b60008211610d495760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610645565b65ffffffffffff8116600090815260696020526040902054610d6b9083612526565b65ffffffffffff8216600090815260696020908152604080832093909355602884901c60ff168252606590522054610dad906001600160a01b031633846121b6565b5050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610e505760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610645565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610eab7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610f275760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610645565b610f30826122a7565b610dad8282600161230f565b6000818152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1660018111610fb65760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610645565b42603083901c64ffffffffff16106110105760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b65640000000000000000000000006044820152606401610645565b6000828152606a6020908152604080832080547fffffffffffffff0000000000000000000000000000000000000000000000000016905560ff851683526065909152902054611075906001600160a01b0390811690602884901c1660a085901c612044565b6040518281527ff6b6b4f7a13f02512c1b3aa8dcc4a07d7775a6a4becbd439efcbd37c5408e67f9060200160405180910390a15050565b6000818152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16806111285760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610645565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16116111bb5760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610645565b60a081811c64ffffffffff16601084901b65ff0000000000161760008181526069602052604090205490916111f3919085901c612526565b65ffffffffffff909116600090815260696020908152604080832093909355938152606b90935290912080547fffff00000000000000000000000000000000000000000000000000000000000016905550565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16806112bd5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610645565b6112c9610e1042612f55565b603088901c64ffffffffff161015611314576000878152606a6020526040902080547fffffffffffffff0000000000000000000000000000000000000000000000000016905561134c565b6000878152606a6020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001660011790555b611379878787878760288778ffffffffffffffffffffffffffffffffffffffffffffffffff16901c611f00565b81156113d55764ffffffffff8116602888901b65ffffffffffff811682176000908152606960205260409020549117906113b79060a08a901c612526565b65ffffffffffff909116600090815260696020526040902055611419565b60ff871660009081526065602090815260408083205464ffffffffff85168452606890925290912054611419916001600160a01b03908116911660a08a901c612044565b50505050505050565b600082116114725760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610645565b338164ffffffffff81166114c85760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610645565b64ffffffffff81166000908152606860205260409020546001600160a01b0316156115355760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610645565b6001600160a01b03821660009081526067602052604090205464ffffffffff16156115a25760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610645565b64ffffffffff8116600081815260686020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03881690811790915583526067825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff8616825260699052205461163d9085612526565b65ffffffffffff841660009081526069602090815260408083209390935560ff602887901c16825260659052205461167f906001600160a01b031683866121b6565b50505050565b3360008181526067602052604090205464ffffffffff168061170f5760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610645565b65ff0000000000602884901b1664ffffffffff82161760008181526069602052604090205461173e9086612584565b65ffffffffffff821660009081526069602090815260408083209390935560ff8716825260659052205461177c906001600160a01b03168487612044565b5050505050565b606c5460ff16156117fc5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a65640000000000000000000000000000000000006064820152608401610645565b606c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905561182e3390565b606c60016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060005b81518160ff161015610dad57611895828260ff168151811061187b5761187b613047565b60200260200101518260016118909190612f6d565b6125e2565b8061189f81612ff8565b915050611857565b606060015b6101008160ff1610156119525760ff81166000908152606560205260409020546001600160a01b0316611940578060ff16600114156118e9575090565b6118f4600182612fa9565b60ff1667ffffffffffffffff81111561190f5761190f613076565b604051908082528060200260200182016040528015611938578160200160208202803683370190505b509150611952565b8061194a81612ff8565b9150506118ac565b60015b8160ff168160ff1610156119c85760ff81166000908152606560205260409020546001600160a01b03168361198b600184612fa9565b60ff168151811061199e5761199e613047565b6001600160a01b0390921660209283029190910190910152806119c081612ff8565b915050611955565b505090565b84602081901c61ffff16603c14611a265760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610645565b6000868152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615611aa25760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610645565b611aaf86868686866126b3565b3360009081526067602052604090205464ffffffffff1680611b395760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610645565b65ff0000000000601088901b1664ffffffffff821617600081815260696020526040902054611b6c9060a08a901c612584565b65ffffffffffff82166000908152606960205260408120919091556001600160a01b0385169060c8611ba06104b042612f55565b60008c8152606b60205260409081902080547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93841690941b9490941794909417167fffff000000000000000000000000000000000000000000000000000000000000909116179055517fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb490611c37908a815260200190565b60405180910390a15050505050505050565b6001600160a01b038281166000908152606660209081526040808320549385168352606782528083205464ffffffffff1660289490941b65ff0000000000169390931782526069905220545b92915050565b83600881901c61ffff16603c14611cf45760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610645565b6000858152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1615611d6b5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610645565b6000611d824264ffffffffff603089901c16612f92565b9050610e108111611dd55760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610645565b611c208110611e265760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610645565b74ffffffffffffffffffffffffffffffffffffffffff602884901c16611e5687878760ff60c889901c16856126b3565b6000878152606a6020908152604080832080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff891617905560ff8a1683526065909152902054611ed0906001600160a01b03168260a08a901c6121b6565b6040518781527f5ce4019f772fda6cb703b26bce3ec3006eb36b73f1d3a0eb441213317d9f5e9d90602001610732565b6001600160a01b038116611f565760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610645565b60008681526020868152604080832082527f5ef297f2881340f11ed62c7c08e0e0c235c333ad8f340d7285f529f16716968a8352808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa158015611fda573d6000803e3d6000fd5b505050602060405103516001600160a01b0316826001600160a01b0316146114195760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610645565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916120fe9190612e4c565b6000604051808303816000865af19150503d806000811461213b576040519150601f19603f3d011682016040523d82523d6000602084013e612140565b606091505b509150915081801561216a57508051158061216a57508080602001905181019061216a9190612c53565b61177c5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610645565b600081116122065760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610645565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b15801561226f57600080fd5b505af1158015612283573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167f9190612c53565b606c5461010090046001600160a01b0316336001600160a01b031614610cf65760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610645565b60006123427f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905061234d846127fc565b60008351118061235a5750815b1561236b5761236984846128c9565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661177c5780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781556040516001600160a01b0383166024820152612454908690604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe6000000000000000000000000000000000000000000000000000000001790526128c9565b5080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b0383811691161461251d5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610645565b61177c856129cb565b6000826125338382612f55565b9150811015611c955760405162461bcd60e51b815260206004820152600860248201527f6f766572666c6f770000000000000000000000000000000000000000000000006044820152606401610645565b6000826125918382612f92565b9150811115611c955760405162461bcd60e51b815260206004820152600960248201527f756e646572666c6f7700000000000000000000000000000000000000000000006044820152606401610645565b60ff81166126325760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e64657800000000006044820152606401610645565b6001600160a01b039091166000818152606660209081526040808320805460ff9096167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090961686179055938252606590529190912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b6001600160a01b0381166127095760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610645565b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc82526040808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa15801561278a573d6000803e3d6000fd5b505050602060405103516001600160a01b0316826001600160a01b0316146127f45760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610645565b505050505050565b803b6128705760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610645565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060823b61293f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610645565b600080846001600160a01b03168460405161295a9190612e4c565b600060405180830381855af49150503d8060008114612995576040519150601f19603f3d011682016040523d82523d6000602084013e61299a565b606091505b50915091506129c282826040518060600160405280602781526020016130b460279139612a0b565b95945050505050565b6129d4816127fc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60608315612a1a575081612a44565b825115612a2a5782518084602001fd5b8160405162461bcd60e51b81526004016106459190612eb5565b9392505050565b80356001600160a01b0381168114612a6257600080fd5b919050565b803564ffffffffff81168114612a6257600080fd5b803560ff81168114612a6257600080fd5b600060208284031215612a9f57600080fd5b612a4482612a4b565b60008060408385031215612abb57600080fd5b612ac483612a4b565b9150612ad260208401612a4b565b90509250929050565b60008060408385031215612aee57600080fd5b612af783612a4b565b915060208084013567ffffffffffffffff80821115612b1557600080fd5b818601915086601f830112612b2957600080fd5b813581811115612b3b57612b3b613076565b612b6b847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612f06565b91508082528784828501011115612b8157600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020808385031215612bb257600080fd5b823567ffffffffffffffff80821115612bca57600080fd5b818501915085601f830112612bde57600080fd5b813581811115612bf057612bf0613076565b8060051b9150612c01848301612f06565b8181528481019084860184860187018a1015612c1c57600080fd5b600095505b83861015612c4657612c3281612a4b565b835260019590950194918601918601612c21565b5098975050505050505050565b600060208284031215612c6557600080fd5b8151612a44816130a5565b600060208284031215612c8257600080fd5b5035919050565b60008060008060008060c08789031215612ca257600080fd5b86359550602087013594506040870135935060608701359250612cc760808801612a7c565b915060a0870135612cd7816130a5565b809150509295509295509295565b60008060008060808587031215612cfb57600080fd5b843593506020850135925060408501359150606085013579ffffffffffffffffffffffffffffffffffffffffffffffffffff81168114612d3a57600080fd5b939692955090935050565b600080600080600060a08688031215612d5d57600080fd5b853594506020860135935060408601359250612d7b60608701612a7c565b9150612d8960808701612a4b565b90509295509295909350565b60008060408385031215612da857600080fd5b82359150612ad260208401612a67565b60008060408385031215612dcb57600080fd5b82359150602083013565ffffffffffff81168114612de857600080fd5b809150509250929050565b60008060408385031215612e0657600080fd5b82359150612ad260208401612a7c565b600060208284031215612e2857600080fd5b612a4482612a67565b600060208284031215612e4357600080fd5b612a4482612a7c565b60008251612e5e818460208701612fcc565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612ea95783516001600160a01b031683529284019291840191600101612e84565b50909695505050505050565b6020815260008251806020840152612ed4816040850160208701612fcc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612f4d57612f4d613076565b604052919050565b60008219821115612f6857612f68613018565b500190565b600060ff821660ff84168060ff03821115612f8a57612f8a613018565b019392505050565b600082821015612fa457612fa4613018565b500390565b600060ff821660ff841680821015612fc357612fc3613018565b90039392505050565b60005b83811015612fe7578181015183820152602001612fcf565b8381111561167f5750506000910152565b600060ff821660ff81141561300f5761300f613018565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8015158114610cf657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000806000a";

type UpgradableMesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradableMesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradableMeson__factory extends ContractFactory {
  constructor(...args: UpgradableMesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableMeson> {
    return super.deploy(overrides || {}) as Promise<UpgradableMeson>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableMeson {
    return super.attach(address) as UpgradableMeson;
  }
  connect(signer: Signer): UpgradableMeson__factory {
    return super.connect(signer) as UpgradableMeson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableMesonInterface {
    return new utils.Interface(_abi) as UpgradableMesonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableMeson {
    return new Contract(address, _abi, signerOrProvider) as UpgradableMeson;
  }
}
