/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradableMeson,
  UpgradableMesonInterface,
} from "../UpgradableMeson";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "recipientHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getSwapRequest",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint208",
        name: "packedData",
        type: "uint208",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c612e5361004b6000396000818161088a0152818161092001528181610b580152610bee0152612e536000f3fe6080604052600436106101755760003560e01c80638f487dc9116100cb578063be18e8a41161007f578063f7888aec11610059578063f7888aec14610523578063ff37871914610551578063ffa96ec41461058a57600080fd5b8063be18e8a414610421578063e76afb5414610441578063eba7fb77146104e957600080fd5b8063a224cee7116100b0578063a224cee714610391578063b002249d146103b1578063b3df5b36146103d357600080fd5b80638f487dc914610351578063903d42961461037157600080fd5b806337b90a4f1161012d57806354d6a2b71161010757806354d6a2b7146102f15780636198e339146103115780637c8501871461033157600080fd5b806337b90a4f146102765780634a23656d146102965780634f1ef286146102de57600080fd5b80632335093c1161015e5780632335093c146101eb57806335eff30f146102365780633659cfe61461025657600080fd5b80630b9b44af1461017a5780631aba3a551461019c575b600080fd5b34801561018657600080fd5b5061019a610195366004612ab1565b6105aa565b005b3480156101a857600080fd5b506101d06101b73660046127f9565b60676020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b3480156101f757600080fd5b506102246102063660046127f9565b6001600160a01b031660009081526066602052604090205460ff1690565b60405160ff90911681526020016101e2565b34801561024257600080fd5b5061019a610251366004612b01565b610720565b34801561026257600080fd5b5061019a6102713660046127f9565b61087f565b34801561028257600080fd5b5061019a610291366004612b24565b610a1d565b3480156102a257600080fd5b506102b66102b13660046129dc565b610ad5565b604080516001600160a01b0394851681529390921660208401521515908201526060016101e2565b61019a6102ec366004612847565b610b4d565b3480156102fd57600080fd5b5061019a61030c3660046129dc565b610cd8565b34801561031d57600080fd5b5061019a61032c3660046129dc565b610e48565b34801561033d57600080fd5b5061019a61034c3660046129f5565b610fe2565b34801561035d57600080fd5b5061019a61036c366004612b24565b6111be565b34801561037d57600080fd5b5061019a61038c366004612b5f565b611421565b34801561039d57600080fd5b5061019a6103ac36600461290b565b61151f565b3480156103bd57600080fd5b506103c6611643565b6040516101e29190612bd4565b3480156103df57600080fd5b506104096103ee366004612b82565b6068602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e2565b34801561042d57600080fd5b5061019a61043c366004612ab1565b611769565b34801561044d57600080fd5b506104bc61045c3660046129dc565b6000908152606b602090815260408083205464ffffffffff60a082901c8116855260689093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316936001600160a01b039091169260c81c90911690565b604080516001600160a01b03948516815293909216602084015264ffffffffff16908201526060016101e2565b3480156104f557600080fd5b506040517e3c00000000000000000000000000000000000000000000000000000000000081526020016101e2565b34801561052f57600080fd5b5061054361053e366004612814565b6119e5565b6040519081526020016101e2565b34801561055d57600080fd5b5061040961056c366004612b9d565b60ff166000908152606560205260409020546001600160a01b031690565b34801561059657600080fd5b5061019a6105a5366004612a51565b611a37565b6000858152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168061062b5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b1660208201526106829087906034016040516020818303038152906040528051906020012087878786611c9c565b6000868152606b6020908152604080832080547fffff00000000000000000000000000000000000000000000000000000000000016905560ff60188a901c16835260659091529020546001600160a01b03166106e3818460a08a901c611de0565b6040518781527ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad2906020015b60405180910390a150505050505050565b6000828152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16806107975760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b64ffffffffff8116156107ec5760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610622565b6000838152606a602090815260409182902080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff86161717905590518481527f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc9910160405180910390a1505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561091e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610622565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109797f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146109f55760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610622565b6109fe81611f22565b60408051600080825260208201909252610a1a91839190611f8a565b50565b60008211610a6d5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610622565b65ffffffffffff8116600090815260696020526040902054610a8f90836121a1565b65ffffffffffff8216600090815260696020908152604080832093909355602884901c60ff168252606590522054610ad1906001600160a01b031633846121ff565b5050565b6000818152606a60205260408120546001600160a01b03602882901c16919078ffffffffffffffffffffffffffffffffffffffffffffffffff16600181149083610b225760009250610b45565b64ffffffffff81166000908152606860205260409020546001600160a01b031692505b509193909250565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610bec5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610622565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c477f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610cc35760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610622565b610ccc82611f22565b610ad182826001611f8a565b6000818152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1660018111610d525760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b42603083901c64ffffffffff1610610dac5760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b65640000000000000000000000006044820152606401610622565b6000828152606a6020908152604080832080547fffffffffffffff0000000000000000000000000000000000000000000000000016905560ff851683526065909152902054610e11906001600160a01b0390811690602884901c1660a085901c611de0565b6040518281527ff6b6b4f7a13f02512c1b3aa8dcc4a07d7775a6a4becbd439efcbd37c5408e67f9060200160405180910390a15050565b6000818152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1680610ec45760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1611610f575760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610622565b60a081811c64ffffffffff16601084901b65ff000000000016176000818152606960205260409020549091610f8f919085901c6121a1565b65ffffffffffff909116600090815260696020908152604080832093909355938152606b90935290912080547fffff00000000000000000000000000000000000000000000000000000000000016905550565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16806110595760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610622565b611065610e1042612cc1565b603088901c64ffffffffff1610156110b0576000878152606a6020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001690556110e8565b6000878152606a6020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001660011790555b611115878787878760288778ffffffffffffffffffffffffffffffffffffffffffffffffff16901c611c9c565b81156111715764ffffffffff8116602888901b65ffffffffffff811682176000908152606960205260409020549117906111539060a08a901c6121a1565b65ffffffffffff9091166000908152606960205260409020556111b5565b60ff871660009081526065602090815260408083205464ffffffffff851684526068909252909120546111b5916001600160a01b03908116911660a08a901c611de0565b50505050505050565b6000821161120e5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610622565b338164ffffffffff81166112645760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610622565b64ffffffffff81166000908152606860205260409020546001600160a01b0316156112d15760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610622565b6001600160a01b03821660009081526067602052604090205464ffffffffff161561133e5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610622565b64ffffffffff8116600081815260686020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03881690811790915583526067825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff861682526069905220546113d990856121a1565b65ffffffffffff841660009081526069602090815260408083209390935560ff602887901c16825260659052205461141b906001600160a01b031683866121ff565b50505050565b3360008181526067602052604090205464ffffffffff16806114ab5760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610622565b65ff0000000000602884901b1664ffffffffff8216176000818152606960205260409020546114da90866122f0565b65ffffffffffff821660009081526069602090815260408083209390935560ff87168252606590522054611518906001600160a01b03168487611de0565b5050505050565b606c5460ff16156115985760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a65640000000000000000000000000000000000006064820152608401610622565b606c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556115ca3390565b606c60016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060005b81518160ff161015610ad157611631828260ff168151811061161757611617612db3565b602002602001015182600161162c9190612cd9565b61234e565b8061163b81612d64565b9150506115f3565b606060015b6101008160ff1610156116ee5760ff81166000908152606560205260409020546001600160a01b03166116dc578060ff1660011415611685575090565b611690600182612d15565b60ff1667ffffffffffffffff8111156116ab576116ab612de2565b6040519080825280602002602001820160405280156116d4578160200160208202803683370190505b5091506116ee565b806116e681612d64565b915050611648565b60015b8160ff168160ff1610156117645760ff81166000908152606560205260409020546001600160a01b031683611727600184612d15565b60ff168151811061173a5761173a612db3565b6001600160a01b03909216602092830291909101909101528061175c81612d64565b9150506116f1565b505090565b84602081901c61ffff16603c146117c25760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610622565b6000868152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff161561183e5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610622565b61184b868686868661241f565b3360009081526067602052604090205464ffffffffff16806118d55760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610622565b65ff0000000000601088901b1664ffffffffff8216176000818152606960205260409020546119089060a08a901c6122f0565b65ffffffffffff82166000908152606960205260408120919091556001600160a01b0385169060c861193c6104b042612cc1565b60008c8152606b60205260409081902080547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93841690941b9490941794909417167fffff000000000000000000000000000000000000000000000000000000000000909116179055517fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb4906119d3908a815260200190565b60405180910390a15050505050505050565b6001600160a01b038281166000908152606660209081526040808320549385168352606782528083205464ffffffffff1660289490941b65ff0000000000169390931782526069905220545b92915050565b83600881901c61ffff16603c14611a905760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610622565b6000858152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1615611b075760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610622565b6000611b1e4264ffffffffff603089901c16612cfe565b9050610e108111611b715760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610622565b611c208110611bc25760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610622565b74ffffffffffffffffffffffffffffffffffffffffff602884901c16611bf287878760ff60c889901c168561241f565b6000878152606a6020908152604080832080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff891617905560ff8a1683526065909152902054611c6c906001600160a01b03168260a08a901c6121ff565b6040518781527f5ce4019f772fda6cb703b26bce3ec3006eb36b73f1d3a0eb441213317d9f5e9d9060200161070f565b6001600160a01b038116611cf25760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610622565b60008681526020868152604080832082527f5ef297f2881340f11ed62c7c08e0e0c235c333ad8f340d7285f529f16716968a8352808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa158015611d76573d6000803e3d6000fd5b505050602060405103516001600160a01b0316826001600160a01b0316146111b55760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610622565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611e6a9190612bb8565b6000604051808303816000865af19150503d8060008114611ea7576040519150601f19603f3d011682016040523d82523d6000602084013e611eac565b606091505b5091509150818015611ed6575080511580611ed6575080806020019051810190611ed691906129bf565b6115185760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610622565b606c5461010090046001600160a01b0316336001600160a01b031614610a1a5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610622565b6000611fbd7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611fc884612568565b600083511180611fd55750815b15611fe657611fe48484612635565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166115185780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781556040516001600160a01b03831660248201526120cf908690604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe600000000000000000000000000000000000000000000000000000000179052612635565b5080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146121985760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610622565b61151885612737565b6000826121ae8382612cc1565b9150811015611a315760405162461bcd60e51b815260206004820152600860248201527f6f766572666c6f770000000000000000000000000000000000000000000000006044820152606401610622565b6000811161224f5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610622565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b1580156122b857600080fd5b505af11580156122cc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141b91906129bf565b6000826122fd8382612cfe565b9150811115611a315760405162461bcd60e51b815260206004820152600960248201527f756e646572666c6f7700000000000000000000000000000000000000000000006044820152606401610622565b60ff811661239e5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e64657800000000006044820152606401610622565b6001600160a01b039091166000818152606660209081526040808320805460ff9096167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090961686179055938252606590529190912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b6001600160a01b0381166124755760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610622565b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc82526040808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa1580156124f6573d6000803e3d6000fd5b505050602060405103516001600160a01b0316826001600160a01b0316146125605760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610622565b505050505050565b803b6125dc5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610622565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060823b6126ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610622565b600080846001600160a01b0316846040516126c69190612bb8565b600060405180830381855af49150503d8060008114612701576040519150601f19603f3d011682016040523d82523d6000602084013e612706565b606091505b509150915061272e8282604051806060016040528060278152602001612e2060279139612777565b95945050505050565b61274081612568565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606083156127865750816127b0565b8251156127965782518084602001fd5b8160405162461bcd60e51b81526004016106229190612c21565b9392505050565b80356001600160a01b03811681146127ce57600080fd5b919050565b803564ffffffffff811681146127ce57600080fd5b803560ff811681146127ce57600080fd5b60006020828403121561280b57600080fd5b6127b0826127b7565b6000806040838503121561282757600080fd5b612830836127b7565b915061283e602084016127b7565b90509250929050565b6000806040838503121561285a57600080fd5b612863836127b7565b915060208084013567ffffffffffffffff8082111561288157600080fd5b818601915086601f83011261289557600080fd5b8135818111156128a7576128a7612de2565b6128d7847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612c72565b915080825287848285010111156128ed57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000602080838503121561291e57600080fd5b823567ffffffffffffffff8082111561293657600080fd5b818501915085601f83011261294a57600080fd5b81358181111561295c5761295c612de2565b8060051b915061296d848301612c72565b8181528481019084860184860187018a101561298857600080fd5b600095505b838610156129b25761299e816127b7565b83526001959095019491860191860161298d565b5098975050505050505050565b6000602082840312156129d157600080fd5b81516127b081612e11565b6000602082840312156129ee57600080fd5b5035919050565b60008060008060008060c08789031215612a0e57600080fd5b86359550602087013594506040870135935060608701359250612a33608088016127e8565b915060a0870135612a4381612e11565b809150509295509295509295565b60008060008060808587031215612a6757600080fd5b843593506020850135925060408501359150606085013579ffffffffffffffffffffffffffffffffffffffffffffffffffff81168114612aa657600080fd5b939692955090935050565b600080600080600060a08688031215612ac957600080fd5b853594506020860135935060408601359250612ae7606087016127e8565b9150612af5608087016127b7565b90509295509295909350565b60008060408385031215612b1457600080fd5b8235915061283e602084016127d3565b60008060408385031215612b3757600080fd5b82359150602083013565ffffffffffff81168114612b5457600080fd5b809150509250929050565b60008060408385031215612b7257600080fd5b8235915061283e602084016127e8565b600060208284031215612b9457600080fd5b6127b0826127d3565b600060208284031215612baf57600080fd5b6127b0826127e8565b60008251612bca818460208701612d38565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612c155783516001600160a01b031683529284019291840191600101612bf0565b50909695505050505050565b6020815260008251806020840152612c40816040850160208701612d38565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612cb957612cb9612de2565b604052919050565b60008219821115612cd457612cd4612d84565b500190565b600060ff821660ff84168060ff03821115612cf657612cf6612d84565b019392505050565b600082821015612d1057612d10612d84565b500390565b600060ff821660ff841680821015612d2f57612d2f612d84565b90039392505050565b60005b83811015612d53578181015183820152602001612d3b565b8381111561141b5750506000910152565b600060ff821660ff811415612d7b57612d7b612d84565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8015158114610a1a57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000806000a";

type UpgradableMesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradableMesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradableMeson__factory extends ContractFactory {
  constructor(...args: UpgradableMesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableMeson> {
    return super.deploy(overrides || {}) as Promise<UpgradableMeson>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableMeson {
    return super.attach(address) as UpgradableMeson;
  }
  connect(signer: Signer): UpgradableMeson__factory {
    return super.connect(signer) as UpgradableMeson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableMesonInterface {
    return new utils.Interface(_abi) as UpgradableMesonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableMeson {
    return new Contract(address, _abi, signerOrProvider) as UpgradableMeson;
  }
}
