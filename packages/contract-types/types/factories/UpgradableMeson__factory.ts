/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradableMeson,
  UpgradableMesonInterface,
} from "../UpgradableMeson";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "recipientHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getPostedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint200",
        name: "postingValue",
        type: "uint200",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c61300061004b600039600081816109b001528181610a4601528181610bf90152610c8f01526130006000f3fe6080604052600436106101805760003560e01c80638302ce5a116100d6578063be18e8a41161007f578063eba7fb7711610059578063eba7fb771461055a578063f7888aec14610594578063ff378719146105b457600080fd5b8063be18e8a41461044c578063e16a567d1461046c578063e76afb54146104b257600080fd5b8063a224cee7116100b0578063a224cee7146103bc578063b002249d146103dc578063b3df5b36146103fe57600080fd5b80638302ce5a1461035c5780638f487dc91461037c578063903d42961461039c57600080fd5b80633659cfe61161013857806354d6a2b71161011257806354d6a2b7146102fc5780636198e3391461031c5780637c8501871461033c57600080fd5b80633659cfe6146102a957806337b90a4f146102c95780634f1ef286146102e957600080fd5b80631e2a6075116101695780631e2a6075146101f65780632335093c1461023e57806335eff30f1461028957600080fd5b80630b9b44af146101855780631aba3a55146101a7575b600080fd5b34801561019157600080fd5b506101a56101a0366004612bec565b6105ed565b005b3480156101b357600080fd5b506101db6101c2366004612994565b60676020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b34801561020257600080fd5b50610216610211366004612b77565b610773565b604080516001600160a01b0394851681529390921660208401521515908201526060016101ed565b34801561024a57600080fd5b50610277610259366004612994565b6001600160a01b031660009081526066602052604090205460ff1690565b60405160ff90911681526020016101ed565b34801561029557600080fd5b506101a56102a4366004612cae565b6107eb565b3480156102b557600080fd5b506101a56102c4366004612994565b6109a5565b3480156102d557600080fd5b506101a56102e4366004612cd1565b610b43565b6101a56102f73660046129e2565b610bee565b34801561030857600080fd5b506101a5610317366004612b77565b610d79565b34801561032857600080fd5b506101a5610337366004612b77565b610ef0565b34801561034857600080fd5b506101a5610357366004612b90565b611048565b34801561036857600080fd5b506101a5610377366004612c3c565b6112ac565b34801561038857600080fd5b506101a5610397366004612cd1565b6115a0565b3480156103a857600080fd5b506101a56103b7366004612d0c565b6117f8565b3480156103c857600080fd5b506101a56103d7366004612aa6565b6118e2565b3480156103e857600080fd5b506103f1611a06565b6040516101ed9190612d81565b34801561040a57600080fd5b50610434610419366004612d2f565b6068602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101ed565b34801561045857600080fd5b506101a5610467366004612bec565b611b2c565b34801561047857600080fd5b506104a4610487366004612d4a565b60281b65ff00000000001660009081526069602052604090205490565b6040519081526020016101ed565b3480156104be57600080fd5b5061052d6104cd366004612b77565b6000908152606b602090815260408083205464ffffffffff60a082901c8116855260689093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316936001600160a01b039091169260c81c90911690565b604080516001600160a01b03948516815293909216602084015264ffffffffff16908201526060016101ed565b34801561056657600080fd5b506040517e3c00000000000000000000000000000000000000000000000000000000000081526020016101ed565b3480156105a057600080fd5b506104a46105af3660046129af565b611e05565b3480156105c057600080fd5b506104346105cf366004612d4a565b60ff166000908152606560205260409020546001600160a01b031690565b6000858152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168061066e5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b1660208201526106cb908790603401604051602081830303815290604052805190602001208787876106c68790565b611e88565b6000868152606b6020526040812080547fffff00000000000000000000000000000000000000000000000000000000000016905560658161070c8960181c90565b60ff1681526020810191909152604001600020546001600160a01b0316905061073f818461073a8a60a01c90565b611fda565b60405187907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a250505050505050565b6000818152606a6020526040812054602881901c6001600160a01b0316919078ffffffffffffffffffffffffffffffffffffffffffffffffff166001811490836107c057600092506107e3565b64ffffffffff81166000908152606860205260409020546001600160a01b031692505b509193909250565b6000828152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16806108625760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610665565b8064ffffffffff16156108b75760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610665565b3360009081526067602052604090205464ffffffffff83811691161461091f5760405162461bcd60e51b815260206004820152601860248201527f43616e206f6e6c7920626f756e6420746f207369676e657200000000000000006044820152606401610665565b6000838152606a602052604080822080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff8616171790555184917f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc991a2505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a445760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610665565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a9f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610b1b5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610665565b610b2481612123565b60408051600080825260208201909252610b409183919061218b565b50565b60008211610b935760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610665565b65ffffffffffff811660009081526069602052604081208054849290610bba908490612e6e565b909155505060ff602882901c16600090815260656020526040902054610bea906001600160a01b031633846123a2565b5050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610c8d5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610665565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ce87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610d645760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610665565b610d6d82612123565b610bea8282600161218b565b6000818152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1660018111610df35760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610665565b42603083901c64ffffffffff1610610e4d5760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b65640000000000000000000000006044820152606401610665565b6000828152606a6020908152604080832080547fffffffffffffff0000000000000000000000000000000000000000000000000016905560ff851683526065909152902054610ec1906001600160a01b0390811690602884901c1661073a605886901c64ffffffffff1660a087901c612e6e565b60405182907ff6b6b4f7a13f02512c1b3aa8dcc4a07d7775a6a4becbd439efcbd37c5408e67f90600090a25050565b6000818152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1680610f6c5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610665565b4260c882901c64ffffffffff1610610fc65760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610665565b60a081811c64ffffffffff16601084901b65ff000000000016179083901c65ffffffffffff82166000908152606960205260408120805490919061100b908490612e6e565b909155505050600091825250606b6020526040902080547fffff000000000000000000000000000000000000000000000000000000000000169055565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16806110bf5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610665565b6110cb610e1042612e6e565b603088901c64ffffffffff161015611116576000878152606a6020526040902080547fffffffffffffff0000000000000000000000000000000000000000000000000016905561114e565b6000878152606a6020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001660011790555b6111698787878787602887901c6001600160a01b0316611e88565b60006111758860281b90565b90506000605889901c64ffffffffff1661118f8a60a01c90565b6111999190612e6e565b90506111a58960081c90565b61ffff16603c141580156111c757506111be8960201c90565b61ffff16603c14155b1561121a57647fffffffff60598a901c1680156112185765ffffffffffff831660009081526069602052604081208054839290611205908490612e6e565b9091555061121590508183612eab565b91505b505b83156112615764ffffffffff831665ffffffffffff831681176000908152606960205260408120805492851792849290611255908490612e6e565b909155506112a1915050565b60ff891660009081526065602090815260408083205464ffffffffff871684526068909252909120546112a1916001600160a01b03908116911683611fda565b505050505050505050565b84603c6112b98260081c90565b61ffff161461130a5760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610665565b6000868152606a602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16156113815760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610665565b600061138d8760a01c90565b905064174876e80081111561140a5760405162461bcd60e51b815260206004820152603760248201527f466f7220736563757269747920726561736f6e2c20616d6f756e742063616e6e60448201527f6f742062652067726561746572207468616e203130306b0000000000000000006064820152608401610665565b60006114214264ffffffffff60308b901c16612eab565b9050610e1081116114745760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610665565b611c2081106114c55760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610665565b6001600160a01b03602885901c166114e08989898985612493565b6000898152606a6020908152604080832080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff8a1617905560ff8c168352606590915290205461156a906001600160a01b03168261156560588d901c64ffffffffff1687612e6e565b6123a2565b60405189907f5ce4019f772fda6cb703b26bce3ec3006eb36b73f1d3a0eb441213317d9f5e9d90600090a2505050505050505050565b600082116115f05760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610665565b338164ffffffffff81166116465760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610665565b64ffffffffff81166000908152606860205260409020546001600160a01b0316156116b35760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610665565b6001600160a01b03821660009081526067602052604090205464ffffffffff16156117205760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610665565b64ffffffffff8116600081815260686020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03881690811790915583526067825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff861682526069905290812080548692906117c2908490612e6e565b909155505060ff602884901c166000908152606560205260409020546117f2906001600160a01b031683866123a2565b50505050565b3360008181526067602052604090205464ffffffffff16806118825760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610665565b64ffffffffff8116602884901b65ff00000000001617600090815260696020526040812080548692906118b6908490612eab565b909155505060ff83166000908152606560205260409020546117f2906001600160a01b03168386611fda565b606c5460ff161561195b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a65640000000000000000000000000000000000006064820152608401610665565b606c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905561198d3390565b606c60016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060005b81518160ff161015610bea576119f4828260ff16815181106119da576119da612f60565b60200260200101518260016119ef9190612e86565b6125de565b806119fe81612f11565b9150506119b6565b606060015b6101008160ff161015611ab15760ff81166000908152606560205260409020546001600160a01b0316611a9f578060ff1660011415611a48575090565b611a53600182612ec2565b60ff1667ffffffffffffffff811115611a6e57611a6e612f8f565b604051908082528060200260200182016040528015611a97578160200160208202803683370190505b509150611ab1565b80611aa981612f11565b915050611a0b565b60015b8160ff168160ff161015611b275760ff81166000908152606560205260409020546001600160a01b031683611aea600184612ec2565b60ff1681518110611afd57611afd612f60565b6001600160a01b039092166020928302919091019091015280611b1f81612f11565b915050611ab4565b505090565b84603c611b398260201c90565b61ffff1614611b8a5760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610665565b6000868152606b60205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615611c065760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610665565b611c138686868686612493565b3360009081526067602052604090205464ffffffffff1680611c9d5760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610665565b6000611cab6104b042612e6e565b9050603088901c64ffffffffff168110611d2d5760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74206c6f636b20626563617573652065787069726554732069732060448201527f736f6f6e2e0000000000000000000000000000000000000000000000000000006064820152608401610665565b65ff0000000000601089901b1664ffffffffff8316176000818152606960205260408120805460a08c901c9290611d65908490612eab565b90915550611d7690508284876126af565b60008a8152606b602052604080822080547fffff000000000000000000000000000000000000000000000000000000000000167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff949094169390931790925590518a917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a2505050505050505050565b6001600160a01b0380831660009081526066602090815260408083205493851683526067909152812054909160ff169064ffffffffff16801580611e4a575060ff8216155b15611e5a57600092505050611e82565b64ffffffffff1660289190911b65ff0000000000161760009081526069602052604090205490505b92915050565b6001600160a01b038116611ede5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610665565b60008681526020868152604080832082527f245d0b306958178c99fe38132cee72cfd0c1c10b4d7c67cbbd322d6b1af894f9808452818420825194855292840180835283905260ff86169184019190915260608301879052608083018690529160019060a0016020604051602081039080840390855afa158015611f66573d6000803e3d6000fd5b505050602060405103516001600160a01b0316836001600160a01b031614611fd05760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610665565b5050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916120649190612d65565b6000604051808303816000865af19150503d80600081146120a1576040519150601f19603f3d011682016040523d82523d6000602084013e6120a6565b606091505b50915091508180156120d05750805115806120d05750808060200190518101906120d09190612b5a565b61211c5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610665565b5050505050565b606c5461010090046001600160a01b0316336001600160a01b031614610b405760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610665565b60006121be7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506121c98461270a565b6000835111806121d65750815b156121e7576121e584846127d7565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661211c5780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781556040516001600160a01b03831660248201526122d0908690604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe6000000000000000000000000000000000000000000000000000000001790526127d7565b5080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146123995760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610665565b61211c856128d9565b600081116123f25760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610665565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b15801561245b57600080fd5b505af115801561246f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f29190612b5a565b6001600160a01b0381166124e95760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610665565b6000858152602080822081527f7b521e60f64ab56ff03ddfb26df49be54b20672b7acfffc1adeb256b554ccb258083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa15801561256b573d6000803e3d6000fd5b505050602060405103516001600160a01b0316836001600160a01b0316146125d55760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610665565b50505050505050565b60ff811661262e5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e64657800000000006044820152606401610665565b6001600160a01b039091166000818152606660209081526040808320805460ff9096167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090961686179055938252606590529190912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b7fffffffffffffff0000000000000000000000000000000000000000000000000060c884901b1678ffffffffff000000000000000000000000000000000000000060a084901b16176001600160a01b038216175b9392505050565b803b61277e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610665565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060823b61284d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610665565b600080846001600160a01b0316846040516128689190612d65565b600060405180830381855af49150503d80600081146128a3576040519150601f19603f3d011682016040523d82523d6000602084013e6128a8565b606091505b50915091506128d08282604051806060016040528060278152602001612fcd60279139612919565b95945050505050565b6128e28161270a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60608315612928575081612703565b8251156129385782518084602001fd5b8160405162461bcd60e51b81526004016106659190612dce565b80356001600160a01b038116811461296957600080fd5b919050565b803564ffffffffff8116811461296957600080fd5b803560ff8116811461296957600080fd5b6000602082840312156129a657600080fd5b61270382612952565b600080604083850312156129c257600080fd5b6129cb83612952565b91506129d960208401612952565b90509250929050565b600080604083850312156129f557600080fd5b6129fe83612952565b915060208084013567ffffffffffffffff80821115612a1c57600080fd5b818601915086601f830112612a3057600080fd5b813581811115612a4257612a42612f8f565b612a72847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612e1f565b91508082528784828501011115612a8857600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020808385031215612ab957600080fd5b823567ffffffffffffffff80821115612ad157600080fd5b818501915085601f830112612ae557600080fd5b813581811115612af757612af7612f8f565b8060051b9150612b08848301612e1f565b8181528481019084860184860187018a1015612b2357600080fd5b600095505b83861015612b4d57612b3981612952565b835260019590950194918601918601612b28565b5098975050505050505050565b600060208284031215612b6c57600080fd5b815161270381612fbe565b600060208284031215612b8957600080fd5b5035919050565b60008060008060008060c08789031215612ba957600080fd5b86359550602087013594506040870135935060608701359250612bce60808801612983565b915060a0870135612bde81612fbe565b809150509295509295509295565b600080600080600060a08688031215612c0457600080fd5b853594506020860135935060408601359250612c2260608701612983565b9150612c3060808701612952565b90509295509295909350565b600080600080600060a08688031215612c5457600080fd5b853594506020860135935060408601359250612c7260608701612983565b9150608086013578ffffffffffffffffffffffffffffffffffffffffffffffffff81168114612ca057600080fd5b809150509295509295909350565b60008060408385031215612cc157600080fd5b823591506129d96020840161296e565b60008060408385031215612ce457600080fd5b82359150602083013565ffffffffffff81168114612d0157600080fd5b809150509250929050565b60008060408385031215612d1f57600080fd5b823591506129d960208401612983565b600060208284031215612d4157600080fd5b6127038261296e565b600060208284031215612d5c57600080fd5b61270382612983565b60008251612d77818460208701612ee5565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612dc25783516001600160a01b031683529284019291840191600101612d9d565b50909695505050505050565b6020815260008251806020840152612ded816040850160208701612ee5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612e6657612e66612f8f565b604052919050565b60008219821115612e8157612e81612f31565b500190565b600060ff821660ff84168060ff03821115612ea357612ea3612f31565b019392505050565b600082821015612ebd57612ebd612f31565b500390565b600060ff821660ff841680821015612edc57612edc612f31565b90039392505050565b60005b83811015612f00578181015183820152602001612ee8565b838111156117f25750506000910152565b600060ff821660ff811415612f2857612f28612f31565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8015158114610b4057600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000806000a";

type UpgradableMesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradableMesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradableMeson__factory extends ContractFactory {
  constructor(...args: UpgradableMesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableMeson> {
    return super.deploy(overrides || {}) as Promise<UpgradableMeson>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableMeson {
    return super.attach(address) as UpgradableMeson;
  }
  connect(signer: Signer): UpgradableMeson__factory {
    return super.connect(signer) as UpgradableMeson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableMesonInterface {
    return new utils.Interface(_abi) as UpgradableMesonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableMeson {
    return new Contract(address, _abi, signerOrProvider) as UpgradableMeson;
  }
}
