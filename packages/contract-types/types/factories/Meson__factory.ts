/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Meson, MesonInterface } from "../Meson";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "recipientHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "getSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint208",
        name: "packedData",
        type: "uint208",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "requestSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002c0738038062002c0783398101604081905262000034916200023a565b60405180608001604052806052815260200162002bb560529139805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060035560005b81518160ff16101562000163576200014e828260ff168151811062000131576200013162000374565b602002602001015182600162000148919062000313565b6200016b565b806200015a816200033b565b91505062000108565b5050620003a0565b60ff8116620001c05760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e6465780000000000604482015260640160405180910390fd5b6001600160a01b03919091166000818152602081815260408083208054600160ff19918216811790925560028452828520805490911660ff90971696871790559483529390529190912080546001600160a01b0319169091179055565b80516001600160a01b03811681146200023557600080fd5b919050565b600060208083850312156200024e57600080fd5b82516001600160401b03808211156200026657600080fd5b818501915085601f8301126200027b57600080fd5b8151818111156200029057620002906200038a565b8060051b604051601f19603f83011681018181108582111715620002b857620002b86200038a565b604052828152858101935084860182860187018a1015620002d857600080fd5b600095505b838610156200030657620002f1816200021d565b855260019590950194938601938601620002dd565b5098975050505050505050565b600060ff821660ff84168060ff038211156200033357620003336200035e565b019392505050565b600060ff821660ff8114156200035557620003556200035e565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61280580620003b06000396000f3fe608060405234801561001057600080fd5b506004361061016b5760003560e01c806393b0719d116100cd578063b3df5b3611610081578063f7888aec11610066578063f7888aec14610493578063ff378719146104c7578063ffa96ec41461050057600080fd5b8063b3df5b3614610425578063d3705a921461048057600080fd5b80639432984f116100b25780639432984f146103ea578063a0f1d35f146103fd578063b002249d1461041057600080fd5b806393b0719d146103a957806394149c1a146103bc57600080fd5b80633da0e66e116101245780637c850187116101095780637c850187146103705780638befc1c1146103835780639033ed081461039657600080fd5b80633da0e66e146102da57806354d6a2b71461035d57600080fd5b80631aba3a55116101555780631aba3a551461023f5780632217d4831461027c5780632335093c1461028f57600080fd5b8062c2a48c1461017057806304fd4ab014610185575b600080fd5b61018361017e366004612470565b610513565b005b6102006101933660046123a6565b60009081526008602090815260408083205464ffffffffff60a082901c8116855260059093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83169373ffffffffffffffffffffffffffffffffffffffff9091169260c81c90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015264ffffffffff16908201526060015b60405180910390f35b61026661024d366004612334565b60046020526000908152604090205464ffffffffff1681565b60405164ffffffffff9091168152602001610236565b61018361028a3660046123a6565b610667565b6102c861029d366004612334565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60405160ff9091168152602001610236565b6103306102e83660046123a6565b60009081526007602090815260408083205464ffffffffff8116845260059092529091205473ffffffffffffffffffffffffffffffffffffffff60289290921c821692911690565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815292909116602083015201610236565b61018361036b3660046123a6565b61079e565b61018361037e3660046124c8565b61092b565b610183610391366004612470565b610afa565b6101836103a43660046123e2565b610e3f565b6101836103b736600461244e565b610f76565b6040517f8000003c000000000000000000000000000000000000000000000000000000008152602001610236565b6101836103f8366004612424565b61117c565b61018361040b3660046123bf565b6112d7565b610418611436565b60405161023691906125f5565b61045b610433366004612584565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610236565b61018361048e3660046123e2565b611587565b6104a66104a1366004612356565b611880565b6040516fffffffffffffffffffffffffffffffff9091168152602001610236565b61045b6104d536600461259f565b60ff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b61018361050e366004612524565b6118f1565b600061051f8787611b04565b6000818152600860205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16806105a35760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b6105b282848989898987611b8c565b60ff600889901c1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff166105ee818560808c901c611d2a565b6000838152600860205260409081902080547fffff000000000000000000000000000000000000000000000000000000000000169055517fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f4906106549085815260200190565b60405180910390a1505050505050505050565b600061067582600354611b04565b60008181526007602052604090205490915078ffffffffffffffffffffffffffffffffffffffffffffffffff16156106ef5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c72656164792065786973747300000000000000000000000000604482015260640161059a565b600033600083815260076020526040812080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffff0000000000602885901b161790559091508061075485611ea9565b9150915061076381848461202a565b6040518481527fa67aeefca6ffac499b56c6e714636f7ade5d82fde82aef50665ad3e88be5cb4b906020015b60405180910390a15050505050565b60006107ac82600354611b04565b60008181526007602052604090205490915078ffffffffffffffffffffffffffffffffffffffffffffffffff16806108265760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f7420657869737400000000000000000000000000604482015260640161059a565b4264ffffffffff16603084901c64ffffffffff16106108875760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b6564000000000000000000000000604482015260640161059a565b60ff8316600090815260016020908152604080832054858452600790925290912080547fffffffffffffff0000000000000000000000000000000000000000000000000016905573ffffffffffffffffffffffffffffffffffffffff602883901c811691166108fb8183608088901c611d2a565b6040518481527f5a399591cfd74c375a1ffd61c20221db0db82381f65516889ed13c8cd1f99d5b9060200161078f565b600354600061093a8883611b04565b600081815260076020526040902080547fffffffffffffff00000000000000000000000000000000000000000000000000811690915590915078ffffffffffffffffffffffffffffffffffffffffffffffffff168315610a4b57601581815260108051908b905260005191519091906109b8858c888d8d8d896120d8565b65ffffffffffff81166000908152600660205260409020546109ec906fffffffffffffffffffffffffffffffff16836121c1565b65ffffffffffff91909116600090815260066020526040902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff90921691909117905550610aca9050565b610a798289858a8a8a60288878ffffffffffffffffffffffffffffffffffffffffffffffffff16901c6120d8565b60ff891660009081526001602090815260408083205464ffffffffff85168452600590925290912054610aca9173ffffffffffffffffffffffffffffffffffffffff908116911660808c901c611d2a565b6040518281527f6921a2110a802468e8955f2885822155442ad19c60f42db0444a6993c23d206290602001610654565b6000610b068787611b04565b6000818152600860205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615610b855760405162461bcd60e51b815260206004820152601360248201527f5377617020616c72656164792065786973747300000000000000000000000000604482015260640161059a565b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610bd8573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610c5c5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161059a565b3360009081526004602052604090205464ffffffffff1680610ce65760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e0000000000000000000000000000000000606482015260840161059a565b60008080610cf66104b042612683565b6020878152600c86815260088e901c600790815260008051925191859052835165ffffffffffff8316825260069094526040908190205492901c9650945091925090610d54906fffffffffffffffffffffffffffffffff1685612243565b65ffffffffffff8416600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9590951694909417909355888252600881529082902080547fffff000000000000000000000000000000000000000000000000000000000000167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851617905590518781527f4b9652d234ab744ed655916a0c1ddd3e9d02be9a04f7aee8b0bf1e8dfce0173a910160405180910390a1505050505050505050505050565b6000826fffffffffffffffffffffffffffffffff1611610ea15760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f736974697665000000000000000000604482015260640161059a565b65ffffffffffff8116600090815260066020526040902054610ed5906fffffffffffffffffffffffffffffffff16836121c1565b65ffffffffffff8216600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9590951694909417909355602884901c60ff168252600190522054610f729073ffffffffffffffffffffffffffffffffffffffff1633846fffffffffffffffffffffffffffffffff1661202a565b5050565b6000610f828383611b04565b6000818152600860205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16806110015760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f7420657869737400000000000000000000000000604482015260640161059a565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16116110945760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b0000000000000000000000000000604482015260640161059a565b65ff0000000000602085811b9190911664ffffffffff60a084901c161760008181526006909252604090912054608086901c91600887901c916110e9906fffffffffffffffffffffffffffffffff16846121c1565b65ffffffffffff91909116600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff90951694909417909355958152600890955290932080547fffff0000000000000000000000000000000000000000000000000000000000001690555050505050565b3360008181526004602052604090205464ffffffffff16806112065760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e645265676973746572000000000000000000000000000000000000606482015260840161059a565b65ff0000000000602884901b1664ffffffffff821617600081815260066020526040902054611247906fffffffffffffffffffffffffffffffff1686612243565b65ffffffffffff8216600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff95861617905560ff8816835260019091529020546112d09173ffffffffffffffffffffffffffffffffffffffff9091169085908816611d2a565b5050505050565b60008281526007602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff168061134e5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f7420657869737400000000000000000000000000604482015260640161059a565b64ffffffffff8116156113a35760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f766964657200604482015260640161059a565b60008381526007602090815260409182902080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff86161717905590518481527f9dadb60bc000bbd7b49430723ed56b6aa35909dcab91ec2cb17ed5da7ae4ffd6910160405180910390a1505050565b606060015b6101008160ff1610156114ee5760ff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff166114dc578060ff1660011415611485575090565b6114906001826126ec565b60ff1667ffffffffffffffff8111156114ab576114ab61278d565b6040519080825280602002602001820160405280156114d4578160200160208202803683370190505b5091506114ee565b806114e68161270f565b91505061143b565b60015b8160ff168160ff1610156115825760ff811660009081526001602081905260409091205473ffffffffffffffffffffffffffffffffffffffff1690849061153890846126ec565b60ff168151811061154b5761154b61275e565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061157a8161270f565b9150506114f1565b505090565b6000826fffffffffffffffffffffffffffffffff16116115e95760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f736974697665000000000000000000604482015260640161059a565b338164ffffffffff811661163f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e6465780000604482015260640161059a565b64ffffffffff811660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff16156116b95760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c726561647920726567697374657265640000000000000000604482015260640161059a565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205464ffffffffff16156117335760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c72656164792072656769737465726564000000000000604482015260640161059a565b64ffffffffff8116600081815260056020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526004825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff861682526006905220546117ed906fffffffffffffffffffffffffffffffff16856121c1565b65ffffffffffff8416600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff958616179055602887901c60ff168352600190915290205461187a9173ffffffffffffffffffffffffffffffffffffffff909116908490871661202a565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260209081526040808320549385168352600482528083205464ffffffffff1660289490941b65ff0000000000169390931782526006905220546fffffffffffffffffffffffffffffffff165b92915050565b60006118ff85600354611b04565b60008181526007602052604090205490915078ffffffffffffffffffffffffffffffffffffffffffffffffff16156119795760405162461bcd60e51b815260206004820152601360248201527f5377617020616c72656164792065786973747300000000000000000000000000604482015260640161059a565b6020828152600751601b51604080516000815293840180825285905260ff83169084015260608301879052608083018690529091849060019060a0016020604051602081039080840390855afa1580156119d7573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611a5b5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161059a565b600084815260076020526040812080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff841617905580611ab68a611ea9565b91509150611ac581858461202a565b6040518681527fd7a1fd45274eb446b18cdf83061f521e75114fa2c53ecb42bd853bba72097bab9060200160405180910390a150505050505050505050565b604080518082018252601c81527f53776170526571756573742875696e7432353620656e636f646564290000000060209182015281517f9e30b23744f36fc02f504355e3ffa6d1fda34e5ac9e3c78a1d6e7dffbc9c57266000818152928690529282206022529091906019835360018053836002526042600020925080604052505092915050565b60006040518060600160405280602b81526020016127ce602b91398051602090910120905073ffffffffffffffffffffffffffffffffffffffff8216611c145760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d70747920616464726573730000604482015260640161059a565b6000604051886000526014600c20604052826000528960205260606000206022526019600053600180536002889052604260009081209082526020820160408181529082905260ff8716908301526060820188905260808201879052915060019060a0015b6020604051602081039080840390855afa158015611c9b573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611d1f5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161059a565b505050505050505050565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611df191906125ba565b6000604051808303816000865af19150503d8060008114611e2e576040519150601f19603f3d011682016040523d82523d6000602084013e611e33565b606091505b5091509150818015611e5d575080511580611e5d575080806020019051810190611e5d9190612389565b6112d05760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161059a565b608081901c600081611f235760405162461bcd60e51b815260206004820152602560248201527f5377617020616d6f756e74206d7573742062652067726561746572207468616e60448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161059a565b5060ff821660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16603083901c42611f5f610e108261269b565b64ffffffffff168264ffffffffff1611611fbb5760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c7900000000000000000000000000604482015260640161059a565b611fc7611c208261269b565b64ffffffffff168264ffffffffff16106120235760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c6174650000000000000000000000000000604482015260640161059a565b5050915091565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b1580156120a057600080fd5b505af11580156120b4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187a9190612389565b60006040518060600160405280602b81526020016127ce602b91398051602090910120905073ffffffffffffffffffffffffffffffffffffffff82166121605760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d70747920616464726573730000604482015260640161059a565b600060405182600052896020528860405260606000206022526019600053600180536002889052604260009081209082526020820160408181529082905260ff8716908301526060820188905260808201879052915060019060a001611c79565b60006fffffffffffffffffffffffffffffffff83166121e0838561264f565b9150816fffffffffffffffffffffffffffffffff1610156118eb5760405162461bcd60e51b815260206004820152600860248201527f6f766572666c6f77000000000000000000000000000000000000000000000000604482015260640161059a565b60006fffffffffffffffffffffffffffffffff831661226283856126bb565b9150816fffffffffffffffffffffffffffffffff1611156118eb5760405162461bcd60e51b815260206004820152600960248201527f756e646572666c6f770000000000000000000000000000000000000000000000604482015260640161059a565b803573ffffffffffffffffffffffffffffffffffffffff811681146122e957600080fd5b919050565b80356fffffffffffffffffffffffffffffffff811681146122e957600080fd5b803564ffffffffff811681146122e957600080fd5b803560ff811681146122e957600080fd5b60006020828403121561234657600080fd5b61234f826122c5565b9392505050565b6000806040838503121561236957600080fd5b612372836122c5565b9150612380602084016122c5565b90509250929050565b60006020828403121561239b57600080fd5b815161234f816127bc565b6000602082840312156123b857600080fd5b5035919050565b600080604083850312156123d257600080fd5b823591506123806020840161230e565b600080604083850312156123f557600080fd5b6123fe836122ee565b9150602083013565ffffffffffff8116811461241957600080fd5b809150509250929050565b6000806040838503121561243757600080fd5b612440836122ee565b915061238060208401612323565b6000806040838503121561246157600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561248957600080fd5b863595506020870135945060408701359350606087013592506124ae60808801612323565b91506124bc60a088016122c5565b90509295509295509295565b60008060008060008060c087890312156124e157600080fd5b8635955060208701359450604087013593506060870135925061250660808801612323565b915060a0870135612516816127bc565b809150509295509295509295565b6000806000806080858703121561253a57600080fd5b843593506020850135925060408501359150606085013579ffffffffffffffffffffffffffffffffffffffffffffffffffff8116811461257957600080fd5b939692955090935050565b60006020828403121561259657600080fd5b61234f8261230e565b6000602082840312156125b157600080fd5b61234f82612323565b6000825160005b818110156125db57602081860181015185830152016125c1565b818111156125ea576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561264357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612611565b50909695505050505050565b60006fffffffffffffffffffffffffffffffff80831681851680830382111561267a5761267a61272f565b01949350505050565b600082198211156126965761269661272f565b500190565b600064ffffffffff80831681851680830382111561267a5761267a61272f565b60006fffffffffffffffffffffffffffffffff838116908316818110156126e4576126e461272f565b039392505050565b600060ff821660ff8416808210156127065761270661272f565b90039392505050565b600060ff821660ff8114156127265761272661272f565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80151581146127ca57600080fd5b5056fe5377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Meson__factory extends ContractFactory {
  constructor(...args: MesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Meson> {
    return super.deploy(supportedTokens, overrides || {}) as Promise<Meson>;
  }
  getDeployTransaction(
    supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(supportedTokens, overrides || {});
  }
  attach(address: string): Meson {
    return super.attach(address) as Meson;
  }
  connect(signer: Signer): Meson__factory {
    return super.connect(signer) as Meson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonInterface {
    return new utils.Interface(_abi) as MesonInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Meson {
    return new Contract(address, _abi, signerOrProvider) as Meson;
  }
}
