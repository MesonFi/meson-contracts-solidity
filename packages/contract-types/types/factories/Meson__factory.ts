/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Meson, MesonInterface } from "../Meson";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getPostedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint200",
        name: "postingValue",
        type: "uint200",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200287238038062002872833981016040819052620000349162000156565b60005b81518160ff16101562000092576200007d828260ff168151811062000060576200006062000290565b60200260200101518260016200007791906200022f565b6200009a565b80620000898162000257565b91505062000037565b5050620002bc565b60ff8116620000ef5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e6465780000000000604482015260640160405180910390fd5b6001600160a01b039091166000818152600160209081526040808320805460ff90961660ff19909616861790559382528190529190912080546001600160a01b0319169091179055565b80516001600160a01b03811681146200015157600080fd5b919050565b600060208083850312156200016a57600080fd5b82516001600160401b03808211156200018257600080fd5b818501915085601f8301126200019757600080fd5b815181811115620001ac57620001ac620002a6565b8060051b604051601f19603f83011681018181108582111715620001d457620001d4620002a6565b604052828152858101935084860182860187018a1015620001f457600080fd5b600095505b8386101562000222576200020d8162000139565b855260019590950194938601938601620001f9565b5098975050505050505050565b600060ff821660ff84168060ff038211156200024f576200024f6200027a565b019392505050565b600060ff821660ff8114156200027157620002716200027a565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6125a680620002cc6000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063903d4296116100cd578063e16a567d11610081578063f1d2ec1d11610066578063f1d2ec1d1461040f578063f7888aec14610422578063ff3787191461043557600080fd5b8063e16a567d146103a8578063eba7fb77146103e157600080fd5b8063b3df5b36116100b2578063b3df5b3614610327578063be18e8a414610382578063ce9247431461039557600080fd5b8063903d4296146102ff578063b002249d1461031257600080fd5b80634d11b0f11161012457806360a2da981161010957806360a2da98146102945780638302ce5a146102d95780638f487dc9146102ec57600080fd5b80634d11b0f11461026e57806354d6a2b71461028157600080fd5b80632335093c116101555780632335093c146101fb57806335eff30f1461024657806337b90a4f1461025b57600080fd5b80631aba3a55146101715780631e2a6075146101b3575b600080fd5b61019861017f3660046120ce565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b6101c66101c1366004612140565b61046e565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401521515908201526060016101aa565b6102346102093660046120ce565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff90911681526020016101aa565b610259610254366004612300565b610500565b005b610259610269366004612323565b6106bf565b61025961027c36600461222b565b610777565b61025961028f366004612140565b6109f3565b6102a76102a2366004612159565b610b7b565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835264ffffffffff9091166020830152016101aa565b6102596102e736600461228e565b610bd6565b6102596102fa366004612323565b610ee4565b61025961030d36600461235e565b611170565b61031a611267565b6040516101aa91906123f2565b61035d610335366004612381565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101aa565b61025961039036600461217c565b6113b4565b6102596103a33660046121cc565b611670565b6103d36103b636600461239c565b60281b65ff00000000001660009081526004602052604090205490565b6040519081526020016101aa565b6040517f02ca00000000000000000000000000000000000000000000000000000000000081526020016101aa565b61025961041d366004612159565b6117a6565b6103d36104303660046120f0565b6118ee565b61035d61044336600461239c565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600081815260056020526040812054602881901c73ffffffffffffffffffffffffffffffffffffffff16919078ffffffffffffffffffffffffffffffffffffffffffffffffff166001811490836104c857600092506104f8565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1692505b509193909250565b60008281526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff168061057c5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b8064ffffffffff16156105d15760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610573565b3360009081526002602052604090205464ffffffffff8381169116146106395760405162461bcd60e51b815260206004820152601860248201527f43616e206f6e6c7920626f756e6420746f207369676e657200000000000000006044820152606401610573565b60008381526005602052604080822080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff8616171790555184917f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc991a2505050565b6000821161070f5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610573565b65ffffffffffff81166000908152600460205260408120805484929061073690849061244c565b909155505060ff602882901c166000908152602081905260409020546107739073ffffffffffffffffffffffffffffffffffffffff16338461197e565b5050565b60008681526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16806107ee5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610573565b6107fa610e104261244c565b603088901c64ffffffffff16101561084557600087815260056020526040902080547fffffffffffffff0000000000000000000000000000000000000000000000000016905561087d565b600087815260056020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001660011790555b6108a58784888888602887901c73ffffffffffffffffffffffffffffffffffffffff16611b0f565b60006108b18860281b90565b90506000605889901c64ffffffffff166108cb8a60d01c90565b6108d5919061244c565b90506108e18960081c90565b61ffff16603c1415801561090357506108fa8960201c90565b61ffff16603c14155b1561095657643fffffffff605a8a901c1680156109545765ffffffffffff83166000908152600460205260408120805483929061094190849061244c565b90915550610951905081836124a1565b91505b505b831561099d5764ffffffffff831665ffffffffffff83168117600090815260046020526040812080549285179284929061099190849061244c565b909155506109e8915050565b60ff89166000908152602081815260408083205464ffffffffff871684526003909252909120546109e89173ffffffffffffffffffffffffffffffffffffffff908116911683611c89565b505050505050505050565b60008181526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1660018111610a6d5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610573565b42603083901c64ffffffffff1610610ac75760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b65640000000000000000000000006044820152606401610573565b600082815260056020908152604080832080547fffffffffffffff0000000000000000000000000000000000000000000000000016905560ff8516835290829052902054610b4c9073ffffffffffffffffffffffffffffffffffffffff90811690602884901c16610b47605886901c64ffffffffff1660d087901c61244c565b611c89565b60405182907ff6b6b4f7a13f02512c1b3aa8dcc4a07d7775a6a4becbd439efcbd37c5408e67f90600090a25050565b6000806000610b8a8585611eac565b60009081526006602090815260408083205464ffffffffff8082168552600390935292205473ffffffffffffffffffffffffffffffffffffffff169760289290921c1695509350505050565b846102ca610be48260081c90565b61ffff1614610c355760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610573565b60008681526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1615610cac5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610573565b6000610cb88760d01c90565b905064174876e800811115610d355760405162461bcd60e51b815260206004820152603760248201527f466f7220736563757269747920726561736f6e2c20616d6f756e742063616e6e60448201527f6f742062652067726561746572207468616e203130306b0000000000000000006064820152608401610573565b6000610d4c4264ffffffffff60308b901c166124a1565b9050610e108111610d9f5760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610573565b611c208110610df05760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610573565b73ffffffffffffffffffffffffffffffffffffffff602885901c16610e188989898985611f0d565b600089815260056020908152604080832080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff8a1617905560ff8c16835290829052902054610eae9073ffffffffffffffffffffffffffffffffffffffff1682610ea960588d901c64ffffffffff168761244c565b61197e565b60405189907f5ce4019f772fda6cb703b26bce3ec3006eb36b73f1d3a0eb441213317d9f5e9d90600090a2505050505050505050565b60008211610f345760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610573565b338164ffffffffff8116610f8a5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610573565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff16156110045760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610573565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205464ffffffffff161561107e5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610573565b64ffffffffff8116600081815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526002825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff8616825260049052908120805486929061112d90849061244c565b909155505060ff602884901c1660009081526020819052604090205461116a9073ffffffffffffffffffffffffffffffffffffffff16838661197e565b50505050565b3360008181526002602052604090205464ffffffffff16806111fa5760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610573565b64ffffffffff8116602884901b65ff000000000016176000908152600460205260408120805486929061122e9084906124a1565b909155505060ff831660009081526020819052604090205461116a9073ffffffffffffffffffffffffffffffffffffffff168386611c89565b606060015b6101008160ff16101561131f5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1661130d578060ff16600114156112b6575090565b6112c16001826124b8565b60ff1667ffffffffffffffff8111156112dc576112dc612559565b604051908082528060200260200182016040528015611305578160200160208202803683370190505b50915061131f565b80611317816124db565b91505061126c565b60015b8160ff168160ff1610156113af5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16836113656001846124b8565b60ff16815181106113785761137861252a565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806113a7816124db565b915050611322565b505090565b846102ca6113c28260201c90565b61ffff16146114135760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610573565b600061141f8784611eac565b60008181526006602052604090205490915069ffffffffffffffffffff161561148a5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610573565b6114978787878787611f0d565b3360009081526002602052604090205464ffffffffff16806115215760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610573565b600061152f6104b04261244c565b9050603089901c64ffffffffff1681106115b15760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74206c6f636b20626563617573652065787069726554732069732060448201527f736f6f6e2e0000000000000000000000000000000000000000000000000000006064820152608401610573565b65ff000000000060108a901b1664ffffffffff8316176000818152600460205260408120805460d08d901c92906115e99084906124a1565b909155505060008481526006602052604080822080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001664ffffffffff8716602887901b69ffffffffff00000000001617179055518b917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a250505050505050505050565b600061167c8784611eac565b60008181526006602052604090205490915069ffffffffffffffffffff16806116e75760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610573565b6116f5888489898989611b0f565b600082815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000016905580806117358b60181c90565b60ff16815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1690506117708185610b478c60d01c90565b60405189907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a2505050505050505050565b60006117b28383611eac565b60008181526006602052604090205490915069ffffffffffffffffffff168061181d5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610573565b42602882901c64ffffffffff16106118775760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610573565b65ff0000000000601085901b1664ffffffffff8216176000818152600460205260408120805460d088901c92906118af90849061244c565b90915550505060009182525060066020526040902080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602090815260408083205493851683526002909152812054909160ff169064ffffffffff16801580611940575060ff8216155b1561195057600092505050611978565b64ffffffffff1660289190911b65ff0000000000161760009081526004602052604090205490505b92915050565b600081116119ce5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610573565b789f4f2726179a224501d762422c946590d910000000000000008110611a365760405162461bcd60e51b815260206004820152600f60248201527f416d6f756e74206f766572666c6f7700000000000000000000000000000000006044820152606401610573565b73ffffffffffffffffffffffffffffffffffffffff83166323b872dd8330611a638564e8d4a51000612464565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381600087803b158015611ad757600080fd5b505af1158015611aeb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a9190612123565b73ffffffffffffffffffffffffffffffffffffffff8116611b725760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610573565b601485905260008681526034812060209081527f743e50106a7f059b52151dd4ba27a5f6c87b925ddfbdcf1c332e800da4b3df928083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa158015611bfb573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611c7f5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610573565b5050505050505050565b789f4f2726179a224501d762422c946590d910000000000000008110611cf15760405162461bcd60e51b815260206004820152600f60248201527f416d6f756e74206f766572666c6f7700000000000000000000000000000000006044820152606401610573565b60008073ffffffffffffffffffffffffffffffffffffffff85167fa9059cbb0000000000000000000000000000000000000000000000000000000085611d3c8664e8d4a51000612464565b60405173ffffffffffffffffffffffffffffffffffffffff90921660248301526044820152606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611ded91906123b7565b6000604051808303816000865af19150503d8060008114611e2a576040519150601f19603f3d011682016040523d82523d6000602084013e611e2f565b606091505b5091509150818015611e59575080511580611e59575080806020019051810190611e599190612123565b611ea55760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610573565b5050505050565b60008282604051602001611eef92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b60405160208183030381529060405280519060200120905092915050565b73ffffffffffffffffffffffffffffffffffffffff8116611f705760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610573565b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc8083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa158015611ff2573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146120765760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610573565b50505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146120a357600080fd5b919050565b803564ffffffffff811681146120a357600080fd5b803560ff811681146120a357600080fd5b6000602082840312156120e057600080fd5b6120e98261207f565b9392505050565b6000806040838503121561210357600080fd5b61210c8361207f565b915061211a6020840161207f565b90509250929050565b60006020828403121561213557600080fd5b81516120e981612588565b60006020828403121561215257600080fd5b5035919050565b6000806040838503121561216c57600080fd5b8235915061211a6020840161207f565b600080600080600060a0868803121561219457600080fd5b8535945060208601359350604086013592506121b2606087016120bd565b91506121c06080870161207f565b90509295509295909350565b60008060008060008060c087890312156121e557600080fd5b863595506020870135945060408701359350612203606088016120bd565b92506122116080880161207f565b915061221f60a0880161207f565b90509295509295509295565b60008060008060008060c0878903121561224457600080fd5b863595506020870135945060408701359350612262606088016120bd565b92506122706080880161207f565b915060a087013561228081612588565b809150509295509295509295565b600080600080600060a086880312156122a657600080fd5b8535945060208601359350604086013592506122c4606087016120bd565b9150608086013578ffffffffffffffffffffffffffffffffffffffffffffffffff811681146122f257600080fd5b809150509295509295909350565b6000806040838503121561231357600080fd5b8235915061211a602084016120a8565b6000806040838503121561233657600080fd5b82359150602083013565ffffffffffff8116811461235357600080fd5b809150509250929050565b6000806040838503121561237157600080fd5b8235915061211a602084016120bd565b60006020828403121561239357600080fd5b6120e9826120a8565b6000602082840312156123ae57600080fd5b6120e9826120bd565b6000825160005b818110156123d857602081860181015185830152016123be565b818111156123e7576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561244057835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161240e565b50909695505050505050565b6000821982111561245f5761245f6124fb565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561249c5761249c6124fb565b500290565b6000828210156124b3576124b36124fb565b500390565b600060ff821660ff8416808210156124d2576124d26124fb565b90039392505050565b600060ff821660ff8114156124f2576124f26124fb565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b801515811461259657600080fd5b5056fea164736f6c6343000806000a";

type MesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Meson__factory extends ContractFactory {
  constructor(...args: MesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Meson> {
    return super.deploy(supportedTokens, overrides || {}) as Promise<Meson>;
  }
  getDeployTransaction(
    supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(supportedTokens, overrides || {});
  }
  attach(address: string): Meson {
    return super.attach(address) as Meson;
  }
  connect(signer: Signer): Meson__factory {
    return super.connect(signer) as Meson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonInterface {
    return new utils.Interface(_abi) as MesonInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Meson {
    return new Contract(address, _abi, signerOrProvider) as Meson;
  }
}
