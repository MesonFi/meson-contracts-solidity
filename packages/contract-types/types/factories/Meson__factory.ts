/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Meson, MesonInterface } from "../Meson";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "providerIndex",
        type: "uint40",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getPostedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint200",
        name: "postingValue",
        type: "uint200",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002ef738038062002ef7833981016040819052620000349162000156565b60005b81518160ff16101562000092576200007d828260ff168151811062000060576200006062000290565b60200260200101518260016200007791906200022f565b6200009a565b80620000898162000257565b91505062000037565b5050620002bc565b60ff8116620000ef5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e6465780000000000604482015260640160405180910390fd5b6001600160a01b039091166000818152600160209081526040808320805460ff90961660ff19909616861790559382528190529190912080546001600160a01b0319169091179055565b80516001600160a01b03811681146200015157600080fd5b919050565b600060208083850312156200016a57600080fd5b82516001600160401b03808211156200018257600080fd5b818501915085601f8301126200019757600080fd5b815181811115620001ac57620001ac620002a6565b8060051b604051601f19603f83011681018181108582111715620001d457620001d4620002a6565b604052828152858101935084860182860187018a1015620001f457600080fd5b600095505b8386101562000222576200020d8162000139565b855260019590950194938601938601620001f9565b5098975050505050505050565b600060ff821660ff84168060ff038211156200024f576200024f6200027a565b019392505050565b600060ff821660ff8114156200027157620002716200027a565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b612c2b80620002cc6000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063903d4296116100cd578063e16a567d11610081578063f1d2ec1d11610066578063f1d2ec1d1461040e578063f7888aec14610421578063ff3787191461043457600080fd5b8063e16a567d146103a8578063eba7fb77146103e157600080fd5b8063b3df5b36116100b2578063b3df5b3614610327578063be18e8a414610382578063ce9247431461039557600080fd5b8063903d4296146102ff578063b002249d1461031257600080fd5b80634d11b0f11161012457806360a2da981161010957806360a2da98146102945780638302ce5a146102d95780638f487dc9146102ec57600080fd5b80634d11b0f11461026e57806354d6a2b71461028157600080fd5b80632335093c116101555780632335093c146101fb57806335eff30f1461024657806337b90a4f1461025b57600080fd5b80631aba3a55146101715780631e2a6075146101b3575b600080fd5b61019861017f366004612755565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b6101c66101c13660046127c7565b61046d565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401521515908201526060016101aa565b610234610209366004612755565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff90911681526020016101aa565b610259610254366004612987565b6104ff565b005b6102596102693660046129aa565b6106c1565b61025961027c3660046128b2565b610853565b61025961028f3660046127c7565b610a42565b6102a76102a23660046127e0565b610bb9565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835264ffffffffff9091166020830152016101aa565b6102596102e7366004612915565b610c14565b6102596102fa3660046129aa565b610f1a565b61025961030d3660046129e5565b6111af565b61031a6112ad565b6040516101aa9190612a79565b61035d610335366004612a08565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101aa565b610259610390366004612803565b6113fa565b6102596103a3366004612853565b6116d1565b6103d36103b6366004612a23565b60281b65ff00000000001660009081526004602052604090205490565b6040519081526020016101aa565b6040517e3c00000000000000000000000000000000000000000000000000000000000081526020016101aa565b61025961041c3660046127e0565b61191c565b6103d361042f366004612777565b611a80565b61035d610442366004612a23565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600081815260056020526040812054602881901c73ffffffffffffffffffffffffffffffffffffffff16919078ffffffffffffffffffffffffffffffffffffffffffffffffff166001811490836104c757600092506104f7565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1692505b509193909250565b60008281526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff166001811161057e5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b8064ffffffffff16156105d35760405162461bcd60e51b815260206004820152601f60248201527f5377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610575565b3360009081526002602052604090205464ffffffffff83811691161461063b5760405162461bcd60e51b815260206004820152601860248201527f43616e206f6e6c7920626f756e6420746f207369676e657200000000000000006044820152606401610575565b60008381526005602052604080822080547fffffffffffffff000000000000000000000000000000000000000000000000001664ffffffffff861678ffffffffffffffffffffffffffffffffffffffffffffffffff8616171790555184917f60a99b51ae498c44acbbe11031aed2a06a32be66d2122e6e2a7a16c087865cc991a2505050565b600082116107115760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610575565b8064ffffffffff81166107665760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610575565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146107e15760405162461bcd60e51b815260206004820152601860248201527f496e636f72726563742070726f766964657220696e64657800000000000000006044820152606401610575565b65ffffffffffff821660009081526004602052604081208054859290610808908490612ad3565b909155505060ff602883901c8116600081815260208190526040902054909161084d9173ffffffffffffffffffffffffffffffffffffffff1690339087908514611b10565b50505050565b60008681526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff16600181116108cd5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610575565b6108d9610e1042612ad3565b603088901c64ffffffffff16101561092457600087815260056020526040902080547fffffffffffffff0000000000000000000000000000000000000000000000000016905561095c565b600087815260056020526040902080547fffffffffffffff000000000000000000000000000000000000000000000000001660011790555b6109848784888888602887901c73ffffffffffffffffffffffffffffffffffffffff16611d20565b81156109de5760008164ffffffffff1661099e8960281b90565b1790506109ab8860d01c90565b65ffffffffffff8216600090815260046020526040812080549091906109d2908490612ad3565b90915550610a39915050565b60ff87166000908152602081815260408083205464ffffffffff851684526003909252909120548891610a379173ffffffffffffffffffffffffffffffffffffffff918216911660d084901c5b8460ff1660ff146121d3565b505b50505050505050565b60008181526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1660018111610abc5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610575565b42603083901c64ffffffffff1610610b165760405162461bcd60e51b815260206004820152601460248201527f53776170206973207374696c6c206c6f636b65640000000000000000000000006044820152606401610575565b600082815260056020908152604080832080547fffffffffffffff0000000000000000000000000000000000000000000000000016905560ff85168352908290529020548290610b899073ffffffffffffffffffffffffffffffffffffffff90811690602885901c1660d084901c610a2b565b60405183907ff6b6b4f7a13f02512c1b3aa8dcc4a07d7775a6a4becbd439efcbd37c5408e67f90600090a2505050565b6000806000610bc88585612322565b60009081526006602090815260408083205464ffffffffff8082168552600390935292205473ffffffffffffffffffffffffffffffffffffffff169760289290921c1695509350505050565b84603c610c218260081c90565b61ffff1614610c725760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610575565b60008681526005602052604090205478ffffffffffffffffffffffffffffffffffffffffffffffffff1615610ce95760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610575565b6000610cf58760d01c90565b905064174876e800811115610d725760405162461bcd60e51b815260206004820152603760248201527f466f7220736563757269747920726561736f6e2c20616d6f756e742063616e6e60448201527f6f742062652067726561746572207468616e203130306b0000000000000000006064820152608401610575565b6000610d894264ffffffffff60308b901c16612b26565b9050610e108111610ddc5760405162461bcd60e51b815260206004820152601360248201527f45787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610575565b611c208110610e2d5760405162461bcd60e51b815260206004820152601260248201527f45787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610575565b73ffffffffffffffffffffffffffffffffffffffff602885901c16610e558989898985612383565b600089815260056020526040812080547fffffffffffffff000000000000000000000000000000000000000000000000001678ffffffffffffffffffffffffffffffffffffffffffffffffff88161790558960ff808216600081815260208190526040902054929350610ee39273ffffffffffffffffffffffffffffffffffffffff16918591889114611b10565b6040518a907f5ce4019f772fda6cb703b26bce3ec3006eb36b73f1d3a0eb441213317d9f5e9d90600090a250505050505050505050565b60008211610f6a5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610575565b338164ffffffffff8116610fc05760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610575565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff161561103a5760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610575565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205464ffffffffff16156110b45760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610575565b64ffffffffff8116600081815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526002825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff86168252600490529081208054869290611163908490612ad3565b909155505060ff602884901c811660008181526020819052604090205490916111a89173ffffffffffffffffffffffffffffffffffffffff1690859088908514611b10565b5050505050565b3360008181526002602052604090205464ffffffffff16806112395760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610575565b64ffffffffff8116602884901b65ff000000000016176000908152600460205260408120805486929061126d908490612b26565b909155505060ff80841660008181526020819052604090205461084d9273ffffffffffffffffffffffffffffffffffffffff9091169185918891146121d3565b606060015b6101008160ff1610156113655760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16611353578060ff16600114156112fc575090565b611307600182612b3d565b60ff1667ffffffffffffffff81111561132257611322612bde565b60405190808252806020026020018201604052801561134b578160200160208202803683370190505b509150611365565b8061135d81612b60565b9150506112b2565b60015b8160ff168160ff1610156113f55760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16836113ab600184612b3d565b60ff16815181106113be576113be612baf565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806113ed81612b60565b915050611368565b505090565b84603c6114078260201c90565b61ffff16146114585760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610575565b60006114648784612322565b60008181526006602052604090205490915069ffffffffffffffffffff16156114cf5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610575565b6114dc8787878787612383565b3360009081526002602052604090205464ffffffffff16806115665760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610575565b600061157461096042612ad3565b9050603089901c64ffffffffff1681106115f65760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74206c6f636b20626563617573652065787069726554732069732060448201527f736f6f6e2e0000000000000000000000000000000000000000000000000000006064820152608401610575565b64ffffffffff82811660108b901b65ff000000000016179060588b901c1660d08b901c6116239190612b26565b65ffffffffffff82166000908152600460205260408120805490919061164a908490612b26565b909155505060008481526006602052604080822080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001664ffffffffff8716602887901b69ffffffffff00000000001617179055518b917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a250505050505050505050565b7940000000000000000000000000000000000000000000000000008616151560006116fc8885612322565b60008181526006602052604090205490915069ffffffffffffffffffff16806117675760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610575565b4260308a901c64ffffffffff16116117c15760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742072656c656173652062656361757365206578706972656400006044820152606401610575565b6117cf89858a8a8a8a611d20565b600082815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000016905561180d8a60181c90565b9050600060588b901c64ffffffffff166118278c60d01c90565b6118319190612b26565b9050846118a95760006118438c6126f4565b905061184f8183612b26565b915080600460006118758f600064ffffffffff1660109190911b65ff0000000000161790565b65ffffffffffff1665ffffffffffff16815260200190815260200160002060008282546118a29190612ad3565b9091555050505b60ff8083166000818152602081905260409020546118e49273ffffffffffffffffffffffffffffffffffffffff9091169189918591146121d3565b6040518b907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a25050505050505050505050565b60006119288383612322565b60008181526006602052604090205490915069ffffffffffffffffffff16806119935760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610575565b42602882901c64ffffffffff16106119ed5760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610575565b64ffffffffff818116601086901b65ff0000000000161790605886901c1660d086901c611a1a9190612b26565b65ffffffffffff821660009081526004602052604081208054909190611a41908490612ad3565b90915550505060009182525060066020526040902080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602090815260408083205493851683526002909152812054909160ff169064ffffffffff16801580611ad2575060ff8216155b15611ae257600092505050611b0a565b64ffffffffff1660289190911b65ff0000000000161760009081526004602052604090205490505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8416611b735760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420737570706f72746564000000000000000000000000006044820152606401610575565b60008211611bc35760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610575565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152306044830152606480830186905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611c609190612a3e565b6000604051808303816000865af19150503d8060008114611c9d576040519150601f19603f3d011682016040523d82523d6000602084013e611ca2565b606091505b5091509150818015611ccc575080511580611ccc575080806020019051810190611ccc91906127aa565b611d185760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c6564000000000000000000000000006044820152606401610575565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116611d835760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610575565b79080000000000000000000000000000000000000000000000000086161515600887901c61ffff1660c31415611f7557600081611de0577f1954524f4e205369676e6564204d6573736167653a0a33320a00000000000000611e02565b7f1954524f4e205369676e6564204d6573736167653a0a35330a000000000000005b6040517fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009091166020820152603981018990527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606089901b166059820152606d01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8716918301919091526060820188905260808201879052915060019060a0016020604051602081039080840390855afa158015611eea573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611f6e5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610575565b5050611d18565b60008115612067576040517f19457468657265756d205369676e6564204d6573736167653a0a33320000000090611fe0908a908a9060200191825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020918201207fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090931690820152603c810191909152605c016040516020818303038152906040528051906020012090506120fc565b6120718860201c90565b61ffff1660c314156120c2578660155260416020538760005260356000206020527ff6ea10de668a877958d46ed7d53eaf47124fda9bee9423390a28c203556a2e55600052604060002090506120fc565b5060148690526000878152603481206020527fd23291d9d999318ac3ed13f43ac8003d6fbd69a4b532aeec9ffad516010a208c8152604090205b60408051600081526020810180835283905260ff861691810191909152606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561214f573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a375760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610575565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152604480830186905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929088169161226a9190612a3e565b6000604051808303816000865af19150503d80600081146122a7576040519150601f19603f3d011682016040523d82523d6000602084013e6122ac565b606091505b50915091508180156122d65750805115806122d65750808060200190518101906122d691906127aa565b611d185760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401610575565b6000828260405160200161236592919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b60405160208183030381529060405280519060200120905092915050565b73ffffffffffffffffffffffffffffffffffffffff81166123e65760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610575565b79080000000000000000000000000000000000000000000000000085161515600886901c61ffff1660c314156125ad57600081612443577f1954524f4e205369676e6564204d6573736167653a0a33320a00000000000000612465565b7f1954524f4e205369676e6564204d6573736167653a0a33330a000000000000005b6040517fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009091166020820152603981018890526059015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8716918301919091526060820188905260808201879052915060019060a0016020604051602081039080840390855afa158015612522573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146125a65760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610575565b50506111a8565b80156125ee576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101879052600090605c0161249c565b6000868152602080822081527f7b521e60f64ab56ff03ddfb26df49be54b20672b7acfffc1adeb256b554ccb258083526040808420815194855292840180825283905260ff87169084015260608301889052608083018790529160019060a0016020604051602081039080840390855afa158015612670573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610a375760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610575565b6000611b0a6103e860d084901c612aeb565b803573ffffffffffffffffffffffffffffffffffffffff8116811461272a57600080fd5b919050565b803564ffffffffff8116811461272a57600080fd5b803560ff8116811461272a57600080fd5b60006020828403121561276757600080fd5b61277082612706565b9392505050565b6000806040838503121561278a57600080fd5b61279383612706565b91506127a160208401612706565b90509250929050565b6000602082840312156127bc57600080fd5b815161277081612c0d565b6000602082840312156127d957600080fd5b5035919050565b600080604083850312156127f357600080fd5b823591506127a160208401612706565b600080600080600060a0868803121561281b57600080fd5b85359450602086013593506040860135925061283960608701612744565b915061284760808701612706565b90509295509295909350565b60008060008060008060c0878903121561286c57600080fd5b86359550602087013594506040870135935061288a60608801612744565b925061289860808801612706565b91506128a660a08801612706565b90509295509295509295565b60008060008060008060c087890312156128cb57600080fd5b8635955060208701359450604087013593506128e960608801612744565b92506128f760808801612706565b915060a087013561290781612c0d565b809150509295509295509295565b600080600080600060a0868803121561292d57600080fd5b85359450602086013593506040860135925061294b60608701612744565b9150608086013578ffffffffffffffffffffffffffffffffffffffffffffffffff8116811461297957600080fd5b809150509295509295909350565b6000806040838503121561299a57600080fd5b823591506127a16020840161272f565b600080604083850312156129bd57600080fd5b82359150602083013565ffffffffffff811681146129da57600080fd5b809150509250929050565b600080604083850312156129f857600080fd5b823591506127a160208401612744565b600060208284031215612a1a57600080fd5b6127708261272f565b600060208284031215612a3557600080fd5b61277082612744565b6000825160005b81811015612a5f5760208186018101518583015201612a45565b81811115612a6e576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612ac757835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612a95565b50909695505050505050565b60008219821115612ae657612ae6612b80565b500190565b600082612b21577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612b3857612b38612b80565b500390565b600060ff821660ff841680821015612b5757612b57612b80565b90039392505050565b600060ff821660ff811415612b7757612b77612b80565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8015158114612c1b57600080fd5b5056fea164736f6c6343000806000a";

type MesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Meson__factory extends ContractFactory {
  constructor(...args: MesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Meson> {
    return super.deploy(supportedTokens, overrides || {}) as Promise<Meson>;
  }
  getDeployTransaction(
    supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(supportedTokens, overrides || {});
  }
  attach(address: string): Meson {
    return super.attach(address) as Meson;
  }
  connect(signer: Signer): Meson__factory {
    return super.connect(signer) as Meson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonInterface {
    return new utils.Interface(_abi) as MesonInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Meson {
    return new Contract(address, _abi, signerOrProvider) as Meson;
  }
}
