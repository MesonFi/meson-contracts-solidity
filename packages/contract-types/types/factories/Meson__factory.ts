/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Meson, MesonInterface } from "../Meson";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_supportedTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "recipientHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "requestSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002de938038062002de98339810160408190526200003491620001fa565b60405180608001604052806052815260200162002d9760529139805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c0016040516020818303038152906040528051906020012060008190555060005b81518110156200015557620001408282815181106200012c576200012c620002fd565b60200260200101516200015d60201b60201c565b806200014c81620002d3565b91505062000109565b505062000329565b6001600160a01b0381166000818152600160208181526040808420805460ff1916909317909255815160609590951b6001600160601b0319168582015281516014818703018152603490950182528451948101949094208083526003855281832080546001600160a01b0319168517905592825260049093529190912055565b80516001600160a01b0381168114620001f557600080fd5b919050565b600060208083850312156200020e57600080fd5b82516001600160401b03808211156200022657600080fd5b818501915085601f8301126200023b57600080fd5b81518181111562000250576200025062000313565b8060051b604051601f19603f8301168101818110858211171562000278576200027862000313565b604052828152858101935084860182860187018a10156200029857600080fd5b600095505b83861015620002c657620002b181620001dd565b8552600195909501949386019386016200029d565b5098975050505050505050565b6000600019821415620002f657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b612a5e80620003396000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063873e03b2116100975780639d327f45116100665780639d327f4514610215578063b3fb656414610228578063e52d04041461023b578063f7888aec1461029657600080fd5b8063873e03b2146101ae5780638a7e4552146101c15780638e93243b146101d457806394149c1a146101e757600080fd5b80634c5c8123116100d35780634c5c812314610162578063529eb49a146101755780635dc013e3146101885780637c41e82a1461019b57600080fd5b806308fab167146100fa5780631aba3a551461010f578063399f3ee51461014f575b600080fd5b61010d6101083660046124f3565b6102ca565b005b61013561011d36600461249e565b60066020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b61010d61015d3660046126c2565b6104ad565b61010d6101703660046125f7565b6106c7565b61010d61018336600461279f565b61084f565b61010d6101963660046125f7565b610c67565b61010d6101a93660046125d4565b610e34565b61010d6101bc36600461270e565b610fde565b61010d6101cf366004612812565b611138565b61010d6101e2366004612897565b611381565b6040517f8000003c000000000000000000000000000000000000000000000000000000008152602001610146565b61010d610223366004612639565b6115a6565b61010d6102363660046124f3565b61181f565b610271610249366004612897565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610146565b6102a96102a43660046124c0565b6119f5565b6040516fffffffffffffffffffffffffffffffff9091168152602001610146565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054829060ff16610360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e00000000000000000000000000000060448201526064015b60405180910390fd5b3360008181526006602052604090205463ffffffff16806103dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f61646472657373206e6f742072656769737465726564000000000000000000006044820152606401610357565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600460209081526040808320548084526005835281842063ffffffff861685529092529091205461043c906fffffffffffffffffffffffffffffffff1686611a5e565b600082815260056020908152604080832063ffffffff87168452909152902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff929092169190911790556104a5868487611a9d565b505050505050565b60006104ba848484611c51565b60008181526009602090815260409182902082518084019093525463ffffffff811680845264010000000090910465ffffffffffff16918301919091529192509080610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f7377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610357565b816020015165ffffffffffff164265ffffffffffff16116105df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5468652073776170206973207374696c6c20696e206c6f636b000000000000006044820152606401610357565b6000806105ec8888611cc6565b600081815260056020908152604080832063ffffffff89168452909152902054919350915061062d906fffffffffffffffffffffffffffffffff1683611d78565b600091825260056020908152604080842063ffffffff96909616845294815284832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff939093169290921790915594815260099094525090912080547fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000016905550505050565b60006106d68383600054611c51565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f7377617020636f6e666c696374000000000000000000000000000000000000006044820152606401610357565b6000806107728585611db7565b91509150600061077f3390565b60408051808201825273ffffffffffffffffffffffffffffffffffffffff8084168252600060208084018281528a8352600890915293902091518254935163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff0000000000000000000000000000000000000000000000009094169116179190911790559050610814838284612016565b6040518481527fa67aeefca6ffac499b56c6e714636f7ade5d82fde82aef50665ad3e88be5cb4b9060200160405180910390a1505050505050565b600061085c888888611c51565b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905290915060019060a0016020604051602081039080840390855afa1580156108b2573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610357565b60008061095d8a8a611cc6565b915091506000826fffffffffffffffffffffffffffffffff16116109dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610357565b60008381526009602052604090205463ffffffff1615610a59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f6c6f636b696e67207377617020616c72656164792065786973747300000000006044820152606401610357565b336000908152600660209081526040808320548484526005835281842063ffffffff9091168085529252909120546fffffffffffffffffffffffffffffffff84811691161015610b05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f696e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610357565b600082815260056020908152604080832063ffffffff85168452909152902054610b429084906fffffffffffffffffffffffffffffffff16612952565b600083815260056020908152604080832063ffffffff86168085529083529281902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff959095169490941790935582518084019093529082528101610bbd6104b042612931565b65ffffffffffff908116909152600086815260096020908152604091829020845181549590920151909316640100000000027fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000090941663ffffffff90911617929092179055517f4b9652d234ab744ed655916a0c1ddd3e9d02be9a04f7aee8b0bf1e8dfce0173a90610c529086815260200190565b60405180910390a15050505050505050505050565b6000610c768383600054611c51565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1680610d05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f6e6f2073776170000000000000000000000000000000000000000000000000006044820152606401610357565b6000806000610d1487876120db565b9250925092504265ffffffffffff168165ffffffffffff1610610d93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f73776170206973206c6f636b65640000000000000000000000000000000000006044820152606401610357565b600083815260036020908152604080832054888452600890925290912080547fffffffffffffffff00000000000000000000000000000000000000000000000016905573ffffffffffffffffffffffffffffffffffffffff16610df7818685611a9d565b6040518681527f5a399591cfd74c375a1ffd61c20221db0db82381f65516889ed13c8cd1f99d5b9060200160405180910390a15050505050505050565b60008281526008602052604090205473ffffffffffffffffffffffffffffffffffffffff16610ebf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f6e6f2073776170000000000000000000000000000000000000000000000000006044820152606401610357565b60008281526008602052604090205474010000000000000000000000000000000000000000900463ffffffff1615610f53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f7377617020626f6e64656420746f20616e6f746865722070726f7669646572006044820152606401610357565b60008281526008602090815260409182902080547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000063ffffffff86160217905590518381527f9dadb60bc000bbd7b49430723ed56b6aa35909dcab91ec2cb17ed5da7ae4ffd6910160405180910390a15050565b6000610feb898989611c51565b60008181526009602090815260409182902082518084018452905463ffffffff81168252640100000000900465ffffffffffff168183015291517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608a901b169181019190915291925090611080908390603401604051602081830303815290604052805190602001208a8a898989612191565b60008061108d8c8c611cc6565b600081815260036020908152604080832054898452600990925290912080547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055919350915073ffffffffffffffffffffffffffffffffffffffff166110f6818a85611a9d565b6040518581527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f49060200160405180910390a150505050505050505050505050565b60006111478888600054611c51565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff16806111f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f73776170206e6f7420666f756e64206f72206e6f7420626f6e646564000000006044820152606401610357565b6112078389600054858b8b8b612191565b6000806112148c8c6120db565b50600087815260086020526040902080547fffffffffffffffff000000000000000000000000000000000000000000000000169055909250905085156112f357600082815260056020908152604080832063ffffffff87168452909152902054611290906fffffffffffffffffffffffffffffffff1682611d78565b600083815260056020908152604080832063ffffffff88168452909152902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff92909216919091179055611340565b63ffffffff831660009081526007602090815260408083205485845260039092529091205473ffffffffffffffffffffffffffffffffffffffff918216911661133d818385611a9d565b50505b6040518581527f6921a2110a802468e8955f2885822155442ad19c60f42db0444a6993c23d20629060200160405180910390a1505050505050505050505050565b3363ffffffff82166113ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616e6e6f742075736520696e646578203000000000000000000000000000006044820152606401610357565b63ffffffff821660009081526007602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610357565b73ffffffffffffffffffffffffffffffffffffffff811660009081526006602052604090205463ffffffff1615611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610357565b63ffffffff9091166000818152600760209081526040808320805473ffffffffffffffffffffffffffffffffffffffff9096167fffffffffffffffffffffffff000000000000000000000000000000000000000090961686179055938252600690529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000169091179055565b60006115b58888600054611c51565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f7377617020636f6e666c696374000000000000000000000000000000000000006044820152606401610357565b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611697573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610357565b6000806117428a8a611db7565b60408051808201825273ffffffffffffffffffffffffffffffffffffffff808d16825263ffffffff808a16602080850191825260008b815260089091529490942092518354945190911674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090941691161791909117905590925090506117e0828983612016565b6040518381527fd7a1fd45274eb446b18cdf83061f521e75114fa2c53ecb42bd853bba72097bab9060200160405180910390a150505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054829060ff166118b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e0000000000000000000000000000006044820152606401610357565b3360008181526006602052604090205463ffffffff168061192d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f61646472657373206e6f742072656769737465726564000000000000000000006044820152606401610357565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600460209081526040808320548084526005835281842063ffffffff861685529092529091205461198c906fffffffffffffffffffffffffffffffff1686611d78565b600082815260056020908152604080832063ffffffff87168452909152902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff929092169190911790556104a5868487612016565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260046020908152604080832054938516835260068252808320549383526005825280832063ffffffff909416835292905220546fffffffffffffffffffffffffffffffff165b92915050565b60006fffffffffffffffffffffffffffffffff8316611a7d8385612952565b9150816fffffffffffffffffffffffffffffffff161115611a5857600080fd5b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526fffffffffffffffffffffffffffffffff8516604480840191909152845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611b7891906128c2565b6000604051808303816000865af19150503d8060008114611bb5576040519150601f19603f3d011682016040523d82523d6000602084013e611bba565b606091505b5091509150818015611be4575080511580611be4575080806020019051810190611be4919061251d565b611c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401610357565b5050505050565b6000808484604051611c649291906128b2565b6040519081900381207f1901000000000000000000000000000000000000000000000000000000000000602083015260228201859052604282018190529150606201604051602081830303815290604052805190602001209150509392505050565b600080808080611cd88688018861253a565b965050505093505092506040518060a00160405280606381526020016129c460639139805190602001208314611d6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c6964207377617020726571756573742074797065686173680000006044820152606401610357565b9093509150505b9250929050565b60006fffffffffffffffffffffffffffffffff8316611d9783856128fd565b9150816fffffffffffffffffffffffffffffffff161015611a5857600080fd5b6000806000806000611dc987876120db565b600083815260036020526040902054929550909350915073ffffffffffffffffffffffffffffffffffffffff1680611e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e0000000000000000000000000000006044820152606401610357565b6000836fffffffffffffffffffffffffffffffff1611611eff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f7377617020616d6f756e74206d7573742062652067726561746572207468616e60448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610357565b42611f0c610e1082612931565b65ffffffffffff168365ffffffffffff1611611f84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f65787069726520747320746f6f206561726c79000000000000000000000000006044820152606401610357565b611f90611c2082612931565b65ffffffffffff168365ffffffffffff1610612008576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f65787069726520747320746f6f206c61746500000000000000000000000000006044820152606401610357565b509791965090945050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301523060248301526fffffffffffffffffffffffffffffffff831660448301528416906323b872dd90606401602060405180830381600087803b15801561209d57600080fd5b505af11580156120b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d5919061251d565b50505050565b60008080808080806120ef888a018a61253a565b50509450509350935093506040518060a00160405280606381526020016129c460639139805190602001208414612182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c6964207377617020726571756573742074797065686173680000006044820152606401610357565b91955093509150509250925092565b73ffffffffffffffffffffffffffffffffffffffff841661220e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610357565b60006040518060600160405280602b8152602001612a27602b913980516020918201206040805192830191909152810189905260608101889052608001604051602081830303815290604052805190602001209050600086826040516020016122a99291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa15801561232f573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146123cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610357565b505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146123fc57600080fd5b919050565b60008083601f84011261241357600080fd5b50813567ffffffffffffffff81111561242b57600080fd5b602083019150836020828501011115611d7157600080fd5b80356fffffffffffffffffffffffffffffffff811681146123fc57600080fd5b803563ffffffff811681146123fc57600080fd5b803565ffffffffffff811681146123fc57600080fd5b803560ff811681146123fc57600080fd5b6000602082840312156124b057600080fd5b6124b9826123d8565b9392505050565b600080604083850312156124d357600080fd5b6124dc836123d8565b91506124ea602084016123d8565b90509250929050565b6000806040838503121561250657600080fd5b61250f836123d8565b91506124ea60208401612443565b60006020828403121561252f57600080fd5b81516124b9816129b2565b600080600080600080600060e0888a03121561255557600080fd5b873596506020880135955061256c60408901612443565b945061257a60608901612477565b935061258860808901612477565b925060a08801357fffffffff00000000000000000000000000000000000000000000000000000000811681146125bd57600080fd5b8092505060c0880135905092959891949750929550565b600080604083850312156125e757600080fd5b823591506124ea60208401612463565b6000806020838503121561260a57600080fd5b823567ffffffffffffffff81111561262157600080fd5b61262d85828601612401565b90969095509350505050565b600080600080600080600060c0888a03121561265457600080fd5b873567ffffffffffffffff81111561266b57600080fd5b6126778a828b01612401565b909850965061268a9050602089016123d8565b945060408801359350606088013592506126a66080890161248d565b91506126b460a08901612463565b905092959891949750929550565b6000806000604084860312156126d757600080fd5b833567ffffffffffffffff8111156126ee57600080fd5b6126fa86828701612401565b909790965060209590950135949350505050565b60008060008060008060008060e0898b03121561272a57600080fd5b883567ffffffffffffffff81111561274157600080fd5b61274d8b828c01612401565b9099509750506020890135955061276660408a016123d8565b945061277460608a016123d8565b93506080890135925060a0890135915061279060c08a0161248d565b90509295985092959890939650565b600080600080600080600060c0888a0312156127ba57600080fd5b873567ffffffffffffffff8111156127d157600080fd5b6127dd8a828b01612401565b909850965050602088013594506127f6604089016123d8565b935060608801359250608088013591506126b460a0890161248d565b600080600080600080600060c0888a03121561282d57600080fd5b873567ffffffffffffffff81111561284457600080fd5b6128508a828b01612401565b9098509650506020880135945060408801359350606088013592506128776080890161248d565b915060a0880135612887816129b2565b8091505092959891949750929550565b6000602082840312156128a957600080fd5b6124b982612463565b8183823760009101908152919050565b6000825160005b818110156128e357602081860181015185830152016128c9565b818111156128f2576000828501525b509190910192915050565b60006fffffffffffffffffffffffffffffffff80831681851680830382111561292857612928612983565b01949350505050565b600065ffffffffffff80831681851680830382111561292857612928612983565b60006fffffffffffffffffffffffffffffffff8381169083168181101561297b5761297b612983565b039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80151581146129c057600080fd5b5056fe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e295377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Meson__factory extends ContractFactory {
  constructor(...args: MesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Meson> {
    return super.deploy(_supportedTokens, overrides || {}) as Promise<Meson>;
  }
  getDeployTransaction(
    _supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_supportedTokens, overrides || {});
  }
  attach(address: string): Meson {
    return super.attach(address) as Meson;
  }
  connect(signer: Signer): Meson__factory {
    return super.connect(signer) as Meson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonInterface {
    return new utils.Interface(_abi) as MesonInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Meson {
    return new Contract(address, _abi, signerOrProvider) as Meson;
  }
}
