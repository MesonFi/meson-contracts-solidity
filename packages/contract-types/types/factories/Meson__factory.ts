/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Meson, MesonInterface } from "../Meson";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_supportedTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inToken",
        type: "address",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "outToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentChain",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "inToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "postSwap",
    outputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "expireTs",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalDemandFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalSupplyFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405260526080818152906200217c60a039805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152600360808201523060a082015260c00160405160208183030381529060405280519060200120600055348015620000d757600080fd5b50604051620021ce380380620021ce833981016040819052620000fa916200025b565b60005b81518110156200014957620001348282815181106200012057620001206200035e565b60200260200101516200015160201b60201c565b80620001408162000334565b915050620000fd565b50506200038a565b6001600160a01b0381166000818152600160208181526040808420805460ff19168417905580516080810182528481528083018581528183018681526060838101818152988852600380875294909720835181559151958201959095559351600285015594518051949594620001d093928501929190910190620001d7565b5050505050565b82805482825590600052602060002090810192821562000215579160200282015b8281111562000215578251825591602001919060010190620001f8565b506200022392915062000227565b5090565b5b8082111562000223576000815560010162000228565b80516001600160a01b03811681146200025657600080fd5b919050565b600060208083850312156200026f57600080fd5b82516001600160401b03808211156200028757600080fd5b818501915085601f8301126200029c57600080fd5b815181811115620002b157620002b162000374565b8060051b604051601f19603f83011681018181108582111715620002d957620002d962000374565b604052828152858101935084860182860187018a1015620002f957600080fd5b600095505b83861015620003275762000312816200023e565b855260019590950194938601938601620002fe565b5098975050505050505050565b60006000198214156200035757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611de2806200039a6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639d86698511610097578063d541beb311610066578063d541beb314610345578063ec9b5b3a14610358578063f3fef3a31461036b578063f7888aec1461037e57600080fd5b80639d8669851461026f578063a8f81b1a146102f2578063bcc20ff61461031b578063c68596011461032e57600080fd5b806361565d25116100d357806361565d251461015357806368c4ac261461018f5780636bb39ae0146101c257806372cbf72e1461025a57600080fd5b80632d675a13146101055780633ce758b51461011a57806347e7ef241461012d5780634e1389ed14610140575b600080fd5b610118610113366004611ba4565b6103a9565b005b610118610128366004611ab0565b610772565b61011861013b366004611a4b565b6108a5565b61011861014e366004611aef565b61094f565b61017c61016136600461194d565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b6101b261019d36600461194d565b60016020526000908152604090205460ff1681565b6040519015158152602001610186565b6102176101d0366004611a97565b6008602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949283169391929091169086565b604080516001600160a01b0397881681529587166020870152938616938501939093526060840191909152909216608082015260a081019190915260c001610186565b604051632000000f60e21b8152602001610186565b6102bb61027d366004611a97565b600660205260009081526040902080546001820154600283015460038401546004909401546001600160a01b03938416949284169391929091169085565b604080516001600160a01b03968716815294861660208601528401929092529092166060820152608081019190915260a001610186565b61017c61030036600461194d565b6001600160a01b031660009081526005602052604090205490565b61017c610329366004611c02565b610b99565b61011861033c3660046119a2565b50505050505050565b610118610353366004611a97565b610f32565b610118610366366004611a97565b611051565b610118610379366004611a4b565b611197565b61017c61038c36600461196f565b600760209081526000928352604080842090915290825290205481565b6001600160a01b038216600090815260016020526040902054829060ff166103ec5760405162461bcd60e51b81526004016103e390611cbe565b60405180910390fd5b60008060006103fa876111e8565b925092509250600083116104505760405162461bcd60e51b815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103e3565b6040516001600160601b0319606088901b166020820152829060340160405160208183030381529060405280519060200120146104c65760405162461bcd60e51b81526020600482015260146024820152730e8ded6cadc40c8decae640dcdee840dac2e8c6d60631b60448201526064016103e3565b6040516001600160601b0319606087901b166020820152819060340160405160208183030381529060405280519060200120146105455760405162461bcd60e51b815260206004820152601860248201527f726563697069656e7420646f6573206e6f74206d61746368000000000000000060448201526064016103e3565b6001600160a01b0386166000908152600760209081526040808320338085529252909120548411156105b05760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016103e3565b875160208901206105d281600090815260086020526040902060030154151590565b156106155760405162461bcd60e51b81526020600482015260136024820152721cddd85c08185b1c9958591e481b1bd8dad959606a1b60448201526064016103e3565b6001600160a01b03808916600090815260076020908152604080832093861683529290522054610646908690611d29565b6001600160a01b03808a1660008181526007602090815260408083208886168085529083529281902095909555845160c08101865282815290810191909152928301526060820187905288166080820152429060a081016106a96104b084611d11565b9052600083815260086020908152604091829020835181546001600160a01b03199081166001600160a01b0392831617835585840151600184018054831691841691909117905585850151600284018054831691841691909117905560608601516003840155608086015160048401805490921690831617905560a0909401516005909101558151858152928616908301527faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de910160405180910390a150505050505050505050565b60008481526006602052604090206004015484906107a25760405162461bcd60e51b81526004016103e390611ce9565b600085815260066020908152604091829020825160a08101845281546001600160a01b0390811680835260018401548216948301949094526002830154948201949094526003820154909316606084015260040154608083015261080a90879087878761128e565b6080810151606082015160208084015160008a815260069092526040822080546001600160a01b03199081168255600182018054821690556002820184905560038201805490911690556004019190915561086682828561132b565b6040518981527f6921a2110a802468e8955f2885822155442ad19c60f42db0444a6993c23d2062906020015b60405180910390a1505050505050505050565b6001600160a01b038216600090815260016020526040902054829060ff166108df5760405162461bcd60e51b81526004016103e390611cbe565b6001600160a01b03831660009081526007602090815260408083203380855292529091205461090e9084611468565b6001600160a01b0380861660009081526007602090815260408083209386168352929052205561093e8484611489565b6109498482856114cc565b50505050565b6000858152600860208181526040808420815160c08101835281546001600160a01b039081168252600183015481168286015260028301548116938201939093526003820154606082018190526004830154909316608082015260059091015460a082015293899052919052610a135760405162461bcd60e51b8152602060048201526024808201527f6e6f206c6f636b696e67207377617020666f756e6420666f7220746865207377604482015263185c125960e21b60648201526084016103e3565b8060600151851115610a845760405162461bcd60e51b815260206004820152603460248201527f72656c6561736520616d6f756e742063616e6e6f742062652067726561746572604482015273081d1a185b881b1bd8dada5b99c8185b5bdd5b9d60621b60648201526084016103e3565b610a9586826000015186868661128e565b6040810151602082015160808301516060840151881015610b16576001600160a01b038084166000908152600760209081526040808320938616835292905220546060850151610aef9190610aea908b611554565b611468565b6001600160a01b038085166000908152600760209081526040808320938716835292905220555b600089815260086020526040812080546001600160a01b03199081168255600182018054821690556002820180548216905560038201839055600482018054909116905560050155610b6983828a61132b565b6040518981527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f490602001610892565b6001600160a01b038516600090815260016020526040812054869060ff16610bd35760405162461bcd60e51b81526004016103e390611cbe565b6000806000610be18b61156f565b6040516001600160601b031960608f901b166020820152929550909350915082906034016040516020818303038152906040528051906020012014610c615760405162461bcd60e51b81526020600482015260166024820152750d2dca8ded6cadc40c8decae640dcdee840dac2e8c6d60531b60448201526064016103e3565b60008111610cbf5760405162461bcd60e51b815260206004820152602560248201527f7377617020616d6f756e74206d7573742062652067726561746572207468616e604482015264207a65726f60d81b60648201526084016103e3565b42610ccc610e1082611d11565b8411610d115760405162461bcd60e51b81526020600482015260146024820152736578706972657320747320746f6f206561726c7960601b60448201526064016103e3565b610d1d611c2082611d11565b8410610d615760405162461bcd60e51b81526020600482015260136024820152726578706972657320747320746f6f206c61746560681b60448201526064016103e3565b6000338d5160208f012097509050610d8a87600090815260066020526040902060040154151590565b15610dc75760405162461bcd60e51b815260206004820152600d60248201526c1cddd85c0818dbdb999b1a58dd609a1b60448201526064016103e3565b610dd4878c8c8c8c611607565b6040518060a001604052808c6001600160a01b03168152602001826001600160a01b031681526020018681526020018d6001600160a01b03168152602001848152506006600089815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040155905050610ed28c8c856114cc565b60408051888152602081018490529081018490526001600160a01b038d1660608201527ff60f3861c423568d0aae6a3a3bc9d4b41c40ab0cb0267599d9d35122e4f320e89060800160405180910390a15050505050509695505050505050565b6000818152600660205260409020600401548190610f625760405162461bcd60e51b81526004016103e390611ce9565b60008281526006602052604090206002015482904211610fb75760405162461bcd60e51b815260206004820152601060248201526f1cddd85c081b9bdd08195e1c1a5c995960821b60448201526064016103e3565b600083815260066020526040812060038101805482546004840180546001600160a01b03198084168755600187018054821690556002909601879055948316909355939091556001600160a01b0390811692169061101683838361132b565b6040518681527f5a399591cfd74c375a1ffd61c20221db0db82381f65516889ed13c8cd1f99d5b9060200160405180910390a1505050505050565b60008181526008602052604090206005810154600282015460019092015442926001600160a01b0390811691168261109b5760405162461bcd60e51b81526004016103e390611ce9565b8284116110e05760405162461bcd60e51b8152602060048201526013602482015272151a19481cddd85c081a5cc81b1bd8dada5959606a1b60448201526064016103e3565b6001600160a01b0380831660009081526007602090815260408083209385168352928152828220548883526008909152919020600301546111219190611468565b6001600160a01b0392831660009081526007602090815260408083209490951682529283528381209190915594855260089052832080546001600160a01b031990811682556001820180548216905560028201805482169055600382018590556004820180549091169055600501929092555050565b6001600160a01b038216600090815260016020526040902054829060ff166111d15760405162461bcd60e51b81526004016103e390611cbe565b336111dc8484611614565b6109498182868661168b565b6000806000806000806000878060200190518101906112079190611b38565b96509650509550505093506040518060a0016040528060698152602001611d6d606991398051906020012084146112805760405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642073776170207265717565737420747970656861736800000060448201526064016103e3565b919790965090945092505050565b604080518082018252601b81527f5377617052656c6561736528627974657333322073776170496429000000000060209182015290516000916112fe917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b604051602081830303815290604052805190602001209050611323818686868661174d565b505050505050565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916113b79190611c83565b6000604051808303816000865af19150503d80600081146113f4576040519150601f19603f3d011682016040523d82523d6000602084013e6113f9565b606091505b50915091508180156114235750805115806114235750808060200190518101906114239190611a75565b6114615760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016103e3565b5050505050565b6000826114758382611d11565b915081101561148357600080fd5b92915050565b6001600160a01b0382166000908152600460205260409020546114ac9082611468565b6001600160a01b0390921660009081526004602052604090209190915550565b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b15801561151c57600080fd5b505af1158015611530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190611a75565b6000826115618382611d29565b915081111561148357600080fd5b60008060008060008060008780602001905181019061158e9190611b38565b50505093509350935093506040518060a0016040528060698152602001611d6d606991398051906020012084146112805760405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642073776170207265717565737420747970656861736800000060448201526064016103e3565b611461858585858561174d565b6001600160a01b0382166000908152600460205260409020548111156116685760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b60448201526064016103e3565b6001600160a01b0382166000908152600460205260409020546114ac9082611554565b6001600160a01b038083166000908152600760209081526040808320938716835292905220548111156116ec5760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b60448201526064016103e3565b6001600160a01b0380831660009081526007602090815260408083209387168352929052205461171c9082611554565b6001600160a01b0380841660009081526007602090815260408083209388168352929052205561094982858361132b565b6000805460405161190160f01b602082015260228101919091526042810187905260620160408051601f19818403018152919052805160209091012090506001600160a01b0385166117e15760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016103e3565b60408051600081526020810180835283905260ff841691810191909152606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611834573d6000803e3d6000fd5b505050602060405103516001600160a01b0316856001600160a01b0316146113235760405162461bcd60e51b8152602060048201526012602482015271696e76616c6964207369676e61747572657360701b60448201526064016103e3565b80356001600160a01b03811681146118aa57600080fd5b919050565b600082601f8301126118c057600080fd5b813567ffffffffffffffff808211156118db576118db611d56565b604051601f8301601f19908116603f0116810190828211818310171561190357611903611d56565b8160405283815286602085880101111561191c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff811681146118aa57600080fd5b60006020828403121561195f57600080fd5b61196882611893565b9392505050565b6000806040838503121561198257600080fd5b61198b83611893565b915061199960208401611893565b90509250929050565b600080600080600080600060e0888a0312156119bd57600080fd5b6119c688611893565b9650602088013567ffffffffffffffff808211156119e357600080fd5b6119ef8b838c016118af565b975060408a0135965060608a0135915080821115611a0c57600080fd5b50611a198a828b016118af565b945050611a2860808901611893565b9250611a3660a08901611893565b915060c0880135905092959891949750929550565b60008060408385031215611a5e57600080fd5b611a6783611893565b946020939093013593505050565b600060208284031215611a8757600080fd5b8151801515811461196857600080fd5b600060208284031215611aa957600080fd5b5035919050565b60008060008060808587031215611ac657600080fd5b843593506020850135925060408501359150611ae46060860161193c565b905092959194509250565b600080600080600060a08688031215611b0757600080fd5b85359450602086013593506040860135925060608601359150611b2c6080870161193c565b90509295509295909350565b600080600080600080600060e0888a031215611b5357600080fd5b87519650602088015195506040880151945060608801519350608088015163ffffffff60e01b81168114611b8657600080fd5b8093505060a0880151915060c0880151905092959891949750929550565b600080600060608486031215611bb957600080fd5b833567ffffffffffffffff811115611bd057600080fd5b611bdc868287016118af565b935050611beb60208501611893565b9150611bf960408501611893565b90509250925092565b60008060008060008060c08789031215611c1b57600080fd5b863567ffffffffffffffff811115611c3257600080fd5b611c3e89828a016118af565b965050611c4d60208801611893565b9450611c5b60408801611893565b93506060870135925060808701359150611c7760a0880161193c565b90509295509295509295565b6000825160005b81811015611ca45760208186018101518583015201611c8a565b81811115611cb3576000828501525b509190910192915050565b6020808252601190820152703ab739bab83837b93a32b2103a37b5b2b760791b604082015260600190565b6020808252600e908201526d1cddd85c081b9bdd08199bdd5b9960921b604082015260600190565b60008219821115611d2457611d24611d40565b500190565b600082821015611d3b57611d3b611d40565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe53776170526571756573742875696e743235362065787069726554732c627974657320696e546f6b656e2c75696e7432353620616d6f756e742c627974657334206f7574436861696e2c6279746573206f7574546f6b656e2c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Meson__factory extends ContractFactory {
  constructor(...args: MesonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Meson> {
    return super.deploy(_supportedTokens, overrides || {}) as Promise<Meson>;
  }
  getDeployTransaction(
    _supportedTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_supportedTokens, overrides || {});
  }
  attach(address: string): Meson {
    return super.attach(address) as Meson;
  }
  connect(signer: Signer): Meson__factory {
    return super.connect(signer) as Meson__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonInterface {
    return new utils.Interface(_abi) as MesonInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Meson {
    return new Contract(address, _abi, signerOrProvider) as Meson;
  }
}
