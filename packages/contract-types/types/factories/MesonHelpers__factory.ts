/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonHelpers, MesonHelpersInterface } from "../MesonHelpers";

const _abi = [
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260405180608001604052806052815260200161026860529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012046306040516020016100b495949392919061010c565b604051602081830303815290604052805190602001206000553480156100d957600080fd5b506101a5565b6100e88161015f565b82525050565b6100f781610171565b82525050565b6101068161019b565b82525050565b600060a08201905061012160008301886100ee565b61012e60208301876100ee565b61013b60408301866100ee565b61014860608301856100fd565b61015560808301846100df565b9695505050505050565b600061016a8261017b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60b5806101b36000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806394149c1a14602d575b600080fd5b60336047565b604051603e91906063565b60405180910390f35b6000638000003c60e01b905090565b605d81607c565b82525050565b6000602082019050607660008301846056565b92915050565b60007fffffffff000000000000000000000000000000000000000000000000000000008216905091905056fea164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonHelpersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonHelpersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonHelpers__factory extends ContractFactory {
  constructor(...args: MesonHelpersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonHelpers> {
    return super.deploy(overrides || {}) as Promise<MesonHelpers>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonHelpers {
    return super.attach(address) as MesonHelpers;
  }
  connect(signer: Signer): MesonHelpers__factory {
    return super.connect(signer) as MesonHelpers__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonHelpersInterface {
    return new utils.Interface(_abi) as MesonHelpersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonHelpers {
    return new Contract(address, _abi, signerOrProvider) as MesonHelpers;
  }
}
