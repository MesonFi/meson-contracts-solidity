/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonHelpersTest,
  MesonHelpersTestInterface,
} from "../MesonHelpersTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkReleaseSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkRequestSignature",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "decodeSwapInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "expireTs",
        type: "uint64",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
    ],
    name: "encodeSwap",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "expireTs",
        type: "uint64",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
    ],
    name: "getSwapId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526052608081815290610ac960a039805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d457600080fd5b506109e5806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063058aa9ba146100675780630f7791461461007c5780635f5a586c146100a5578063936e27d6146100d357806394149c1a146100e6578063c639e835146100fb575b600080fd5b61007a6100753660046106e6565b61011c565b005b61008f61008a366004610831565b61016b565b60405161009c91906108bb565b60405180910390f35b6100b86100b33660046107f4565b6101f2565b6040805193845260208401929092529082015260600161009c565b61007a6100e1366004610745565b610219565b604051632000000f60e21b815260200161009c565b61010e610109366004610669565b6102d6565b60405190815260200161009c565b6040516bffffffffffffffffffffffff19606087901b1660208201526101639087906034016040516020818303038152906040528051906020012060005487878787610365565b505050505050565b60606040518060800160405280605881526020016109566058913980516020918201208751888301208451858401206040805194850193909352918301526060820187905267ffffffffffffffff861660808301526001600160e01b0319851660a083015260c082015260e001604051602081830303815290604052905095945050505050565b60008060006102008461050c565b67ffffffffffffffff9092169450925090509193909250565b60408051600081526020810180835287905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561026c573d6000803e3d6000fd5b505050602060405103516001600160a01b0316846001600160a01b0316146102cf5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064015b60405180910390fd5b5050505050565b6040516bffffffffffffffffffffffff19606087901b16602082015260009061035b90610318906034016040516020818303038152906040528787878761016b565b80516020918201206000546040805161190160f01b8186015260228101929092526042808301939093528051808303909301835260629091019052805191012090565b9695505050505050565b6001600160a01b0384166103bb5760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016102c6565b60006040518060600160405280602b81526020016109ae602b9139805160209182012060408051928301919091528101899052606081018890526080016040516020818303038152906040528051906020012090506000868260405160200161043b92919061190160f01b81526002810192909252602282015260420190565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa1580156104a3573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b0316146105015760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016102c6565b505050505050505050565b60008060008060008060008780602001905181019061052b9190610795565b50509350935093509350604051806080016040528060588152602001610956605891398051906020012084146105a35760405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642073776170207265717565737420747970656861736800000060448201526064016102c6565b97919650945092505050565b80356001600160a01b03811681146105c657600080fd5b919050565b600082601f8301126105dc57600080fd5b813567ffffffffffffffff808211156105f7576105f7610910565b604051601f8301601f19908116603f0116810190828211818310171561061f5761061f610910565b8160405283815286602085880101111561063857600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff811681146105c657600080fd5b600080600080600060a0868803121561068157600080fd5b61068a866105af565b94506020860135935060408601356106a18161093f565b925060608601356106b181610926565b9150608086013567ffffffffffffffff8111156106cd57600080fd5b6106d9888289016105cb565b9150509295509295909350565b60008060008060008060c087890312156106ff57600080fd5b8635955061070f602088016105af565b945061071d604088016105af565b9350606087013592506080870135915061073960a08801610658565b90509295509295509295565b600080600080600060a0868803121561075d57600080fd5b8535945061076d602087016105af565b9350604086013592506060860135915061078960808701610658565b90509295509295909350565b60008060008060008060c087890312156107ae57600080fd5b86519550602087015194506040870151935060608701516107ce8161093f565b60808801519093506107df81610926565b8092505060a087015190509295509295509295565b60006020828403121561080657600080fd5b813567ffffffffffffffff81111561081d57600080fd5b610829848285016105cb565b949350505050565b600080600080600060a0868803121561084957600080fd5b853567ffffffffffffffff8082111561086157600080fd5b61086d89838a016105cb565b965060208801359550604088013591506108868261093f565b90935060608701359061089882610926565b909250608087013590808211156108ae57600080fd5b506106d9888289016105cb565b600060208083528351808285015260005b818110156108e8578581018301518582016040015282016108cc565b818111156108fa576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461093c57600080fd5b50565b67ffffffffffffffff8116811461093c57600080fdfe537761705265717565737428627974657320696e546f6b656e2c75696e7432353620616d6f756e742c75696e7436342065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e295377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonHelpersTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonHelpersTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonHelpersTest__factory extends ContractFactory {
  constructor(...args: MesonHelpersTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonHelpersTest> {
    return super.deploy(overrides || {}) as Promise<MesonHelpersTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonHelpersTest {
    return super.attach(address) as MesonHelpersTest;
  }
  connect(signer: Signer): MesonHelpersTest__factory {
    return super.connect(signer) as MesonHelpersTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonHelpersTestInterface {
    return new utils.Interface(_abi) as MesonHelpersTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonHelpersTest {
    return new Contract(address, _abi, signerOrProvider) as MesonHelpersTest;
  }
}
