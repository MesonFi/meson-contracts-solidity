/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonHelpersTest,
  MesonHelpersTestInterface,
} from "../MesonHelpersTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkReleaseSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkRequestSignature",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "decodeSwapInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "fee",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "expireTs",
        type: "uint48",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
    ],
    name: "encodeSwap",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inToken",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "fee",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "expireTs",
        type: "uint48",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
    ],
    name: "getSwapId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a83806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063058aa9ba146100675780635f5a586c1461007c578063936e27d6146100ca57806394149c1a146100dd578063bf141ad3146100f2578063e3dfbb3714610112575b600080fd5b61007a610075366004610729565b610133565b005b61008f61008a366004610856565b610182565b604080519485526001600160801b03909316602085015265ffffffffffff918216928401929092521660608201526080015b60405180910390f35b61007a6100d8366004610788565b6101a0565b604051632000000f60e21b81526020016100c1565b610105610100366004610893565b61025d565b6040516100c1919061093b565b610125610120366004610692565b6102f4565b6040519081526020016100c1565b6040516bffffffffffffffffffffffff19606087901b16602082015261017a9087906034016040516020818303038152906040528051906020012060005487878787610385565b505050505050565b6000806000806101918561052c565b93509350935093509193509193565b60408051600081526020810180835287905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa1580156101f3573d6000803e3d6000fd5b505050602060405103516001600160a01b0316846001600160a01b0316146102565760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064015b60405180910390fd5b5050505050565b60606040518060a00160405280606381526020016109e96063913980516020918201208851898301208451858401206040805194850193909352918301526001600160801b038816606083015265ffffffffffff8088166080840152861660a08301526001600160e01b0319851660c083015260e08201526101000160405160208183030381529060405290509695505050505050565b6040516bffffffffffffffffffffffff19606088901b16602082015260009061037a9061033790603401604051602081830303815290604052888888888861025d565b80516020918201206000546040805161190160f01b8186015260228101929092526042808301939093528051808303909301835260629091019052805191012090565b979650505050505050565b6001600160a01b0384166103db5760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d70747920616464726573730000604482015260640161024d565b60006040518060600160405280602b8152602001610a4c602b9139805160209182012060408051928301919091528101899052606081018890526080016040516020818303038152906040528051906020012090506000868260405160200161045b92919061190160f01b81526002810192909252602282015260420190565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa1580156104c3573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b0316146105215760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b604482015260640161024d565b505050505050505050565b60008060008060008060008060008980602001905181019061054e91906107d8565b5050945094509450945094506040518060a00160405280606381526020016109e9606391398051906020012085146105c85760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420737761702072657175657374207479706568617368000000604482015260640161024d565b9299919850965090945092505050565b80356001600160a01b03811681146105ef57600080fd5b919050565b600082601f83011261060557600080fd5b813567ffffffffffffffff8082111561062057610620610990565b604051601f8301601f19908116603f0116810190828211818310171561064857610648610990565b8160405283815286602085880101111561066157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff811681146105ef57600080fd5b60008060008060008060c087890312156106ab57600080fd5b6106b4876105d8565b955060208701356106c4816109bf565b945060408701356106d4816109d4565b935060608701356106e4816109d4565b925060808701356106f4816109a6565b915060a087013567ffffffffffffffff81111561071057600080fd5b61071c89828a016105f4565b9150509295509295509295565b60008060008060008060c0878903121561074257600080fd5b86359550610752602088016105d8565b9450610760604088016105d8565b9350606087013592506080870135915061077c60a08801610681565b90509295509295509295565b600080600080600060a086880312156107a057600080fd5b853594506107b0602087016105d8565b935060408601359250606086013591506107cc60808701610681565b90509295509295909350565b600080600080600080600060e0888a0312156107f357600080fd5b8751965060208801519550604088015161080c816109bf565b606089015190955061081d816109d4565b608089015190945061082e816109d4565b60a089015190935061083f816109a6565b8092505060c0880151905092959891949750929550565b60006020828403121561086857600080fd5b813567ffffffffffffffff81111561087f57600080fd5b61088b848285016105f4565b949350505050565b60008060008060008060c087890312156108ac57600080fd5b863567ffffffffffffffff808211156108c457600080fd5b6108d08a838b016105f4565b9750602089013591506108e2826109bf565b9095506040880135906108f4826109d4565b909450606088013590610906826109d4565b909350608088013590610918826109a6565b90925060a0880135908082111561092e57600080fd5b5061071c89828a016105f4565b600060208083528351808285015260005b818110156109685785810183015185820160400152820161094c565b8181111561097a576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146109bc57600080fd5b50565b6001600160801b03811681146109bc57600080fd5b65ffffffffffff811681146109bc57600080fdfe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e295377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a";

type MesonHelpersTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonHelpersTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonHelpersTest__factory extends ContractFactory {
  constructor(...args: MesonHelpersTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonHelpersTest> {
    return super.deploy(overrides || {}) as Promise<MesonHelpersTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonHelpersTest {
    return super.attach(address) as MesonHelpersTest;
  }
  connect(signer: Signer): MesonHelpersTest__factory {
    return super.connect(signer) as MesonHelpersTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonHelpersTestInterface {
    return new utils.Interface(_abi) as MesonHelpersTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonHelpersTest {
    return new Contract(address, _abi, signerOrProvider) as MesonHelpersTest;
  }
}
