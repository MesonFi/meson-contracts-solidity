/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonHelpersTest,
  MesonHelpersTestInterface,
} from "../MesonHelpersTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkReleaseSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkRequestSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "decodeSwapInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expireTs",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
    ],
    name: "encodeSwap",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentChain",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expireTs",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
    ],
    name: "getSwapId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405260526080818152906109d360a039805160209182012060408051808201825260088152674d65736f6e20466960c01b90840152805180820182526001808252603160f81b918501919091528151938401929092527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606083015260808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d757600080fd5b506108ec806100e76000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806369d785d21161005b57806369d785d2146100d957806372cbf72e146100f9578063936e27d61461010e5780639998f1291461012157600080fd5b80633408e47014610082578063375ef84c146100965780635f5a586c146100ab575b600080fd5b604051600181526020015b60405180910390f35b6100a96100a43660046105ef565b610142565b005b6100be6100b93660046106a9565b610156565b6040805193845260208401929092529082015260600161008d565b6100ec6100e736600461077f565b610171565b60405161008d91906107f2565b604051632000000f60e21b815260200161008d565b6100a961011c3660046105ef565b6101ff565b61013461012f3660046106e6565b610264565b60405190815260200161008d565b61014f85858585856102b7565b5050505050565b6000806000610164846103fd565b9250925092509193909250565b60606040518060a001604052806069815260200161087760699139805160209182012087518883012085518684012085518685012060408051958601949094529284018b90526060840191909152608083018890526001600160e01b0319871660a084015260c083015260e08201526101000160405160208183030381529060405290509695505050505050565b61020b858484846104a3565b6001600160a01b0316846001600160a01b03161461014f5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff19606087901b1660208201526000906102a490889060340160405160208183030381529060405287878787610171565b8051906020012090509695505050505050565b6001600160a01b03841661030d5760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d70747920616464726573730000604482015260640161025b565b604080518082018252601b81527f5377617052656c65617365286279746573333220737761704964290000000000602091820152905160009161037d917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b6040516020818303038152906040528051906020012090506103a1818585856104a3565b6001600160a01b0316856001600160a01b0316146103f55760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b604482015260640161025b565b505050505050565b60008060008060008060008780602001905181019061041c9190610649565b50505093509350935093506040518060a0016040528060698152602001610877606991398051906020012084146104955760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420737761702072657175657374207479706568617368000000604482015260640161025b565b919790965090945092505050565b6000805460405161190160f01b6020820152602281019190915260428101869052819060620160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015610531573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b80356001600160a01b038116811461055d57600080fd5b919050565b600082601f83011261057357600080fd5b813567ffffffffffffffff8082111561058e5761058e610847565b604051601f8301601f19908116603f011681019082821181831017156105b6576105b6610847565b816040528381528660208588010111156105cf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561060757600080fd5b8535945061061760208701610546565b93506040860135925060608601359150608086013560ff8116811461063b57600080fd5b809150509295509295909350565b600080600080600080600060e0888a03121561066457600080fd5b87519650602088015195506040880151945060608801519350608088015161068b8161085d565b8093505060a0880151915060c0880151905092959891949750929550565b6000602082840312156106bb57600080fd5b813567ffffffffffffffff8111156106d257600080fd5b6106de84828501610562565b949350505050565b60008060008060008060c087890312156106ff57600080fd5b8635955061070f60208801610546565b94506040870135935060608701356107268161085d565b9250608087013567ffffffffffffffff8082111561074357600080fd5b61074f8a838b01610562565b935060a089013591508082111561076557600080fd5b5061077289828a01610562565b9150509295509295509295565b60008060008060008060c0878903121561079857600080fd5b86359550602087013567ffffffffffffffff808211156107b757600080fd5b6107c38a838b01610562565b965060408901359550606089013591506107dc8261085d565b9093506080880135908082111561074357600080fd5b600060208083528351808285015260005b8181101561081f57858101830151858201604001528201610803565b81811115610831576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461087357600080fd5b5056fe53776170526571756573742875696e743235362065787069726554732c627974657320696e546f6b656e2c75696e7432353620616d6f756e742c627974657334206f7574436861696e2c6279746573206f7574546f6b656e2c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonHelpersTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonHelpersTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonHelpersTest__factory extends ContractFactory {
  constructor(...args: MesonHelpersTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonHelpersTest> {
    return super.deploy(overrides || {}) as Promise<MesonHelpersTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonHelpersTest {
    return super.attach(address) as MesonHelpersTest;
  }
  connect(signer: Signer): MesonHelpersTest__factory {
    return super.connect(signer) as MesonHelpersTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonHelpersTestInterface {
    return new utils.Interface(_abi) as MesonHelpersTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonHelpersTest {
    return new Contract(address, _abi, signerOrProvider) as MesonHelpersTest;
  }
}
