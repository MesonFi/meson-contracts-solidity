/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonHelpersTest,
  MesonHelpersTestInterface,
} from "../MesonHelpersTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkReleaseSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "checkRequestSignature",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "decodeSwapInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expireTs",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
    ],
    name: "encodeSwap",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expireTs",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "outChain",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "outToken",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
    ],
    name: "getSwapId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526052608081815290610a2660a039805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d457600080fd5b50610942806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063375ef84c146100675780635f5a586c1461007c57806369d785d2146100af578063936e27d6146100cf57806394149c1a146100e25780639998f129146100f7575b600080fd5b61007a610075366004610645565b610118565b005b61008f61008a3660046106ff565b61012c565b604080519384526020840192909252908201526060015b60405180910390f35b6100c26100bd3660046107d5565b610147565b6040516100a69190610848565b61007a6100dd366004610645565b6101d5565b604051632000000f60e21b81526020016100a6565b61010a61010536600461073c565b61028b565b6040519081526020016100a6565b610125858585858561031d565b5050505050565b600080600061013a846104f6565b9250925092509193909250565b60606040518060a00160405280606981526020016108cd60699139805160209182012087518883012085518684012085518685012060408051958601949094529284018b90526060840191909152608083018890526001600160e01b0319871660a084015260c083015260e08201526101000160405160208183030381529060405290509695505050505050565b60408051600081526020810180835287905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610228573d6000803e3d6000fd5b505050602060405103516001600160a01b0316846001600160a01b0316146101255760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff19606087901b166020820152600090610312906102cf90899060340160405160208183030381529060405288888888610147565b80516020918201206000546040805161190160f01b8186015260228101929092526042808301939093528051808303909301835260629091019052805191012090565b979650505050505050565b6001600160a01b0384166103735760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610282565b604080518082018252601b81527f5377617052656c6561736528627974657333322073776170496429000000000060209182015290516000916103e3917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b604051602081830303815290604052805190602001209050600080548260405160200161042792919061190160f01b81526002810192909252602282015260420190565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa15801561048f573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b0316146104ed5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610282565b50505050505050565b600080600080600080600087806020019051810190610515919061069f565b50505093509350935093506040518060a00160405280606981526020016108cd6069913980519060200120841461058e5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207377617020726571756573742074797065686173680000006044820152606401610282565b919790965090945092505050565b80356001600160a01b03811681146105b357600080fd5b919050565b600082601f8301126105c957600080fd5b813567ffffffffffffffff808211156105e4576105e461089d565b604051601f8301601f19908116603f0116810190828211818310171561060c5761060c61089d565b8160405283815286602085880101111561062557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561065d57600080fd5b8535945061066d6020870161059c565b93506040860135925060608601359150608086013560ff8116811461069157600080fd5b809150509295509295909350565b600080600080600080600060e0888a0312156106ba57600080fd5b8751965060208801519550604088015194506060880151935060808801516106e1816108b3565b8093505060a0880151915060c0880151905092959891949750929550565b60006020828403121561071157600080fd5b813567ffffffffffffffff81111561072857600080fd5b610734848285016105b8565b949350505050565b60008060008060008060c0878903121561075557600080fd5b863595506107656020880161059c565b945060408701359350606087013561077c816108b3565b9250608087013567ffffffffffffffff8082111561079957600080fd5b6107a58a838b016105b8565b935060a08901359150808211156107bb57600080fd5b506107c889828a016105b8565b9150509295509295509295565b60008060008060008060c087890312156107ee57600080fd5b86359550602087013567ffffffffffffffff8082111561080d57600080fd5b6108198a838b016105b8565b96506040890135955060608901359150610832826108b3565b9093506080880135908082111561079957600080fd5b600060208083528351808285015260005b8181101561087557858101830151858201604001528201610859565b81811115610887576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146108c957600080fd5b5056fe53776170526571756573742875696e743235362065787069726554732c627974657320696e546f6b656e2c75696e7432353620616d6f756e742c627974657334206f7574436861696e2c6279746573206f7574546f6b656e2c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonHelpersTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonHelpersTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonHelpersTest__factory extends ContractFactory {
  constructor(...args: MesonHelpersTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonHelpersTest> {
    return super.deploy(overrides || {}) as Promise<MesonHelpersTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonHelpersTest {
    return super.attach(address) as MesonHelpersTest;
  }
  connect(signer: Signer): MesonHelpersTest__factory {
    return super.connect(signer) as MesonHelpersTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonHelpersTestInterface {
    return new utils.Interface(_abi) as MesonHelpersTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonHelpersTest {
    return new Contract(address, _abi, signerOrProvider) as MesonHelpersTest;
  }
}
