/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonPools, MesonPoolsInterface } from "../MesonPools";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061182b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100de5760003560e01c806393b0719d1161008c578063b3df5b3611610066578063b3df5b36146102b4578063d3705a921461030f578063f7888aec14610322578063ff3787191461035657600080fd5b806393b0719d1461026057806394149c1a146102735780639432984f146102a157600080fd5b80632335093c116100bd5780632335093c146101ef5780638befc1c11461023a5780639033ed081461024d57600080fd5b8062c2a48c146100e357806304fd4ab0146100f85780631aba3a55146101b2575b600080fd5b6100f66100f1366004611672565b61038f565b005b6101736101063660046115cb565b60009081526007602090815260408083205464ffffffffff60a082901c8116855260059093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83169373ffffffffffffffffffffffffffffffffffffffff9091169260c81c90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015264ffffffffff16908201526060015b60405180910390f35b6101d96101c0366004611554565b60046020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020016101a9565b6102286101fd366004611554565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60405160ff90911681526020016101a9565b6100f6610248366004611672565b6104e3565b6100f661025b3660046115e4565b610828565b6100f661026e366004611650565b61095f565b6040517f8000003c0000000000000000000000000000000000000000000000000000000081526020016101a9565b6100f66102af366004611626565b610b65565b6102ea6102c23660046116ca565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a9565b6100f661031d3660046115e4565b610cc0565b610335610330366004611576565b610fb9565b6040516fffffffffffffffffffffffffffffffff90911681526020016101a9565b6102ea6103643660046116f1565b60ff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061039b878761102a565b6000818152600760205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168061041f5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b61042e828489898989876110b2565b60ff600889901c1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1661046a818560808c901c61124f565b6000838152600760205260409081902080547fffff000000000000000000000000000000000000000000000000000000000000169055517fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f4906104d09085815260200190565b60405180910390a1505050505050505050565b60006104ef878761102a565b6000818152600760205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff161561056e5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610416565b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156105c1573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146106455760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610416565b3360009081526004602052604090205464ffffffffff16806106cf5760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610416565b600080806106df6104b04261177b565b6020878152600c86815260088e901c600790815260008051925191859052835165ffffffffffff8316825260069094526040908190205492901c965094509192509061073d906fffffffffffffffffffffffffffffffff16856113ce565b65ffffffffffff8416600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9590951694909417909355888252600781529082902080547fffff000000000000000000000000000000000000000000000000000000000000167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851617905590518781527f4b9652d234ab744ed655916a0c1ddd3e9d02be9a04f7aee8b0bf1e8dfce0173a910160405180910390a1505050505050505050505050565b6000826fffffffffffffffffffffffffffffffff161161088a5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610416565b65ffffffffffff81166000908152600660205260409020546108be906fffffffffffffffffffffffffffffffff168361140d565b65ffffffffffff8216600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9590951694909417909355602884901c60ff16825260019052205461095b9073ffffffffffffffffffffffffffffffffffffffff1633846fffffffffffffffffffffffffffffffff1661144c565b5050565b600061096b838361102a565b6000818152600760205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16806109ea5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610416565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1611610a7d5760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610416565b65ff0000000000602085811b9190911664ffffffffff60a084901c161760008181526006909252604090912054608086901c91600887901c91610ad2906fffffffffffffffffffffffffffffffff168461140d565b65ffffffffffff91909116600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff90951694909417909355958152600790955290932080547fffff0000000000000000000000000000000000000000000000000000000000001690555050505050565b3360008181526004602052604090205464ffffffffff1680610bef5760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610416565b65ff0000000000602884901b1664ffffffffff821617600081815260066020526040902054610c30906fffffffffffffffffffffffffffffffff16866113ce565b65ffffffffffff8216600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff95861617905560ff881683526001909152902054610cb99173ffffffffffffffffffffffffffffffffffffffff909116908590881661124f565b5050505050565b6000826fffffffffffffffffffffffffffffffff1611610d225760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610416565b338164ffffffffff8116610d785760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610416565b64ffffffffff811660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610df25760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610416565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205464ffffffffff1615610e6c5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610416565b64ffffffffff8116600081815260056020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526004825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff86168252600690522054610f26906fffffffffffffffffffffffffffffffff168561140d565b65ffffffffffff8416600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff958616179055602887901c60ff1683526001909152902054610fb39173ffffffffffffffffffffffffffffffffffffffff909116908490871661144c565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260209081526040808320549385168352600482528083205464ffffffffff1660289490941b65ff0000000000169390931782526006905220546fffffffffffffffffffffffffffffffff165b92915050565b604080518082018252601c81527f53776170526571756573742875696e7432353620656e636f646564290000000060209182015281517f9e30b23744f36fc02f504355e3ffa6d1fda34e5ac9e3c78a1d6e7dffbc9c57266000818152928690529282206022529091906019835360018053836002526042600020925080604052505092915050565b60006040518060600160405280602b81526020016117f4602b91398051602090910120905073ffffffffffffffffffffffffffffffffffffffff821661113a5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610416565b6000604051886000526014600c20604052826000528960205260606000206022526019600053600180536002889052604260009081209082526020820160408181529082905260ff8716908301526060820188905260808201879052915060019060a0016020604051602081039080840390855afa1580156111c0573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112445760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610416565b505050505050505050565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611316919061170c565b6000604051808303816000865af19150503d8060008114611353576040519150601f19603f3d011682016040523d82523d6000602084013e611358565b606091505b509150915081801561138257508051158061138257508080602001905181019061138291906115a9565b610cb95760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610416565b60006fffffffffffffffffffffffffffffffff83166113ed8385611793565b9150816fffffffffffffffffffffffffffffffff16111561102457600080fd5b60006fffffffffffffffffffffffffffffffff831661142c8385611747565b9150816fffffffffffffffffffffffffffffffff16101561102457600080fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b1580156114c257600080fd5b505af11580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb391906115a9565b803573ffffffffffffffffffffffffffffffffffffffff8116811461151e57600080fd5b919050565b80356fffffffffffffffffffffffffffffffff8116811461151e57600080fd5b803560ff8116811461151e57600080fd5b60006020828403121561156657600080fd5b61156f826114fa565b9392505050565b6000806040838503121561158957600080fd5b611592836114fa565b91506115a0602084016114fa565b90509250929050565b6000602082840312156115bb57600080fd5b8151801515811461156f57600080fd5b6000602082840312156115dd57600080fd5b5035919050565b600080604083850312156115f757600080fd5b61160083611523565b9150602083013565ffffffffffff8116811461161b57600080fd5b809150509250929050565b6000806040838503121561163957600080fd5b61164283611523565b91506115a060208401611543565b6000806040838503121561166357600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561168b57600080fd5b863595506020870135945060408701359350606087013592506116b060808801611543565b91506116be60a088016114fa565b90509295509295509295565b6000602082840312156116dc57600080fd5b813564ffffffffff8116811461156f57600080fd5b60006020828403121561170357600080fd5b61156f82611543565b6000825160005b8181101561172d5760208186018101518583015201611713565b8181111561173c576000828501525b509190910192915050565b60006fffffffffffffffffffffffffffffffff808316818516808303821115611772576117726117c4565b01949350505050565b6000821982111561178e5761178e6117c4565b500190565b60006fffffffffffffffffffffffffffffffff838116908316818110156117bc576117bc6117c4565b039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe5377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a";

type MesonPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPools__factory extends ContractFactory {
  constructor(...args: MesonPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPools> {
    return super.deploy(overrides || {}) as Promise<MesonPools>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPools {
    return super.attach(address) as MesonPools;
  }
  connect(signer: Signer): MesonPools__factory {
    return super.connect(signer) as MesonPools__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsInterface {
    return new utils.Interface(_abi) as MesonPoolsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPools {
    return new Contract(address, _abi, signerOrProvider) as MesonPools;
  }
}
