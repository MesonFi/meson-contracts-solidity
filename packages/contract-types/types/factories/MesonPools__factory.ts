/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonPools, MesonPoolsInterface } from "../MesonPools";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "poolTokenIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "poolTokenIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "poolOwner",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "ownerOfPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolOfAuthorizedAddr",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "poolTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "serviceFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "poolTokenIndex",
        type: "uint48",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612226806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063b002249d11610097578063d3e95ea411610066578063d3e95ea4146102d6578063eba7fb77146102e9578063f1d2ec1d14610316578063ff3787191461032957600080fd5b8063b002249d14610288578063be18e8a41461029d578063ce7f79b9146102b0578063ce924743146102c357600080fd5b80637fe0282b116100d35780637fe0282b146101a457806389a734c0146101e15780638b0a77651461023c5780638f487dc91461027557600080fd5b80632335093c146100fa57806337b90a4f1461014a57806360a2da981461015f575b600080fd5b610133610108366004611e84565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff90911681526020015b60405180910390f35b61015d610158366004611fcd565b610362565b005b61017261016d366004611efb565b61051f565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835264ffffffffff909116602083015201610141565b6101cb6101b2366004611e84565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff9091168152602001610141565b6102176101ef366004612008565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610141565b61026761024a36600461202f565b60281b65ff00000000001660009081526004602052604090205490565b604051908152602001610141565b61015d610283366004611fcd565b61057a565b610290610835565b6040516101419190612085565b61015d6102ab366004611f1e565b610982565b61015d6102be366004611fcd565b610c59565b61015d6102d1366004611f6e565b610e0b565b6102676102e4366004611ea6565b611056565b6040517e3c0000000000000000000000000000000000000000000000000000000000008152602001610141565b61015d610324366004611efb565b6110e6565b61021761033736600461202f565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600082116103b75760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064015b60405180910390fd5b8064ffffffffff811661040c5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420757365203020617320706f6f6c20696e64657800000000000060448201526064016103ae565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146104ad5760405162461bcd60e51b815260206004820152602160248201527f4e6565642074686520706f6f6c206f776e657220617320746865207369676e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016103ae565b65ffffffffffff8216600090815260046020526040812080548592906104d49084906120df565b909155505060ff602883901c811660008181526020819052604090205490916105199173ffffffffffffffffffffffffffffffffffffffff169033908790851461124a565b50505050565b600080600061052e858561145a565b60009081526005602090815260408083205464ffffffffff8082168552600390935292205473ffffffffffffffffffffffffffffffffffffffff169760289290921c1695509350505050565b600082116105ca5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064016103ae565b338164ffffffffff81166106205760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420757365203020617320706f6f6c20696e64657800000000000060448201526064016103ae565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff161561069a5760405162461bcd60e51b815260206004820152601d60248201527f506f6f6c20696e64657820616c7265616479207265676973746572656400000060448201526064016103ae565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205464ffffffffff161561073a5760405162461bcd60e51b815260206004820152602160248201527f5369676e6572206164647265737320616c72656164792072656769737465726560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016103ae565b64ffffffffff8116600081815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526002825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff861682526004905290812080548692906107e99084906120df565b909155505060ff602884901c8116600081815260208190526040902054909161082e9173ffffffffffffffffffffffffffffffffffffffff169085908890851461124a565b5050505050565b606060015b6101008160ff1610156108ed5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff166108db578060ff1660011415610884575090565b61088f600182612149565b60ff1667ffffffffffffffff8111156108aa576108aa6121ea565b6040519080825280602002602001820160405280156108d3578160200160208202803683370190505b5091506108ed565b806108e58161216c565b91505061083a565b60015b8160ff168160ff16101561097d5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1683610933600184612149565b60ff1681518110610946576109466121bb565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806109758161216c565b9150506108f0565b505090565b84603c61098f8260201c90565b61ffff16146109e05760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e00000000000000000060448201526064016103ae565b60006109ec878461145a565b60008181526005602052604090205490915069ffffffffffffffffffff1615610a575760405162461bcd60e51b815260206004820152601360248201527f5377617020616c7265616479206578697374730000000000000000000000000060448201526064016103ae565b610a6487878787876114bb565b3360009081526002602052604090205464ffffffffff1680610aee5760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e000000000000000000000000000000000060648201526084016103ae565b6000610afc610960426120df565b9050603089901c64ffffffffff168110610b7e5760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74206c6f636b20626563617573652065787069726554732069732060448201527f736f6f6e2e00000000000000000000000000000000000000000000000000000060648201526084016103ae565b64ffffffffff82811660108b901b65ff000000000016179060588b901c1660d08b901c610bab9190612132565b65ffffffffffff821660009081526004602052604081208054909190610bd2908490612132565b909155505060008481526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001664ffffffffff8716602887901b69ffffffffff00000000001617179055518b917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a250505050505050505050565b60008211610ca95760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064016103ae565b8064ffffffffff8116610cfe5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420757365203020617320706f6f6c20696e64657800000000000060448201526064016103ae565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff163314610d9f5760405162461bcd60e51b815260206004820152602160248201527f4e6565642074686520706f6f6c206f776e657220617320746865207369676e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016103ae565b65ffffffffffff821660009081526004602052604081208054859290610dc6908490612132565b909155505060ff602883901c811660008181526020819052604090205490916105199173ffffffffffffffffffffffffffffffffffffffff1690339087908514611836565b794000000000000000000000000000000000000000000000000000861615156000610e36888561145a565b60008181526005602052604090205490915069ffffffffffffffffffff1680610ea15760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064016103ae565b4260308a901c64ffffffffff1611610efb5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742072656c6561736520626563617573652065787069726564000060448201526064016103ae565b610f0989858a8a8a8a611985565b600082815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055610f478a60181c90565b9050600060588b901c64ffffffffff16610f618c60d01c90565b610f6b9190612132565b905084610fe3576000610f7d8c611e38565b9050610f898183612132565b91508060046000610faf8f600064ffffffffff1660109190911b65ff0000000000161790565b65ffffffffffff1665ffffffffffff1681526020019081526020016000206000828254610fdc91906120df565b9091555050505b60ff80831660008181526020819052604090205461101e9273ffffffffffffffffffffffffffffffffffffffff909116918991859114611836565b6040518b907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a25050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602090815260408083205493851683526002909152812054909160ff169064ffffffffff168015806110a8575060ff8216155b156110b8576000925050506110e0565b64ffffffffff1660289190911b65ff0000000000161760009081526004602052604090205490505b92915050565b60006110f2838361145a565b60008181526005602052604090205490915069ffffffffffffffffffff168061115d5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064016103ae565b42602882901c64ffffffffff16106111b75760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b000000000000000000000000000060448201526064016103ae565b64ffffffffff818116601086901b65ff0000000000161790605886901c1660d086901c6111e49190612132565b65ffffffffffff82166000908152600460205260408120805490919061120b9084906120df565b90915550505060009182525060056020526040902080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555050565b73ffffffffffffffffffffffffffffffffffffffff84166112ad5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420737570706f727465640000000000000000000000000060448201526064016103ae565b600082116112fd5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103ae565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152306044830152606480830186905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161139a919061204a565b6000604051808303816000865af19150503d80600081146113d7576040519150601f19603f3d011682016040523d82523d6000602084013e6113dc565b606091505b50915091508180156114065750805115806114065750808060200190518101906114069190611ed9565b6114525760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c65640000000000000000000000000060448201526064016103ae565b505050505050565b6000828260405160200161149d92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b60405160208183030381529060405280519060200120905092915050565b73ffffffffffffffffffffffffffffffffffffffff811661151e5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016103ae565b79080000000000000000000000000000000000000000000000000085161515600886901c61ffff1660c314156116e55760008161157b577f1954524f4e205369676e6564204d6573736167653a0a33320a0000000000000061159d565b7f1954524f4e205369676e6564204d6573736167653a0a33330a000000000000005b6040517fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009091166020820152603981018890526059015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8716918301919091526060820188905260808201879052915060019060a0016020604051602081039080840390855afa15801561165a573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116de5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b505061082e565b8015611726576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101879052600090605c016115d4565b6000868152602080822081527f7b521e60f64ab56ff03ddfb26df49be54b20672b7acfffc1adeb256b554ccb258083526040808420815194855292840180825283905260ff87169084015260608301889052608083018790529160019060a0016020604051602081039080840390855afa1580156117a8573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461182c5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b5050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152604480830186905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908816916118cd919061204a565b6000604051808303816000865af19150503d806000811461190a576040519150601f19603f3d011682016040523d82523d6000602084013e61190f565b606091505b50915091508180156119395750805115806119395750808060200190518101906119399190611ed9565b6114525760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103ae565b73ffffffffffffffffffffffffffffffffffffffff81166119e85760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016103ae565b79080000000000000000000000000000000000000000000000000086161515600887901c61ffff1660c31415611bda57600081611a45577f1954524f4e205369676e6564204d6573736167653a0a33320a00000000000000611a67565b7f1954524f4e205369676e6564204d6573736167653a0a35330a000000000000005b6040517fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009091166020820152603981018990527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606089901b166059820152606d01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8716918301919091526060820188905260808201879052915060019060a0016020604051602081039080840390855afa158015611b4f573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611bd35760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b5050611452565b60008115611ccc576040517f19457468657265756d205369676e6564204d6573736167653a0a33320000000090611c45908a908a9060200191825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020918201207fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090931690820152603c810191909152605c01604051602081830303815290604052805190602001209050611d61565b611cd68860201c90565b61ffff1660c31415611d27578660155260416020538760005260356000206020527ff6ea10de668a877958d46ed7d53eaf47124fda9bee9423390a28c203556a2e5560005260406000209050611d61565b5060148690526000878152603481206020527fd23291d9d999318ac3ed13f43ac8003d6fbd69a4b532aeec9ffad516010a208c8152604090205b60408051600081526020810180835283905260ff861691810191909152606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611db4573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461182c5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b60006110e06103e860d084901c6120f7565b803573ffffffffffffffffffffffffffffffffffffffff81168114611e6e57600080fd5b919050565b803560ff81168114611e6e57600080fd5b600060208284031215611e9657600080fd5b611e9f82611e4a565b9392505050565b60008060408385031215611eb957600080fd5b611ec283611e4a565b9150611ed060208401611e4a565b90509250929050565b600060208284031215611eeb57600080fd5b81518015158114611e9f57600080fd5b60008060408385031215611f0e57600080fd5b82359150611ed060208401611e4a565b600080600080600060a08688031215611f3657600080fd5b853594506020860135935060408601359250611f5460608701611e73565b9150611f6260808701611e4a565b90509295509295909350565b60008060008060008060c08789031215611f8757600080fd5b863595506020870135945060408701359350611fa560608801611e73565b9250611fb360808801611e4a565b9150611fc160a08801611e4a565b90509295509295509295565b60008060408385031215611fe057600080fd5b82359150602083013565ffffffffffff81168114611ffd57600080fd5b809150509250929050565b60006020828403121561201a57600080fd5b813564ffffffffff81168114611e9f57600080fd5b60006020828403121561204157600080fd5b611e9f82611e73565b6000825160005b8181101561206b5760208186018101518583015201612051565b8181111561207a576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156120d357835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016120a1565b50909695505050505050565b600082198211156120f2576120f261218c565b500190565b60008261212d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156121445761214461218c565b500390565b600060ff821660ff8416808210156121635761216361218c565b90039392505050565b600060ff821660ff8114156121835761218361218c565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000806000a";

type MesonPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPools__factory extends ContractFactory {
  constructor(...args: MesonPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPools> {
    return super.deploy(overrides || {}) as Promise<MesonPools>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPools {
    return super.attach(address) as MesonPools;
  }
  connect(signer: Signer): MesonPools__factory {
    return super.connect(signer) as MesonPools__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsInterface {
    return new utils.Interface(_abi) as MesonPoolsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPools {
    return new Contract(address, _abi, signerOrProvider) as MesonPools;
  }
}
