/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonPools, MesonPoolsInterface } from "../MesonPools";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "outToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentChain",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalDemandFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalSupplyFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052605260808181529061175460a039805160209182012060408051808201825260088152674d65736f6e20466960c01b90840152805180820182526001808252603160f81b918501919091528151938401929092527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606083015260808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d757600080fd5b5061166d806100e76000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806372cbf72e1161008c578063c685960111610066578063c685960114610263578063ec9b5b3a1461027a578063f3fef3a31461028d578063f7888aec146102a057600080fd5b806372cbf72e14610212578063a8f81b1a14610227578063c43a73dc1461025057600080fd5b80633408e470146100d457806347e7ef24146100e85780634e1389ed146100fd57806361565d251461011057806368c4ac26146101475780636bb39ae01461017a575b600080fd5b604051600181526020015b60405180910390f35b6100fb6100f636600461139b565b6102cb565b005b6100fb61010b366004611400565b61037e565b61013961011e36600461129d565b6001600160a01b031660009081526004602052604090205490565b6040519081526020016100df565b61016a61015536600461129d565b60016020526000908152604090205460ff1681565b60405190151581526020016100df565b6101cf6101883660046113e7565b6007602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949283169391929091169086565b604080516001600160a01b0397881681529587166020870152938616938501939093526060840191909152909216608082015260a081019190915260c0016100df565b604051632000000f60e21b81526020016100df565b61013961023536600461129d565b6001600160a01b031660009081526005602052604090205490565b6100fb61025e3660046114b5565b6105c0565b6100fb6102713660046112f2565b50505050505050565b6100fb6102883660046113e7565b6109c6565b6100fb61029b36600461139b565b610b86565b6101396102ae3660046112bf565b600660209081526000928352604080842090915290825290205481565b6001600160a01b038216600090815260016020526040902054829060ff1661030e5760405162461bcd60e51b815260040161030590611571565b60405180910390fd5b6001600160a01b03831660009081526006602090815260408083203380855292529091205461033d9084610bd7565b6001600160a01b0380861660009081526006602090815260408083209386168352929052205561036d8484610bf8565b610378848285610c3b565b50505050565b6000858152600760208181526040808420815160c08101835281546001600160a01b039081168252600183015481168286015260028301548116938201939093526003820154606082018190526004830154909316608082015260059091015460a08201529389905291905261042c5760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610305565b806060015185111561049d5760405162461bcd60e51b815260206004820152603460248201527f72656c6561736520616d6f756e742063616e6e6f742062652067726561746572604482015273081d1a185b881b1bd8dada5b99c8185b5bdd5b9d60621b6064820152608401610305565b6104ae868260000151868686610cc3565b604081015160208201516080830151606084015188101561052f576001600160a01b0380841660009081526006602090815260408083209386168352929052205460608501516105089190610503908b610e09565b610bd7565b6001600160a01b038085166000908152600660209081526040808320938716835292905220555b600089815260076020526040812080546001600160a01b0319908116825560018201805482169055600282018054821690556003820183905560048201805490911690556005015561058283828a610e24565b6040518981527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f49060200160405180910390a1505050505050505050565b6001600160a01b038516600090815260016020526040902054859060ff166105fa5760405162461bcd60e51b815260040161030590611571565b60008060006106088a610f61565b9250925092506000831161065e5760405162461bcd60e51b815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610305565b6040516bffffffffffffffffffffffff1960608b901b166020820152829060340160405160208183030381529060405280519060200120146106d95760405162461bcd60e51b81526020600482015260146024820152730e8ded6cadc40c8decae640dcdee840dac2e8c6d60631b6044820152606401610305565b6040516bffffffffffffffffffffffff1960608a901b1660208201528190603401604051602081830303815290604052805190602001201461075d5760405162461bcd60e51b815260206004820152601860248201527f726563697069656e7420646f6573206e6f74206d6174636800000000000000006044820152606401610305565b6001600160a01b0389166000908152600660209081526040808320338085529252909120548411156107c85760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610305565b8a5160208c01206107ea81600090815260076020526040902060030154151590565b156108375760405162461bcd60e51b815260206004820152601b60248201527f6c6f636b696e67207377617020616c72656164792065786973747300000000006044820152606401610305565b6001600160a01b03808c166000908152600660209081526040808320938616835292905220546108689086906115b4565b6001600160a01b03808d166000908152600660209081526040808320938716835292905281902091909155805160c081019091524290806108ab848d8d8d611007565b6001600160a01b03168152602001846001600160a01b031681526020018d6001600160a01b031681526020018781526020018c6001600160a01b031681526020016104b0836108fa919061159c565b9052600083815260076020908152604091829020835181546001600160a01b03199081166001600160a01b0392831617835585840151600184018054831691841691909117905585850151600284018054831691841691909117905560608601516003840155608086015160048401805490921690831617905560a0909401516005909101558151858152928616908301527faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de910160405180910390a150505050505050505050505050565b600081815260076020526040902060030154610a1a5760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610305565b600081815260076020908152604091829020825160c08101845281546001600160a01b0390811682526001830154811693820193909352600282015483169381019390935260038101546060840152600481015490911660808301526005015460a082018190524211610acf5760405162461bcd60e51b815260206004820152601960248201527f5468652073776170206973207374696c6c20696e206c6f636b000000000000006044820152606401610305565b60408082015160608301516020808501516001600160a01b03808516600090815260068452868120918316815292529390205491929091610b109083610bd7565b6001600160a01b039384166000908152600660209081526040808320949096168252928352848120919091559485526007905250822080546001600160a01b0319908116825560018201805482169055600282018054821690556003820184905560048201805490911690556005019190915550565b6001600160a01b038216600090815260016020526040902054829060ff16610bc05760405162461bcd60e51b815260040161030590611571565b33610bcb84846110aa565b61037881828686611121565b600082610be4838261159c565b9150811015610bf257600080fd5b92915050565b6001600160a01b038216600090815260046020526040902054610c1b9082610bd7565b6001600160a01b0390921660009081526004602052604090209190915550565b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b158015610c8b57600080fd5b505af1158015610c9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037891906113c5565b6001600160a01b038416610d195760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610305565b604080518082018252601b81527f5377617052656c656173652862797465733332207377617049642900000000006020918201529051600091610d89917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b604051602081830303815290604052805190602001209050610dad81858585611007565b6001600160a01b0316856001600160a01b031614610e015760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610305565b505050505050565b600082610e1683826115b4565b9150811115610bf257600080fd5b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b17905291516000928392871691610eb09190611536565b6000604051808303816000865af19150503d8060008114610eed576040519150601f19603f3d011682016040523d82523d6000602084013e610ef2565b606091505b5091509150818015610f1c575080511580610f1c575080806020019051810190610f1c91906113c5565b610f5a5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610305565b5050505050565b600080600080600080600087806020019051810190610f809190611449565b96509650509550505093506040518060a00160405280606981526020016115f860699139805190602001208414610ff95760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207377617020726571756573742074797065686173680000006044820152606401610305565b919790965090945092505050565b6000805460405161190160f01b6020820152602281019190915260428101869052819060620160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015611095573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b0382166000908152600460205260409020548111156110fe5760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610305565b6001600160a01b038216600090815260046020526040902054610c1b9082610e09565b6001600160a01b038083166000908152600660209081526040808320938716835292905220548111156111825760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610305565b6001600160a01b038083166000908152600660209081526040808320938716835292905220546111b29082610e09565b6001600160a01b03808416600090815260066020908152604080832093881683529290522055610378828583610e24565b80356001600160a01b03811681146111fa57600080fd5b919050565b600082601f83011261121057600080fd5b813567ffffffffffffffff8082111561122b5761122b6115e1565b604051601f8301601f19908116603f01168101908282118183101715611253576112536115e1565b8160405283815286602085880101111561126c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff811681146111fa57600080fd5b6000602082840312156112af57600080fd5b6112b8826111e3565b9392505050565b600080604083850312156112d257600080fd5b6112db836111e3565b91506112e9602084016111e3565b90509250929050565b600080600080600080600060e0888a03121561130d57600080fd5b611316886111e3565b9650602088013567ffffffffffffffff8082111561133357600080fd5b61133f8b838c016111ff565b975060408a0135965060608a013591508082111561135c57600080fd5b506113698a828b016111ff565b945050611378608089016111e3565b925061138660a089016111e3565b915060c0880135905092959891949750929550565b600080604083850312156113ae57600080fd5b6113b7836111e3565b946020939093013593505050565b6000602082840312156113d757600080fd5b815180151581146112b857600080fd5b6000602082840312156113f957600080fd5b5035919050565b600080600080600060a0868803121561141857600080fd5b8535945060208601359350604086013592506060860135915061143d6080870161128c565b90509295509295909350565b600080600080600080600060e0888a03121561146457600080fd5b87519650602088015195506040880151945060608801519350608088015163ffffffff60e01b8116811461149757600080fd5b8093505060a0880151915060c0880151905092959891949750929550565b60008060008060008060c087890312156114ce57600080fd5b863567ffffffffffffffff8111156114e557600080fd5b6114f189828a016111ff565b965050611500602088016111e3565b945061150e604088016111e3565b9350606087013592506080870135915061152a60a0880161128c565b90509295509295509295565b6000825160005b81811015611557576020818601810151858301520161153d565b81811115611566576000828501525b509190910192915050565b6020808252601190820152703ab739bab83837b93a32b2103a37b5b2b760791b604082015260600190565b600082198211156115af576115af6115cb565b500190565b6000828210156115c6576115c66115cb565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe53776170526571756573742875696e743235362065787069726554732c627974657320696e546f6b656e2c75696e7432353620616d6f756e742c627974657334206f7574436861696e2c6279746573206f7574546f6b656e2c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPools__factory extends ContractFactory {
  constructor(...args: MesonPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPools> {
    return super.deploy(overrides || {}) as Promise<MesonPools>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPools {
    return super.attach(address) as MesonPools;
  }
  connect(signer: Signer): MesonPools__factory {
    return super.connect(signer) as MesonPools__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsInterface {
    return new utils.Interface(_abi) as MesonPoolsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPools {
    return new Contract(address, _abi, signerOrProvider) as MesonPools;
  }
}
