/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonPools, MesonPoolsInterface } from "../MesonPools";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611905806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063b002249d11610097578063e76afb5411610066578063e76afb54146102a4578063eba7fb7714610359578063f7888aec14610386578063ff3787191461039957600080fd5b8063b002249d146101e8578063b3df5b36146101fd578063be18e8a414610258578063e16a567d1461026b57600080fd5b806337b90a4f116100d357806337b90a4f1461019c5780636198e339146101af5780638f487dc9146101c2578063903d4296146101d557600080fd5b80630b9b44af146100fa5780631aba3a551461010f5780632335093c14610151575b600080fd5b61010d610108366004611674565b6103d2565b005b61013661011d3660046115e4565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b61018a61015f3660046115e4565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff9091168152602001610148565b61010d6101aa3660046116c4565b61054b565b61010d6101bd36600461165b565b61060f565b61010d6101d03660046116c4565b6107a9565b61010d6101e33660046116ff565b610a3f565b6101f0610b49565b604051610148919061179f565b61023361020b366004611722565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610148565b61010d610266366004611674565b610c96565b610296610279366004611749565b60281b65ff00000000001660009081526004602052604090205490565b604051908152602001610148565b61031f6102b236600461165b565b60009081526005602090815260408083205464ffffffffff60a082901c8116855260039093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83169373ffffffffffffffffffffffffffffffffffffffff9091169260c81c90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015264ffffffffff1690820152606001610148565b6040517e3c0000000000000000000000000000000000000000000000000000000000008152602001610148565b610296610394366004611606565b610f2d565b6102336103a7366004611749565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000858152600560205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16806104535760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b1660208201526104aa9087906034016040516020818303038152906040528051906020012087878786610fbd565b600086815260056020908152604080832080547fffff00000000000000000000000000000000000000000000000000000000000016905560ff60188a901c1683529082905290205473ffffffffffffffffffffffffffffffffffffffff16610517818460a08a901c611131565b60405187907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a250505050505050565b6000821161059b5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f736974697665000000000000000000604482015260640161044a565b65ffffffffffff81166000908152600460205260409020546105bd9083611280565b65ffffffffffff8216600090815260046020908152604080832093909355602884901c60ff168252819052205461060b9073ffffffffffffffffffffffffffffffffffffffff1633846112de565b5050565b6000818152600560205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168061068b5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f7420657869737400000000000000000000000000604482015260640161044a565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff161161071e5760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b0000000000000000000000000000604482015260640161044a565b60a081811c64ffffffffff16601084901b65ff000000000016176000818152600460205260409020549091610756919085901c611280565b65ffffffffffff909116600090815260046020908152604080832093909355938152600590935290912080547fffff00000000000000000000000000000000000000000000000000000000000016905550565b600082116107f95760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f736974697665000000000000000000604482015260640161044a565b338164ffffffffff811661084f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e6465780000604482015260640161044a565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff16156108c95760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c726561647920726567697374657265640000000000000000604482015260640161044a565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205464ffffffffff16156109435760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c72656164792072656769737465726564000000000000604482015260640161044a565b64ffffffffff8116600081815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526002825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff861682526004905220546109eb9085611280565b65ffffffffffff841660009081526004602090815260408083209390935560ff602887901c1682528190522054610a399073ffffffffffffffffffffffffffffffffffffffff1683866112de565b50505050565b3360008181526002602052604090205464ffffffffff1680610ac95760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e645265676973746572000000000000000000000000000000000000606482015260840161044a565b65ff0000000000602884901b1664ffffffffff821617600081815260046020526040902054610af890866113dc565b65ffffffffffff821660009081526004602090815260408083209390935560ff871682528190522054610b429073ffffffffffffffffffffffffffffffffffffffff168487611131565b5050505050565b606060015b6101008160ff161015610c015760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16610bef578060ff1660011415610b98575090565b610ba3600182611828565b60ff1667ffffffffffffffff811115610bbe57610bbe6118c9565b604051908082528060200260200182016040528015610be7578160200160208202803683370190505b509150610c01565b80610bf98161184b565b915050610b4e565b60015b8160ff168160ff161015610c915760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1683610c47600184611828565b60ff1681518110610c5a57610c5a61189a565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610c898161184b565b915050610c04565b505090565b84602081901c61ffff16603c14610cef5760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e000000000000000000604482015260640161044a565b6000868152600560205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615610d6b5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c72656164792065786973747300000000000000000000000000604482015260640161044a565b610d78868686868661143a565b3360009081526002602052604090205464ffffffffff1680610e025760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e0000000000000000000000000000000000606482015260840161044a565b65ff0000000000601088901b1664ffffffffff821617600081815260046020526040902054610e359060a08a901c6113dc565b65ffffffffffff821660009081526004602052604090205573ffffffffffffffffffffffffffffffffffffffff841678ffffffffff000000000000000000000000000000000000000060a084901b1660c8610e926104b0426117f9565b60008c81526005602052604080822080547fffff000000000000000000000000000000000000000000000000000000000000167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94851690951b959095179590951790911691909117909155905189917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a25050505050505050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602090815260408083205493851683526002909152812054909160ff169064ffffffffff16801580610f7f575060ff8216155b15610f8f57600092505050610fb7565b64ffffffffff1660289190911b65ff0000000000161760009081526004602052604090205490505b92915050565b73ffffffffffffffffffffffffffffffffffffffff81166110205760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d70747920616464726573730000604482015260640161044a565b60008681526020868152604080832082527f5ef297f2881340f11ed62c7c08e0e0c235c333ad8f340d7285f529f16716968a8352808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa1580156110a4573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146111285760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161044a565b50505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916111c89190611764565b6000604051808303816000865af19150503d8060008114611205576040519150601f19603f3d011682016040523d82523d6000602084013e61120a565b606091505b50915091508180156112345750805115806112345750808060200190518101906112349190611639565b610b425760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161044a565b60008261128d83826117f9565b9150811015610fb75760405162461bcd60e51b815260206004820152600860248201527f6f766572666c6f77000000000000000000000000000000000000000000000000604482015260640161044a565b6000811161132e5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161044a565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b1580156113a457600080fd5b505af11580156113b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a399190611639565b6000826113e98382611811565b9150811115610fb75760405162461bcd60e51b815260206004820152600960248201527f756e646572666c6f770000000000000000000000000000000000000000000000604482015260640161044a565b73ffffffffffffffffffffffffffffffffffffffff811661149d5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d70747920616464726573730000604482015260640161044a565b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc82526040808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa15801561151e573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146115a25760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161044a565b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146115ce57600080fd5b919050565b803560ff811681146115ce57600080fd5b6000602082840312156115f657600080fd5b6115ff826115aa565b9392505050565b6000806040838503121561161957600080fd5b611622836115aa565b9150611630602084016115aa565b90509250929050565b60006020828403121561164b57600080fd5b815180151581146115ff57600080fd5b60006020828403121561166d57600080fd5b5035919050565b600080600080600060a0868803121561168c57600080fd5b8535945060208601359350604086013592506116aa606087016115d3565b91506116b8608087016115aa565b90509295509295909350565b600080604083850312156116d757600080fd5b82359150602083013565ffffffffffff811681146116f457600080fd5b809150509250929050565b6000806040838503121561171257600080fd5b82359150611630602084016115d3565b60006020828403121561173457600080fd5b813564ffffffffff811681146115ff57600080fd5b60006020828403121561175b57600080fd5b6115ff826115d3565b6000825160005b81811015611785576020818601810151858301520161176b565b81811115611794576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156117ed57835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016117bb565b50909695505050505050565b6000821982111561180c5761180c61186b565b500190565b6000828210156118235761182361186b565b500390565b600060ff821660ff8416808210156118425761184261186b565b90039392505050565b600060ff821660ff8114156118625761186261186b565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000806000a";

type MesonPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPools__factory extends ContractFactory {
  constructor(...args: MesonPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPools> {
    return super.deploy(overrides || {}) as Promise<MesonPools>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPools {
    return super.attach(address) as MesonPools;
  }
  connect(signer: Signer): MesonPools__factory {
    return super.connect(signer) as MesonPools__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsInterface {
    return new utils.Interface(_abi) as MesonPoolsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPools {
    return new Contract(address, _abi, signerOrProvider) as MesonPools;
  }
}
