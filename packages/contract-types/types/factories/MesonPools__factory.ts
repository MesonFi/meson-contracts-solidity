/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonPools, MesonPoolsInterface } from "../MesonPools";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b1d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c806394149c1a1161008c578063b3df5b3611610066578063b3df5b36146102d4578063d3705a921461032f578063f7888aec14610342578063ff3787191461037657600080fd5b806394149c1a1461027e5780639432984f146102ac578063b002249d146102bf57600080fd5b80632335093c116100c85780632335093c146101fa5780638befc1c1146102455780639033ed081461025857806393b0719d1461026b57600080fd5b8062c2a48c146100ee57806304fd4ab0146101035780631aba3a55146101bd575b600080fd5b6101016100fc366004611869565b6103af565b005b61017e6101113660046117c2565b60009081526007602090815260408083205464ffffffffff60a082901c8116855260059093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83169373ffffffffffffffffffffffffffffffffffffffff9091169260c81c90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015264ffffffffff16908201526060015b60405180910390f35b6101e46101cb36600461174b565b60046020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020016101b4565b61023361020836600461174b565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60405160ff90911681526020016101b4565b610101610253366004611869565b610503565b6101016102663660046117db565b610848565b610101610279366004611847565b61097f565b6040517f8000003c0000000000000000000000000000000000000000000000000000000081526020016101b4565b6101016102ba36600461181d565b610b85565b6102c7610ce0565b6040516101b4919061193e565b61030a6102e23660046118c1565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b4565b61010161033d3660046117db565b610e31565b61035561035036600461176d565b61112a565b6040516fffffffffffffffffffffffffffffffff90911681526020016101b4565b61030a6103843660046118e8565b60ff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006103bb878761119b565b6000818152600760205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168061043f5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b61044e82848989898987611223565b60ff600889901c1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1661048a818560808c901c6113c0565b6000838152600760205260409081902080547fffff000000000000000000000000000000000000000000000000000000000000169055517fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f4906104f09085815260200190565b60405180910390a1505050505050505050565b600061050f878761119b565b6000818152600760205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff161561058e5760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610436565b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156105e1573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146106655760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610436565b3360009081526004602052604090205464ffffffffff16806106ef5760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610436565b600080806106ff6104b0426119cc565b6020878152600c86815260088e901c600790815260008051925191859052835165ffffffffffff8316825260069094526040908190205492901c965094509192509061075d906fffffffffffffffffffffffffffffffff168561153f565b65ffffffffffff8416600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9590951694909417909355888252600781529082902080547fffff000000000000000000000000000000000000000000000000000000000000167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851617905590518781527f4b9652d234ab744ed655916a0c1ddd3e9d02be9a04f7aee8b0bf1e8dfce0173a910160405180910390a1505050505050505050505050565b6000826fffffffffffffffffffffffffffffffff16116108aa5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610436565b65ffffffffffff81166000908152600660205260409020546108de906fffffffffffffffffffffffffffffffff16836115c1565b65ffffffffffff8216600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9590951694909417909355602884901c60ff16825260019052205461097b9073ffffffffffffffffffffffffffffffffffffffff1633846fffffffffffffffffffffffffffffffff16611643565b5050565b600061098b838361119b565b6000818152600760205260409020549091507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1680610a0a5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610436565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1611610a9d5760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610436565b65ff0000000000602085811b9190911664ffffffffff60a084901c161760008181526006909252604090912054608086901c91600887901c91610af2906fffffffffffffffffffffffffffffffff16846115c1565b65ffffffffffff91909116600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff90951694909417909355958152600790955290932080547fffff0000000000000000000000000000000000000000000000000000000000001690555050505050565b3360008181526004602052604090205464ffffffffff1680610c0f5760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610436565b65ff0000000000602884901b1664ffffffffff821617600081815260066020526040902054610c50906fffffffffffffffffffffffffffffffff168661153f565b65ffffffffffff8216600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff95861617905560ff881683526001909152902054610cd99173ffffffffffffffffffffffffffffffffffffffff90911690859088166113c0565b5050505050565b606060015b6101008160ff161015610d985760ff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16610d86578060ff1660011415610d2f575090565b610d3a600182611a15565b60ff1667ffffffffffffffff811115610d5557610d55611ab6565b604051908082528060200260200182016040528015610d7e578160200160208202803683370190505b509150610d98565b80610d9081611a38565b915050610ce5565b60015b8160ff168160ff161015610e2c5760ff811660009081526001602081905260409091205473ffffffffffffffffffffffffffffffffffffffff16908490610de29084611a15565b60ff1681518110610df557610df5611a87565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610e2481611a38565b915050610d9b565b505090565b6000826fffffffffffffffffffffffffffffffff1611610e935760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610436565b338164ffffffffff8116610ee95760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610436565b64ffffffffff811660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610f635760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610436565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205464ffffffffff1615610fdd5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610436565b64ffffffffff8116600081815260056020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526004825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff86168252600690522054611097906fffffffffffffffffffffffffffffffff16856115c1565b65ffffffffffff8416600090815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff958616179055602887901c60ff16835260019091529020546111249173ffffffffffffffffffffffffffffffffffffffff9091169084908716611643565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260209081526040808320549385168352600482528083205464ffffffffff1660289490941b65ff0000000000169390931782526006905220546fffffffffffffffffffffffffffffffff165b92915050565b604080518082018252601c81527f53776170526571756573742875696e7432353620656e636f646564290000000060209182015281517f9e30b23744f36fc02f504355e3ffa6d1fda34e5ac9e3c78a1d6e7dffbc9c57266000818152928690529282206022529091906019835360018053836002526042600020925080604052505092915050565b60006040518060600160405280602b8152602001611ae6602b91398051602090910120905073ffffffffffffffffffffffffffffffffffffffff82166112ab5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610436565b6000604051886000526014600c20604052826000528960205260606000206022526019600053600180536002889052604260009081209082526020820160408181529082905260ff8716908301526060820188905260808201879052915060019060a0016020604051602081039080840390855afa158015611331573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146113b55760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610436565b505050505050505050565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916114879190611903565b6000604051808303816000865af19150503d80600081146114c4576040519150601f19603f3d011682016040523d82523d6000602084013e6114c9565b606091505b50915091508180156114f35750805115806114f35750808060200190518101906114f391906117a0565b610cd95760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610436565b60006fffffffffffffffffffffffffffffffff831661155e83856119e4565b9150816fffffffffffffffffffffffffffffffff1611156111955760405162461bcd60e51b815260206004820152600960248201527f756e646572666c6f7700000000000000000000000000000000000000000000006044820152606401610436565b60006fffffffffffffffffffffffffffffffff83166115e08385611998565b9150816fffffffffffffffffffffffffffffffff1610156111955760405162461bcd60e51b815260206004820152600860248201527f6f766572666c6f770000000000000000000000000000000000000000000000006044820152606401610436565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b1580156116b957600080fd5b505af11580156116cd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112491906117a0565b803573ffffffffffffffffffffffffffffffffffffffff8116811461171557600080fd5b919050565b80356fffffffffffffffffffffffffffffffff8116811461171557600080fd5b803560ff8116811461171557600080fd5b60006020828403121561175d57600080fd5b611766826116f1565b9392505050565b6000806040838503121561178057600080fd5b611789836116f1565b9150611797602084016116f1565b90509250929050565b6000602082840312156117b257600080fd5b8151801515811461176657600080fd5b6000602082840312156117d457600080fd5b5035919050565b600080604083850312156117ee57600080fd5b6117f78361171a565b9150602083013565ffffffffffff8116811461181257600080fd5b809150509250929050565b6000806040838503121561183057600080fd5b6118398361171a565b91506117976020840161173a565b6000806040838503121561185a57600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561188257600080fd5b863595506020870135945060408701359350606087013592506118a76080880161173a565b91506118b560a088016116f1565b90509295509295509295565b6000602082840312156118d357600080fd5b813564ffffffffff8116811461176657600080fd5b6000602082840312156118fa57600080fd5b6117668261173a565b6000825160005b81811015611924576020818601810151858301520161190a565b81811115611933576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561198c57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161195a565b50909695505050505050565b60006fffffffffffffffffffffffffffffffff8083168185168083038211156119c3576119c3611a58565b01949350505050565b600082198211156119df576119df611a58565b500190565b60006fffffffffffffffffffffffffffffffff83811690831681811015611a0d57611a0d611a58565b039392505050565b600060ff821660ff841680821015611a2f57611a2f611a58565b90039392505050565b600060ff821660ff811415611a4f57611a4f611a58565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfe5377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a";

type MesonPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPools__factory extends ContractFactory {
  constructor(...args: MesonPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPools> {
    return super.deploy(overrides || {}) as Promise<MesonPools>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPools {
    return super.attach(address) as MesonPools;
  }
  connect(signer: Signer): MesonPools__factory {
    return super.connect(signer) as MesonPools__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsInterface {
    return new utils.Interface(_abi) as MesonPoolsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPools {
    return new Contract(address, _abi, signerOrProvider) as MesonPools;
  }
}
