/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonPools, MesonPoolsInterface } from "../MesonPools";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a93806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638e93243b11610076578063b3fb65641161005b578063b3fb656414610192578063e52d0404146101a5578063f7888aec1461020057600080fd5b80638e93243b1461015157806394149c1a1461016457600080fd5b8063399f3ee5116100a7578063399f3ee514610118578063529eb49a1461012b578063873e03b21461013e57600080fd5b806308fab167146100c35780631aba3a55146100d8575b600080fd5b6100d66100d136600461168e565b610234565b005b6100fe6100e6366004611639565b60066020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b6100d6610126366004611774565b6103a7565b6100d6610139366004611851565b6105c1565b6100d661014c3660046117c0565b6109d9565b6100d661015f3660046118d2565b610b33565b6040517f8000003c00000000000000000000000000000000000000000000000000000000815260200161010f565b6100d66101a036600461168e565b610d58565b6101db6101b33660046118d2565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b61021361020e36600461165b565b610ebe565b6040516fffffffffffffffffffffffffffffffff909116815260200161010f565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054829060ff166102ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e00000000000000000000000000000060448201526064015b60405180910390fd5b3360008181526006602090815260408083205473ffffffffffffffffffffffffffffffffffffffff8816845260048352818420548085526005845282852063ffffffff90921680865291909352922054610336906fffffffffffffffffffffffffffffffff1686610f22565b600082815260056020908152604080832063ffffffff87168452909152902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9290921691909117905561039f868487610f61565b505050505050565b60006103b4848484611115565b60008181526008602090815260409182902082518084019093525463ffffffff811680845264010000000090910465ffffffffffff1691830191909152919250908061045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f7377617020646f6573206e6f742065786973740000000000000000000000000060448201526064016102c1565b816020015165ffffffffffff164265ffffffffffff16116104d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5468652073776170206973207374696c6c20696e206c6f636b0000000000000060448201526064016102c1565b6000806104e6888861118a565b600081815260056020908152604080832063ffffffff891684529091529020549193509150610527906fffffffffffffffffffffffffffffffff168361123c565b600091825260056020908152604080842063ffffffff96909616845294815284832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff939093169290921790915594815260089094525090912080547fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000016905550505050565b60006105ce888888611115565b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905290915060019060a0016020604051602081039080840390855afa158015610624573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146106c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016102c1565b6000806106cf8a8a61118a565b915091506000826fffffffffffffffffffffffffffffffff161161074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016102c1565b60008381526008602052604090205463ffffffff16156107cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f6c6f636b696e67207377617020616c726561647920657869737473000000000060448201526064016102c1565b336000908152600660209081526040808320548484526005835281842063ffffffff9091168085529252909120546fffffffffffffffffffffffffffffffff84811691161015610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f696e73756666696369656e742062616c616e636500000000000000000000000060448201526064016102c1565b600082815260056020908152604080832063ffffffff851684529091529020546108b49084906fffffffffffffffffffffffffffffffff16611998565b600083815260056020908152604080832063ffffffff86168085529083529281902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff95909516949094179093558251808401909352908252810161092f6104b042611977565b65ffffffffffff908116909152600086815260086020908152604091829020845181549590920151909316640100000000027fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000090941663ffffffff90911617929092179055517f4b9652d234ab744ed655916a0c1ddd3e9d02be9a04f7aee8b0bf1e8dfce0173a906109c49086815260200190565b60405180910390a15050505050505050505050565b60006109e6898989611115565b60008181526008602090815260409182902082518084018452905463ffffffff81168252640100000000900465ffffffffffff168183015291517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608a901b169181019190915291925090610a7b908390603401604051602081830303815290604052805190602001208a8a89898961127b565b600080610a888c8c61118a565b600081815260036020908152604080832054898452600890925290912080547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055919350915073ffffffffffffffffffffffffffffffffffffffff16610af1818a85610f61565b6040518581527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f49060200160405180910390a150505050505050505050505050565b3363ffffffff8216610ba1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616e6e6f742075736520696e6465782030000000000000000000000000000060448201526064016102c1565b63ffffffff821660009081526007602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e64657820616c72656164792072656769737465726564000000000000000060448201526064016102c1565b73ffffffffffffffffffffffffffffffffffffffff811660009081526006602052604090205463ffffffff1615610cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4164647265737320616c7265616479207265676973746572656400000000000060448201526064016102c1565b63ffffffff9091166000818152600760209081526040808320805473ffffffffffffffffffffffffffffffffffffffff9096167fffffffffffffffffffffffff000000000000000000000000000000000000000090961686179055938252600690529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054829060ff16610de9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e00000000000000000000000000000060448201526064016102c1565b3360008181526006602090815260408083205473ffffffffffffffffffffffffffffffffffffffff8816845260048352818420548085526005845282852063ffffffff90921680865291909352922054610e55906fffffffffffffffffffffffffffffffff168661123c565b600082815260056020908152604080832063ffffffff87168452909152902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9290921691909117905561039f8684876114c2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602090815260408083205460068352818420549084526005835281842063ffffffff90911684529091529020546fffffffffffffffffffffffffffffffff165b92915050565b60006fffffffffffffffffffffffffffffffff8316610f418385611998565b9150816fffffffffffffffffffffffffffffffff161115610f1c57600080fd5b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526fffffffffffffffffffffffffffffffff8516604480840191909152845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839287169161103c9190611908565b6000604051808303816000865af19150503d8060008114611079576040519150601f19603f3d011682016040523d82523d6000602084013e61107e565b606091505b50915091508180156110a85750805115806110a85750808060200190518101906110a891906116b8565b61110e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016102c1565b5050505050565b60008084846040516111289291906118f8565b6040519081900381207f1901000000000000000000000000000000000000000000000000000000000000602083015260228201859052604282018190529150606201604051602081830303815290604052805190602001209150509392505050565b60008080808061119c868801886116da565b965050505093505092506040518060a00160405280606381526020016119f96063913980519060200120831461122e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c69642073776170207265717565737420747970656861736800000060448201526064016102c1565b9093509150505b9250929050565b60006fffffffffffffffffffffffffffffffff831661125b8385611943565b9150816fffffffffffffffffffffffffffffffff161015610f1c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166112f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016102c1565b60006040518060600160405280602b8152602001611a5c602b913980516020918201206040805192830191909152810189905260608101889052608001604051602081830303815290604052805190602001209050600086826040516020016113939291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015611419573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146114b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016102c1565b505050505050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301523060248301526fffffffffffffffffffffffffffffffff831660448301528416906323b872dd90606401602060405180830381600087803b15801561154957600080fd5b505af115801561155d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158191906116b8565b50505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146115ab57600080fd5b919050565b60008083601f8401126115c257600080fd5b50813567ffffffffffffffff8111156115da57600080fd5b60208301915083602082850101111561123557600080fd5b80356fffffffffffffffffffffffffffffffff811681146115ab57600080fd5b803565ffffffffffff811681146115ab57600080fd5b803560ff811681146115ab57600080fd5b60006020828403121561164b57600080fd5b61165482611587565b9392505050565b6000806040838503121561166e57600080fd5b61167783611587565b915061168560208401611587565b90509250929050565b600080604083850312156116a157600080fd5b6116aa83611587565b9150611685602084016115f2565b6000602082840312156116ca57600080fd5b8151801515811461165457600080fd5b600080600080600080600060e0888a0312156116f557600080fd5b873596506020880135955061170c604089016115f2565b945061171a60608901611612565b935061172860808901611612565b925060a08801357fffffffff000000000000000000000000000000000000000000000000000000008116811461175d57600080fd5b8092505060c0880135905092959891949750929550565b60008060006040848603121561178957600080fd5b833567ffffffffffffffff8111156117a057600080fd5b6117ac868287016115b0565b909790965060209590950135949350505050565b60008060008060008060008060e0898b0312156117dc57600080fd5b883567ffffffffffffffff8111156117f357600080fd5b6117ff8b828c016115b0565b9099509750506020890135955061181860408a01611587565b945061182660608a01611587565b93506080890135925060a0890135915061184260c08a01611628565b90509295985092959890939650565b600080600080600080600060c0888a03121561186c57600080fd5b873567ffffffffffffffff81111561188357600080fd5b61188f8a828b016115b0565b909850965050602088013594506118a860408901611587565b935060608801359250608088013591506118c460a08901611628565b905092959891949750929550565b6000602082840312156118e457600080fd5b813563ffffffff8116811461165457600080fd5b8183823760009101908152919050565b6000825160005b81811015611929576020818601810151858301520161190f565b81811115611938576000828501525b509190910192915050565b60006fffffffffffffffffffffffffffffffff80831681851680830382111561196e5761196e6119c9565b01949350505050565b600065ffffffffffff80831681851680830382111561196e5761196e6119c9565b60006fffffffffffffffffffffffffffffffff838116908316818110156119c1576119c16119c9565b039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e295377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a";

type MesonPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPools__factory extends ContractFactory {
  constructor(...args: MesonPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPools> {
    return super.deploy(overrides || {}) as Promise<MesonPools>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPools {
    return super.attach(address) as MesonPools;
  }
  connect(signer: Signer): MesonPools__factory {
    return super.connect(signer) as MesonPools__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsInterface {
    return new utils.Interface(_abi) as MesonPoolsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPools {
    return new Contract(address, _abi, signerOrProvider) as MesonPools;
  }
}
