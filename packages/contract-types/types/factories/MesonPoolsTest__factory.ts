/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "outToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalDemandFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalSupplyFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405260526080818152906117de60a039805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152600360808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d557600080fd5b506116f9806100e56000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c685960111610071578063c685960114610211578063d23d1c7614610228578063ec9b5b3a1461023b578063f3fef3a31461024e578063f7888aec14610261578063f7d18c5a1461028c57600080fd5b806347e7ef24146100b95780634e1389ed146100ce57806361565d25146100e157806368c4ac261461011d5780636bb39ae014610150578063a8f81b1a146101e8575b600080fd5b6100cc6100c7366004611517565b61029f565b005b6100cc6100dc3660046115c2565b610352565b61010a6100ef366004611419565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b61014061012b366004611419565b60016020526000908152604090205460ff1681565b6040519015158152602001610114565b6101a561015e366004611563565b6007602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949283169391929091169086565b604080516001600160a01b0397881681529587166020870152938616938501939093526060840191909152909216608082015260a081019190915260c001610114565b61010a6101f6366004611419565b6001600160a01b031660009081526005602052604090205490565b6100cc61021f36600461146e565b50505050505050565b6100cc610236366004611419565b6105bb565b6100cc610249366004611563565b6105c7565b6100cc61025c366004611517565b61072e565b61010a61026f36600461143b565b600660209081526000928352604080842090915290825290205481565b6100cc61029a36600461157c565b61077f565b6001600160a01b038216600090815260016020526040902054829060ff166102e25760405162461bcd60e51b81526004016102d990611650565b60405180910390fd5b6001600160a01b03831660009081526006602090815260408083203380855292529091205461031190846109cc565b6001600160a01b0380861660009081526006602090815260408083209386168352929052205561034184846109ed565b61034c848285610a30565b50505050565b600085815260076020908152604091829020825160c08101845281546001600160a01b03908116825260018301548116938201939093526002820154831693810193909352600381015460608401819052600482015490921660808401526005015460a08301526104115760405162461bcd60e51b8152602060048201526024808201527f6e6f206c6f636b696e67207377617020666f756e6420666f7220746865207377604482015263185c125960e21b60648201526084016102d9565b806060015185106104815760405162461bcd60e51b815260206004820152603460248201527f72656c6561736520616d6f756e742063616e6e6f742062652067726561746572604482015273081d1a185b881b1bd8dada5b99c8185b5bdd5b9d60621b60648201526084016102d9565b610492868260000151868686610ab8565b60408101516020820151608083015160006104ad848a610b55565b90506104b9848a610b66565b6104c38482610c59565b6001600160a01b03808516600090815260066020908152604080832093871683529290522054606086015161050291906104fd9084610ccc565b6109cc565b6001600160a01b0380861660009081526006602090815260408083209388168352928152828220939093558c81526007909252812080546001600160a01b0319908116825560018201805482169055600282018054821690556003820183905560048201805490911690556005015561057c848383610ce7565b6040518a81527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f49060200160405180910390a150505050505050505050565b6105c481610e24565b50565b60008181526007602052604090206005810154600282015460019092015442926001600160a01b039081169116826106325760405162461bcd60e51b815260206004820152600e60248201526d1cddd85c081b9bdd08199bdd5b9960921b60448201526064016102d9565b8284116106775760405162461bcd60e51b8152602060048201526013602482015272151a19481cddd85c081a5cc81b1bd8dada5959606a1b60448201526064016102d9565b6001600160a01b0380831660009081526006602090815260408083209385168352928152828220548883526007909152919020600301546106b891906109cc565b6001600160a01b0392831660009081526006602090815260408083209490951682529283528381209190915594855260079052832080546001600160a01b031990811682556001820180548216905560028201805482169055600382018590556004820180549091169055600501929092555050565b6001600160a01b038216600090815260016020526040902054829060ff166107685760405162461bcd60e51b81526004016102d990611650565b336107738484610c59565b61034c81828686610ea1565b6001600160a01b038316600090815260016020526040902054839060ff166107b95760405162461bcd60e51b81526004016102d990611650565b33836108075760405162461bcd60e51b815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016102d9565b6001600160a01b0380861660009081526006602090815260408083209385168352929052205484106108725760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016102d9565b6001600160a01b038086166000908152600660209081526040808320938516835292905220546108a3908590611693565b6001600160a01b0380871660008181526006602090815260408083208786168085529083529281902095909555845160c08101865282815290810191909152928301526060820186905284166080820152429060a08101610906836104b061167b565b9052600088815260076020908152604091829020835181546001600160a01b03199081166001600160a01b0392831617835585840151600184018054831691841691909117905585850151600284018054831691841691909117905560608601516003840155608086015160048401805490921690831617905560a09094015160059091015581518a8152928516908301527faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de910160405180910390a150505050505050565b6000826109d9838261167b565b91508110156109e757600080fd5b92915050565b6001600160a01b038216600090815260046020526040902054610a1090826109cc565b6001600160a01b0390921660009081526004602052604090209190915550565b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b158015610a8057600080fd5b505af1158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190611541565b604080518082018252601b81527f5377617052656c656173652862797465733332207377617049642900000000006020918201529051600091610b28917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b604051602081830303815290604052805190602001209050610b4d8186868686610f63565b505050505050565b6000610b60836110a9565b50919050565b6040805142602082018190526bffffffffffffffffffffffff19606086901b16928201929092526054810183905260009060740160408051601f1981840301815282825280516020918201206060840183528084528382018781528484018781526001600160a01b038a166000818152600280875287822086835287528782208951815594516001860155925193909201929092559081526003909252919020909250610c1390836111b7565b6001600160a01b038516600090815260056020526040902054610c3690856109cc565b6001600160a01b0390951660009081526005602052604090209490945550505050565b6001600160a01b038216600090815260046020526040902054811115610cad5760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b60448201526064016102d9565b6001600160a01b038216600090815260046020526040902054610a1090825b600082610cd98382611693565b91508111156109e757600080fd5b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b17905291516000928392871691610d739190611615565b6000604051808303816000865af19150503d8060008114610db0576040519150601f19603f3d011682016040523d82523d6000602084013e610db5565b606091505b5091509150818015610ddf575080511580610ddf575080806020019051810190610ddf9190611541565b610e1d5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016102d9565b5050505050565b6001600160a01b0381166000818152600160208181526040808420805460ff19168417905580516080810182528481528083018581528183018681526060838101818152988852600380875294909720835181559151958201959095559351600285015594518051949594610e1d93928501929190910190611310565b6001600160a01b03808316600090815260066020908152604080832093871683529290522054811115610f025760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b60448201526064016102d9565b6001600160a01b03808316600090815260066020908152604080832093871683529290522054610f329082610ccc565b6001600160a01b0380841660009081526006602090815260408083209388168352929052205561034c828583610ce7565b6000805460405161190160f01b602082015260228101919091526042810187905260620160408051601f19818403018152919052805160209091012090506001600160a01b038516610ff75760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016102d9565b60408051600081526020810180835283905260ff841691810191909152606081018590526080810184905260019060a0016020604051602081039080840390855afa15801561104a573d6000803e3d6000fd5b505050602060405103516001600160a01b0316856001600160a01b031614610b4d5760405162461bcd60e51b8152602060048201526012602482015271696e76616c6964207369676e61747572657360701b60448201526064016102d9565b6001600160a01b03811660009081526003602052604081204291806110cd8361125f565b915091505b81801561111257506001600160a01b03851660009081526002602081815260408084208585529091529091200154849061111090620151809061167b565b105b15610e1d576001600160a01b03851660009081526005602090815260408083205460028352818420858552909252909120600101546111519190610ccc565b6001600160a01b038616600090815260056020526040902055611173836112a5565b50506001600160a01b038516600090815260026020818152604080842085855290915282208281556001810183905501556111ad8361125f565b90925090506110d2565b6001808301546111c69161167b565b8260010154106112085760405162461bcd60e51b815260206004820152600d60248201526c6c697374206f766572666c6f7760981b60448201526064016102d9565b815461121d5760018201546002830155611233565b600282015461122d90600161167b565b60028301555b60038201805460018181018355600092835260209092200182905582546112599161167b565b90915550565b805460009081901561129a5782600301836001015481548110611284576112846116c0565b9060005260206000200154905060019150915091565b506000905080915091565b805460009081906112bb57506000905080915091565b826003018360010154815481106112d4576112d46116c0565b90600052602060002001549050826001015460016112f2919061167b565b60018085019190915583546113079190611693565b90925550600191565b82805482825590600052602060002090810192821561134b579160200282015b8281111561134b578251825591602001919060010190611330565b5061135792915061135b565b5090565b5b80821115611357576000815560010161135c565b80356001600160a01b038116811461138757600080fd5b919050565b600082601f83011261139d57600080fd5b813567ffffffffffffffff808211156113b8576113b86116d6565b604051601f8301601f19908116603f011681019082821181831017156113e0576113e06116d6565b816040528381528660208588010111156113f957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561142b57600080fd5b61143482611370565b9392505050565b6000806040838503121561144e57600080fd5b61145783611370565b915061146560208401611370565b90509250929050565b600080600080600080600060e0888a03121561148957600080fd5b61149288611370565b9650602088013567ffffffffffffffff808211156114af57600080fd5b6114bb8b838c0161138c565b975060408a0135965060608a01359150808211156114d857600080fd5b506114e58a828b0161138c565b9450506114f460808901611370565b925061150260a08901611370565b915060c0880135905092959891949750929550565b6000806040838503121561152a57600080fd5b61153383611370565b946020939093013593505050565b60006020828403121561155357600080fd5b8151801515811461143457600080fd5b60006020828403121561157557600080fd5b5035919050565b6000806000806080858703121561159257600080fd5b843593506115a260208601611370565b9250604085013591506115b760608601611370565b905092959194509250565b600080600080600060a086880312156115da57600080fd5b85359450602086013593506040860135925060608601359150608086013560ff8116811461160757600080fd5b809150509295509295909350565b6000825160005b81811015611636576020818601810151858301520161161c565b81811115611645576000828501525b509190910192915050565b6020808252601190820152703ab739bab83837b93a32b2103a37b5b2b760791b604082015260600190565b6000821982111561168e5761168e6116aa565b500190565b6000828210156116a5576116a56116aa565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
