/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasLockingSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "until",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "metaAmount",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051806080016040528060528152602001620032f660529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000b795949392919062000117565b60405160208183030381529060405280519060200120600055348015620000dd57600080fd5b50620001bc565b620000ef8162000174565b82525050565b620001008162000188565b82525050565b6200011181620001b2565b82525050565b600060a0820190506200012e6000830188620000f5565b6200013d6020830187620000f5565b6200014c6040830186620000f5565b6200015b606083018562000106565b6200016a6080830184620000e4565b9695505050505050565b6000620001818262000192565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61312a80620001cc6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806394149c1a11610097578063d2ef739811610066578063d2ef739814610284578063e52d04041461028e578063ec9b5b3a146102be578063f7888aec146102da576100f5565b806394149c1a146101fe578063b3fb65641461021c578063c6aea8c714610238578063d23d1c7614610268576100f5565b80634f64b2be116100d35780634f64b2be146101625780636bb39ae014610192578063721c5aff146101c65780638e93243b146101e2576100f5565b806308fab167146100fa5780631aba3a55146101165780633785854114610146575b600080fd5b610114600480360381019061010f919061225a565b61030a565b005b610130600480360381019061012b91906121ed565b6103b5565b60405161013d9190612b52565b60405180910390f35b610160600480360381019061015b919061235b565b6103d8565b005b61017c600480360381019061017791906123fd565b61091f565b60405161018991906127b3565b60405180910390f35b6101ac60048036038101906101a791906122c7565b61095e565b6040516101bd9594939291906127ce565b60405180910390f35b6101e060048036038101906101db91906122f4565b610a24565b005b6101fc60048036038101906101f7919061242a565b610fe4565b005b61020661123f565b604051610213919061295c565b60405180910390f35b6102366004803603810190610231919061225a565b61124e565b005b610252600480360381019061024d91906122c7565b61144c565b60405161025f9190612881565b60405180910390f35b610282600480360381019061027d91906121ed565b61145e565b005b61028c61146a565b005b6102a860048036038101906102a3919061242a565b61146c565b6040516102b591906127b3565b60405180910390f35b6102d860048036038101906102d391906122c7565b61149f565b005b6102f460048036038101906102ef919061221a565b611920565b6040516103019190612b37565b60405180910390f35b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e906129f7565b60405180910390fd5b60006103a161195e565b90506103af81828686611966565b50505050565b60036020528060005260406000206000915054906101000a900463ffffffff1681565b6000600660008981526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016003820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905061058188611bca565b6105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b790612ad7565b60405180910390fd5b80606001516fffffffffffffffffffffffffffffffff16866fffffffffffffffffffffffffffffffff16111561062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062290612a57565b60405180910390fd5b6106648888604051602001610640919061274a565b60405160208183030381529060405280519060200120878460000151888888611c1a565b60008160400151905060008260200151905082606001516fffffffffffffffffffffffffffffffff16886fffffffffffffffffffffffffffffffff16101561080857610755600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1661075085606001518b611dcc565b611e13565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b600660008b8152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556003820160106101000a81549067ffffffffffffffff021916905550506108dc828a8a611e5a565b7fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f48a60405161090b919061289c565b60405180910390a150505050505050505050565b6002818154811061092f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a90046fffffffffffffffffffffffffffffffff16908060030160109054906101000a900467ffffffffffffffff16905085565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa8906129f7565b60405180910390fd5b6000836fffffffffffffffffffffffffffffffff1611610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd90612a97565b60405180910390fd5b610b0f85611bca565b15610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4690612af7565b60405180910390fd5b6000610b5961195e565b9050836fffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161015610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5190612a77565b60405180910390fd5b83600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff16610cfe9190612c23565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001856fffffffffffffffffffffffffffffffff1681526020016104b065ffffffffffff1642610e3d9190612be5565b67ffffffffffffffff168152506006600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060808201518160030160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de8682604051610fd49291906128b7565b60405180910390a1505050505050565b6000610fee61195e565b905060008263ffffffff1611611039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103090612a37565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110de90612a17565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161461117f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611176906129d7565b60405180910390fd5b80600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000638000003c60e01b905090565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d2906129f7565b60405180910390fd5b60006112e561195e565b9050611389600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1684611e13565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550611446848285611ff6565b50505050565b600061145782611bca565b9050919050565b6114678161209d565b50565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114a881611bca565b6114e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114de90612ad7565b60405180910390fd5b6000600660008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016003820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050806080015167ffffffffffffffff164267ffffffffffffffff16116116e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d8906129b7565b60405180910390fd5b60008160400151905060008260600151905060008360200151905061179e600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1683611e13565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060066000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556003820160106101000a81549067ffffffffffffffff021916905550505050505050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a90046fffffffffffffffffffffffffffffffff1681565b600033905090565b806fffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161015611a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5c90612b17565b60405180910390fd5b611b07600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1682611dcc565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550611bc4828583611e5a565b50505050565b6000806006600084815260200190815260200160002060030160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611c8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8190612977565b60405180910390fd5b60006040518060600160405280602b81526020016130f3602b9139805190602001208888604051602001611cc0939291906128e0565b60405160208183030381529060405280519060200120905060008682604051602001611ced92919061277c565b60405160208183030381529060405280519060200120905060018184878760405160008152602001604052604051611d289493929190612917565b6020604051602081039080840390855afa158015611d4a573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db890612997565b60405180910390fd5b505050505050505050565b6000826fffffffffffffffffffffffffffffffff168284611ded9190612c23565b9150816fffffffffffffffffffffffffffffffff161115611e0d57600080fd5b92915050565b6000826fffffffffffffffffffffffffffffffff168284611e349190612b9f565b9150816fffffffffffffffffffffffffffffffff161015611e5457600080fd5b92915050565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e7432353629000000000000008152508051906020012085856fffffffffffffffffffffffffffffffff16604051602401611ed6929190612858565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f409190612765565b6000604051808303816000865af19150503d8060008114611f7d576040519150601f19603f3d011682016040523d82523d6000602084013e611f82565b606091505b5091509150818015611fb05750600081511480611faf575080806020019051810190611fae919061229a565b5b5b611fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fe690612ab7565b60405180910390fd5b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846fffffffffffffffffffffffffffffffff166040518463ffffffff1660e01b815260040161204593929190612821565b602060405180830381600087803b15801561205f57600080fd5b505af1158015612073573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612097919061229a565b50505050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061216981613051565b92915050565b60008151905061217e81613068565b92915050565b6000813590506121938161307f565b92915050565b6000813590506121a881613096565b92915050565b6000813590506121bd816130ad565b92915050565b6000813590506121d2816130c4565b92915050565b6000813590506121e7816130db565b92915050565b60006020828403121561220357612202612db2565b5b60006122118482850161215a565b91505092915050565b6000806040838503121561223157612230612db2565b5b600061223f8582860161215a565b92505060206122508582860161215a565b9150509250929050565b6000806040838503121561227157612270612db2565b5b600061227f8582860161215a565b925050602061229085828601612199565b9150509250929050565b6000602082840312156122b0576122af612db2565b5b60006122be8482850161216f565b91505092915050565b6000602082840312156122dd576122dc612db2565b5b60006122eb84828501612184565b91505092915050565b6000806000806080858703121561230e5761230d612db2565b5b600061231c87828801612184565b945050602061232d8782880161215a565b935050604061233e87828801612199565b925050606061234f8782880161215a565b91505092959194509250565b600080600080600080600060e0888a03121561237a57612379612db2565b5b60006123888a828b01612184565b97505060206123998a828b0161215a565b96505060406123aa8a828b01612199565b95505060606123bb8a828b01612184565b94505060806123cc8a828b01612184565b93505060a06123dd8a828b01612184565b92505060c06123ee8a828b016121d8565b91505092959891949750929550565b60006020828403121561241357612412612db2565b5b6000612421848285016121ae565b91505092915050565b6000602082840312156124405761243f612db2565b5b600061244e848285016121c3565b91505092915050565b61246081612c57565b82525050565b61247761247282612c57565b612d55565b82525050565b61248681612c69565b82525050565b61249581612c75565b82525050565b6124ac6124a782612c75565b612d67565b82525050565b6124bb81612c7f565b82525050565b60006124cc82612b6d565b6124d68185612b78565b93506124e6818560208601612d22565b80840191505092915050565b60006124ff601e83612b83565b915061250a82612dc4565b602082019050919050565b6000612522601183612b83565b915061252d82612ded565b602082019050919050565b6000612545601983612b83565b915061255082612e16565b602082019050919050565b6000612568600283612b94565b915061257382612e3f565b600282019050919050565b600061258b601a83612b83565b915061259682612e68565b602082019050919050565b60006125ae601183612b83565b91506125b982612e91565b602082019050919050565b60006125d1601883612b83565b91506125dc82612eba565b602082019050919050565b60006125f4601283612b83565b91506125ff82612ee3565b602082019050919050565b6000612617603483612b83565b915061262282612f0c565b604082019050919050565b600061263a601483612b83565b915061264582612f5b565b602082019050919050565b600061265d602083612b83565b915061266882612f84565b602082019050919050565b6000612680600f83612b83565b915061268b82612fad565b602082019050919050565b60006126a3601383612b83565b91506126ae82612fd6565b602082019050919050565b60006126c6601b83612b83565b91506126d182612fff565b602082019050919050565b60006126e9600983612b83565b91506126f482613028565b602082019050919050565b61270881612cab565b82525050565b61271781612ce7565b82525050565b61272681612cf1565b82525050565b61273581612d01565b82525050565b61274481612d15565b82525050565b60006127568284612466565b60148201915081905092915050565b600061277182846124c1565b915081905092915050565b60006127878261255b565b9150612793828561249b565b6020820191506127a3828461249b565b6020820191508190509392505050565b60006020820190506127c86000830184612457565b92915050565b600060a0820190506127e36000830188612457565b6127f06020830187612457565b6127fd6040830186612457565b61280a60608301856126ff565b612817608083018461272c565b9695505050505050565b60006060820190506128366000830186612457565b6128436020830185612457565b612850604083018461270e565b949350505050565b600060408201905061286d6000830185612457565b61287a602083018461270e565b9392505050565b6000602082019050612896600083018461247d565b92915050565b60006020820190506128b1600083018461248c565b92915050565b60006040820190506128cc600083018561248c565b6128d96020830184612457565b9392505050565b60006060820190506128f5600083018661248c565b612902602083018561248c565b61290f604083018461248c565b949350505050565b600060808201905061292c600083018761248c565b612939602083018661273b565b612946604083018561248c565b612953606083018461248c565b95945050505050565b600060208201905061297160008301846124b2565b92915050565b60006020820190508181036000830152612990816124f2565b9050919050565b600060208201905081810360008301526129b081612515565b9050919050565b600060208201905081810360008301526129d081612538565b9050919050565b600060208201905081810360008301526129f08161257e565b9050919050565b60006020820190508181036000830152612a10816125a1565b9050919050565b60006020820190508181036000830152612a30816125c4565b9050919050565b60006020820190508181036000830152612a50816125e7565b9050919050565b60006020820190508181036000830152612a708161260a565b9050919050565b60006020820190508181036000830152612a908161262d565b9050919050565b60006020820190508181036000830152612ab081612650565b9050919050565b60006020820190508181036000830152612ad081612673565b9050919050565b60006020820190508181036000830152612af081612696565b9050919050565b60006020820190508181036000830152612b10816126b9565b9050919050565b60006020820190508181036000830152612b30816126dc565b9050919050565b6000602082019050612b4c60008301846126ff565b92915050565b6000602082019050612b67600083018461271d565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000612baa82612cab565b9150612bb583612cab565b9250826fffffffffffffffffffffffffffffffff03821115612bda57612bd9612d83565b5b828201905092915050565b6000612bf082612d01565b9150612bfb83612d01565b92508267ffffffffffffffff03821115612c1857612c17612d83565b5b828201905092915050565b6000612c2e82612cab565b9150612c3983612cab565b925082821015612c4c57612c4b612d83565b5b828203905092915050565b6000612c6282612cc7565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b60005b83811015612d40578082015181840152602081019050612d25565b83811115612d4f576000848401525b50505050565b6000612d6082612d71565b9050919050565b6000819050919050565b6000612d7c82612db7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b60008160601b9050919050565b7f7369676e65722063616e6e6f7420626520656d70747920616464726573730000600082015250565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f5468652073776170206973207374696c6c20696e206c6f636b00000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b7f756e737570706f7274656420746f6b656e000000000000000000000000000000600082015250565b7f496e64657820616c726561647920726567697374657265640000000000000000600082015250565b7f43616e6e6f742075736520696e64657820300000000000000000000000000000600082015250565b7f72656c6561736520616d6f756e742063616e6e6f74206265206772656174657260008201527f207468616e206c6f636b696e6720616d6f756e74000000000000000000000000602082015250565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f616d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b7f7472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f7377617020646f6573206e6f7420657869737400000000000000000000000000600082015250565b7f6c6f636b696e67207377617020616c7265616479206578697374730000000000600082015250565b7f6f766572647261776e0000000000000000000000000000000000000000000000600082015250565b61305a81612c57565b811461306557600080fd5b50565b61307181612c69565b811461307c57600080fd5b50565b61308881612c75565b811461309357600080fd5b50565b61309f81612cab565b81146130aa57600080fd5b50565b6130b681612ce7565b81146130c157600080fd5b50565b6130cd81612cf1565b81146130d857600080fd5b50565b6130e481612d15565b81146130ef57600080fd5b5056fe5377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
