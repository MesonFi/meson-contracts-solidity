/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "outToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentChain",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasLockingSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalDemandFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalSupplyFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052605260808181529061188160a039805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d457600080fd5b5061179d806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c43a73dc1161008c578063d23d1c7611610066578063d23d1c7614610299578063ec9b5b3a146102ac578063f3fef3a3146102bf578063f7888aec146102d257600080fd5b8063c43a73dc1461025c578063c68596011461026f578063c6aea8c71461028657600080fd5b806368c4ac26116100c857806368c4ac26146101535780636bb39ae01461018657806372cbf72e1461021e578063a8f81b1a1461023357600080fd5b806347e7ef24146100ef5780634e1389ed1461010457806361565d2514610117575b600080fd5b6101026100fd3660046114cb565b6102fd565b005b610102610112366004611530565b6103b0565b6101406101253660046113cd565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b6101766101613660046113cd565b60016020526000908152604090205460ff1681565b604051901515815260200161014a565b6101db610194366004611517565b6007602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949283169391929091169086565b604080516001600160a01b0397881681529587166020870152938616938501939093526060840191909152909216608082015260a081019190915260c00161014a565b604051632000000f60e21b815260200161014a565b6101406102413660046113cd565b6001600160a01b031660009081526005602052604090205490565b61010261026a3660046115e5565b6105f2565b61010261027d366004611422565b50505050505050565b610176610294366004611517565b6109f8565b6101026102a73660046113cd565b610a13565b6101026102ba366004611517565b610a1f565b6101026102cd3660046114cb565b610bdf565b6101406102e03660046113ef565b600660209081526000928352604080842090915290825290205481565b6001600160a01b038216600090815260016020526040902054829060ff166103405760405162461bcd60e51b8152600401610337906116a1565b60405180910390fd5b6001600160a01b03831660009081526006602090815260408083203380855292529091205461036f9084610c30565b6001600160a01b0380861660009081526006602090815260408083209386168352929052205561039f8484610c4b565b6103aa848285610c8e565b50505050565b6000858152600760208181526040808420815160c08101835281546001600160a01b039081168252600183015481168286015260028301548116938201939093526003820154606082018190526004830154909316608082015260059091015460a08201529389905291905261045e5760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610337565b80606001518511156104cf5760405162461bcd60e51b815260206004820152603460248201527f72656c6561736520616d6f756e742063616e6e6f742062652067726561746572604482015273081d1a185b881b1bd8dada5b99c8185b5bdd5b9d60621b6064820152608401610337565b6104e0868260000151868686610d16565b6040810151602082015160808301516060840151881015610561576001600160a01b03808416600090815260066020908152604080832093861683529290522054606085015161053a9190610535908b610e5c565b610c30565b6001600160a01b038085166000908152600660209081526040808320938716835292905220555b600089815260076020526040812080546001600160a01b031990811682556001820180548216905560028201805482169055600382018390556004820180549091169055600501556105b483828a610e77565b6040518981527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f49060200160405180910390a1505050505050505050565b6001600160a01b038516600090815260016020526040902054859060ff1661062c5760405162461bcd60e51b8152600401610337906116a1565b600080600061063a8a610fb4565b925092509250600083116106905760405162461bcd60e51b815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610337565b6040516bffffffffffffffffffffffff1960608b901b1660208201528290603401604051602081830303815290604052805190602001201461070b5760405162461bcd60e51b81526020600482015260146024820152730e8ded6cadc40c8decae640dcdee840dac2e8c6d60631b6044820152606401610337565b6040516bffffffffffffffffffffffff1960608a901b1660208201528190603401604051602081830303815290604052805190602001201461078f5760405162461bcd60e51b815260206004820152601860248201527f726563697069656e7420646f6573206e6f74206d6174636800000000000000006044820152606401610337565b6001600160a01b0389166000908152600660209081526040808320338085529252909120548411156107fa5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610337565b8a5160208c012061081c81600090815260076020526040902060030154151590565b156108695760405162461bcd60e51b815260206004820152601b60248201527f6c6f636b696e67207377617020616c72656164792065786973747300000000006044820152606401610337565b6001600160a01b03808c1660009081526006602090815260408083209386168352929052205461089a9086906116e4565b6001600160a01b03808d166000908152600660209081526040808320938716835292905281902091909155805160c081019091524290806108dd848d8d8d61105a565b6001600160a01b03168152602001846001600160a01b031681526020018d6001600160a01b031681526020018781526020018c6001600160a01b031681526020016104b08361092c91906116cc565b9052600083815260076020908152604091829020835181546001600160a01b03199081166001600160a01b0392831617835585840151600184018054831691841691909117905585850151600284018054831691841691909117905560608601516003840155608086015160048401805490921690831617905560a0909401516005909101558151858152928616908301527faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de910160405180910390a150505050505050505050505050565b60008181526007602052604081206003015415155b92915050565b610a1c816110fd565b50565b600081815260076020526040902060030154610a735760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610337565b600081815260076020908152604091829020825160c08101845281546001600160a01b0390811682526001830154811693820193909352600282015483169381019390935260038101546060840152600481015490911660808301526005015460a082018190524211610b285760405162461bcd60e51b815260206004820152601960248201527f5468652073776170206973207374696c6c20696e206c6f636b000000000000006044820152606401610337565b60408082015160608301516020808501516001600160a01b03808516600090815260068452868120918316815292529390205491929091610b699083610c30565b6001600160a01b039384166000908152600660209081526040808320949096168252928352848120919091559485526007905250822080546001600160a01b0319908116825560018201805482169055600282018054821690556003820184905560048201805490911690556005019190915550565b6001600160a01b038216600090815260016020526040902054829060ff16610c195760405162461bcd60e51b8152600401610337906116a1565b33610c24848461117a565b6103aa818286866111f1565b600082610c3d83826116cc565b9150811015610a0d57600080fd5b6001600160a01b038216600090815260046020526040902054610c6e9082610c30565b6001600160a01b0390921660009081526004602052604090209190915550565b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b158015610cde57600080fd5b505af1158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa91906114f5565b6001600160a01b038416610d6c5760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610337565b604080518082018252601b81527f5377617052656c656173652862797465733332207377617049642900000000006020918201529051600091610ddc917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b604051602081830303815290604052805190602001209050610e008185858561105a565b6001600160a01b0316856001600160a01b031614610e545760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610337565b505050505050565b600082610e6983826116e4565b9150811115610a0d57600080fd5b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b17905291516000928392871691610f039190611666565b6000604051808303816000865af19150503d8060008114610f40576040519150601f19603f3d011682016040523d82523d6000602084013e610f45565b606091505b5091509150818015610f6f575080511580610f6f575080806020019051810190610f6f91906114f5565b610fad5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610337565b5050505050565b600080600080600080600087806020019051810190610fd39190611579565b96509650509550505093506040518060a00160405280606981526020016117286069913980519060200120841461104c5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207377617020726571756573742074797065686173680000006044820152606401610337565b919790965090945092505050565b6000805460405161190160f01b6020820152602281019190915260428101869052819060620160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa1580156110e8573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b0381166000818152600160208181526040808420805460ff19168417905580516080810182528481528083018581528183018681526060838101818152988852600380875294909720835181559151958201959095559351600285015594518051949594610fad939285019291909101906112b3565b6001600160a01b0382166000908152600460205260409020548111156111ce5760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610337565b6001600160a01b038216600090815260046020526040902054610c6e9082610e5c565b6001600160a01b038083166000908152600660209081526040808320938716835292905220548111156112525760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610337565b6001600160a01b038083166000908152600660209081526040808320938716835292905220546112829082610e5c565b6001600160a01b038084166000908152600660209081526040808320938816835292905220556103aa828583610e77565b8280548282559060005260206000209081019282156112ee579160200282015b828111156112ee5782518255916020019190600101906112d3565b506112fa9291506112fe565b5090565b5b808211156112fa57600081556001016112ff565b80356001600160a01b038116811461132a57600080fd5b919050565b600082601f83011261134057600080fd5b813567ffffffffffffffff8082111561135b5761135b611711565b604051601f8301601f19908116603f0116810190828211818310171561138357611383611711565b8160405283815286602085880101111561139c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461132a57600080fd5b6000602082840312156113df57600080fd5b6113e882611313565b9392505050565b6000806040838503121561140257600080fd5b61140b83611313565b915061141960208401611313565b90509250929050565b600080600080600080600060e0888a03121561143d57600080fd5b61144688611313565b9650602088013567ffffffffffffffff8082111561146357600080fd5b61146f8b838c0161132f565b975060408a0135965060608a013591508082111561148c57600080fd5b506114998a828b0161132f565b9450506114a860808901611313565b92506114b660a08901611313565b915060c0880135905092959891949750929550565b600080604083850312156114de57600080fd5b6114e783611313565b946020939093013593505050565b60006020828403121561150757600080fd5b815180151581146113e857600080fd5b60006020828403121561152957600080fd5b5035919050565b600080600080600060a0868803121561154857600080fd5b8535945060208601359350604086013592506060860135915061156d608087016113bc565b90509295509295909350565b600080600080600080600060e0888a03121561159457600080fd5b87519650602088015195506040880151945060608801519350608088015163ffffffff60e01b811681146115c757600080fd5b8093505060a0880151915060c0880151905092959891949750929550565b60008060008060008060c087890312156115fe57600080fd5b863567ffffffffffffffff81111561161557600080fd5b61162189828a0161132f565b96505061163060208801611313565b945061163e60408801611313565b9350606087013592506080870135915061165a60a088016113bc565b90509295509295509295565b6000825160005b81811015611687576020818601810151858301520161166d565b81811115611696576000828501525b509190910192915050565b6020808252601190820152703ab739bab83837b93a32b2103a37b5b2b760791b604082015260600190565b600082198211156116df576116df6116fb565b500190565b6000828210156116f6576116f66116fb565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe53776170526571756573742875696e743235362065787069726554732c627974657320696e546f6b656e2c75696e7432353620616d6f756e742c627974657334206f7574436861696e2c6279746573206f7574546f6b656e2c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
