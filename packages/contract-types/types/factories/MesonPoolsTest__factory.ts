/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasLockingSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "until",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "metaAmount",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "domainHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051806080016040528060528152602001620032ee60529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000b795949392919062000117565b60405160208183030381529060405280519060200120600055348015620000dd57600080fd5b50620001bc565b620000ef8162000174565b82525050565b620001008162000188565b82525050565b6200011181620001b2565b82525050565b600060a0820190506200012e6000830188620000f5565b6200013d6020830187620000f5565b6200014c6040830186620000f5565b6200015b606083018562000106565b6200016a6080830184620000e4565b9695505050505050565b6000620001818262000192565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61312280620001cc6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806394149c1a11610097578063d2ef739811610066578063d2ef739814610284578063e52d04041461028e578063ec9b5b3a146102be578063f7888aec146102da576100f5565b806394149c1a146101fe578063b3fb65641461021c578063c6aea8c714610238578063d23d1c7614610268576100f5565b80634f64b2be116100d35780634f64b2be146101625780636bb39ae014610192578063721c5aff146101c65780638e93243b146101e2576100f5565b806308fab167146100fa5780631aba3a55146101165780633785854114610146575b600080fd5b610114600480360381019061010f9190612252565b61030a565b005b610130600480360381019061012b91906121e5565b6103b5565b60405161013d9190612b4a565b60405180910390f35b610160600480360381019061015b9190612353565b6103d8565b005b61017c600480360381019061017791906123f5565b61091f565b60405161018991906127ab565b60405180910390f35b6101ac60048036038101906101a791906122bf565b61095e565b6040516101bd9594939291906127c6565b60405180910390f35b6101e060048036038101906101db91906122ec565b610a24565b005b6101fc60048036038101906101f79190612422565b610fdc565b005b610206611237565b6040516102139190612954565b60405180910390f35b61023660048036038101906102319190612252565b611246565b005b610252600480360381019061024d91906122bf565b611444565b60405161025f9190612879565b60405180910390f35b610282600480360381019061027d91906121e5565b611456565b005b61028c611462565b005b6102a860048036038101906102a39190612422565b611464565b6040516102b591906127ab565b60405180910390f35b6102d860048036038101906102d391906122bf565b611497565b005b6102f460048036038101906102ef9190612212565b611918565b6040516103019190612b2f565b60405180910390f35b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e906129ef565b60405180910390fd5b60006103a1611956565b90506103af8182868661195e565b50505050565b60036020528060005260406000206000915054906101000a900463ffffffff1681565b6000600660008981526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016003820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905061058188611bc2565b6105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b790612acf565b60405180910390fd5b80606001516fffffffffffffffffffffffffffffffff16866fffffffffffffffffffffffffffffffff16111561062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062290612a4f565b60405180910390fd5b61066488886040516020016106409190612742565b60405160208183030381529060405280519060200120878460000151888888611c12565b60008160400151905060008260200151905082606001516fffffffffffffffffffffffffffffffff16886fffffffffffffffffffffffffffffffff16101561080857610755600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1661075085606001518b611dc4565b611e0b565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b600660008b8152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556003820160106101000a81549067ffffffffffffffff021916905550506108dc828a8a611e52565b7fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f48a60405161090b9190612894565b60405180910390a150505050505050505050565b6002818154811061092f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a90046fffffffffffffffffffffffffffffffff16908060030160109054906101000a900467ffffffffffffffff16905085565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa8906129ef565b60405180910390fd5b6000836fffffffffffffffffffffffffffffffff1611610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd90612a8f565b60405180910390fd5b610b0f85611bc2565b15610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4690612aef565b60405180910390fd5b6000610b59611956565b9050836fffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161015610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5190612a6f565b60405180910390fd5b83600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff16610cfe9190612c1b565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001856fffffffffffffffffffffffffffffffff1681526020016104b042610e359190612bdd565b67ffffffffffffffff168152506006600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060808201518160030160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de8682604051610fcc9291906128af565b60405180910390a1505050505050565b6000610fe6611956565b905060008263ffffffff1611611031576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102890612a2f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d690612a0f565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1614611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e906129cf565b60405180910390fd5b80600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000638000003c60e01b905090565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ca906129ef565b60405180910390fd5b60006112dd611956565b9050611381600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1684611e0b565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061143e848285611fee565b50505050565b600061144f82611bc2565b9050919050565b61145f81612095565b50565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114a081611bc2565b6114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d690612acf565b60405180910390fd5b6000600660008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016003820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050806080015167ffffffffffffffff164267ffffffffffffffff16116116d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d0906129af565b60405180910390fd5b600081604001519050600082606001519050600083602001519050611796600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1683611e0b565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060066000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556003820160106101000a81549067ffffffffffffffff021916905550505050505050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a90046fffffffffffffffffffffffffffffffff1681565b600033905090565b806fffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161015611a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5490612b0f565b60405180910390fd5b611aff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1682611dc4565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550611bbc828583611e52565b50505050565b6000806006600084815260200190815260200160002060030160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c799061296f565b60405180910390fd5b60006040518060600160405280602b81526020016130eb602b9139805190602001208888604051602001611cb8939291906128d8565b60405160208183030381529060405280519060200120905060008682604051602001611ce5929190612774565b60405160208183030381529060405280519060200120905060018184878760405160008152602001604052604051611d20949392919061290f565b6020604051602081039080840390855afa158015611d42573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db09061298f565b60405180910390fd5b505050505050505050565b6000826fffffffffffffffffffffffffffffffff168284611de59190612c1b565b9150816fffffffffffffffffffffffffffffffff161115611e0557600080fd5b92915050565b6000826fffffffffffffffffffffffffffffffff168284611e2c9190612b97565b9150816fffffffffffffffffffffffffffffffff161015611e4c57600080fd5b92915050565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e7432353629000000000000008152508051906020012085856fffffffffffffffffffffffffffffffff16604051602401611ece929190612850565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f38919061275d565b6000604051808303816000865af19150503d8060008114611f75576040519150601f19603f3d011682016040523d82523d6000602084013e611f7a565b606091505b5091509150818015611fa85750600081511480611fa7575080806020019051810190611fa69190612292565b5b5b611fe7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fde90612aaf565b60405180910390fd5b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846fffffffffffffffffffffffffffffffff166040518463ffffffff1660e01b815260040161203d93929190612819565b602060405180830381600087803b15801561205757600080fd5b505af115801561206b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208f9190612292565b50505050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061216181613049565b92915050565b60008151905061217681613060565b92915050565b60008135905061218b81613077565b92915050565b6000813590506121a08161308e565b92915050565b6000813590506121b5816130a5565b92915050565b6000813590506121ca816130bc565b92915050565b6000813590506121df816130d3565b92915050565b6000602082840312156121fb576121fa612daa565b5b600061220984828501612152565b91505092915050565b6000806040838503121561222957612228612daa565b5b600061223785828601612152565b925050602061224885828601612152565b9150509250929050565b6000806040838503121561226957612268612daa565b5b600061227785828601612152565b925050602061228885828601612191565b9150509250929050565b6000602082840312156122a8576122a7612daa565b5b60006122b684828501612167565b91505092915050565b6000602082840312156122d5576122d4612daa565b5b60006122e38482850161217c565b91505092915050565b6000806000806080858703121561230657612305612daa565b5b60006123148782880161217c565b945050602061232587828801612152565b935050604061233687828801612191565b925050606061234787828801612152565b91505092959194509250565b600080600080600080600060e0888a03121561237257612371612daa565b5b60006123808a828b0161217c565b97505060206123918a828b01612152565b96505060406123a28a828b01612191565b95505060606123b38a828b0161217c565b94505060806123c48a828b0161217c565b93505060a06123d58a828b0161217c565b92505060c06123e68a828b016121d0565b91505092959891949750929550565b60006020828403121561240b5761240a612daa565b5b6000612419848285016121a6565b91505092915050565b60006020828403121561243857612437612daa565b5b6000612446848285016121bb565b91505092915050565b61245881612c4f565b82525050565b61246f61246a82612c4f565b612d4d565b82525050565b61247e81612c61565b82525050565b61248d81612c6d565b82525050565b6124a461249f82612c6d565b612d5f565b82525050565b6124b381612c77565b82525050565b60006124c482612b65565b6124ce8185612b70565b93506124de818560208601612d1a565b80840191505092915050565b60006124f7601e83612b7b565b915061250282612dbc565b602082019050919050565b600061251a601183612b7b565b915061252582612de5565b602082019050919050565b600061253d601983612b7b565b915061254882612e0e565b602082019050919050565b6000612560600283612b8c565b915061256b82612e37565b600282019050919050565b6000612583601a83612b7b565b915061258e82612e60565b602082019050919050565b60006125a6601183612b7b565b91506125b182612e89565b602082019050919050565b60006125c9601883612b7b565b91506125d482612eb2565b602082019050919050565b60006125ec601283612b7b565b91506125f782612edb565b602082019050919050565b600061260f603483612b7b565b915061261a82612f04565b604082019050919050565b6000612632601483612b7b565b915061263d82612f53565b602082019050919050565b6000612655602083612b7b565b915061266082612f7c565b602082019050919050565b6000612678600f83612b7b565b915061268382612fa5565b602082019050919050565b600061269b601383612b7b565b91506126a682612fce565b602082019050919050565b60006126be601b83612b7b565b91506126c982612ff7565b602082019050919050565b60006126e1600983612b7b565b91506126ec82613020565b602082019050919050565b61270081612ca3565b82525050565b61270f81612cdf565b82525050565b61271e81612ce9565b82525050565b61272d81612cf9565b82525050565b61273c81612d0d565b82525050565b600061274e828461245e565b60148201915081905092915050565b600061276982846124b9565b915081905092915050565b600061277f82612553565b915061278b8285612493565b60208201915061279b8284612493565b6020820191508190509392505050565b60006020820190506127c0600083018461244f565b92915050565b600060a0820190506127db600083018861244f565b6127e8602083018761244f565b6127f5604083018661244f565b61280260608301856126f7565b61280f6080830184612724565b9695505050505050565b600060608201905061282e600083018661244f565b61283b602083018561244f565b6128486040830184612706565b949350505050565b6000604082019050612865600083018561244f565b6128726020830184612706565b9392505050565b600060208201905061288e6000830184612475565b92915050565b60006020820190506128a96000830184612484565b92915050565b60006040820190506128c46000830185612484565b6128d1602083018461244f565b9392505050565b60006060820190506128ed6000830186612484565b6128fa6020830185612484565b6129076040830184612484565b949350505050565b60006080820190506129246000830187612484565b6129316020830186612733565b61293e6040830185612484565b61294b6060830184612484565b95945050505050565b600060208201905061296960008301846124aa565b92915050565b60006020820190508181036000830152612988816124ea565b9050919050565b600060208201905081810360008301526129a88161250d565b9050919050565b600060208201905081810360008301526129c881612530565b9050919050565b600060208201905081810360008301526129e881612576565b9050919050565b60006020820190508181036000830152612a0881612599565b9050919050565b60006020820190508181036000830152612a28816125bc565b9050919050565b60006020820190508181036000830152612a48816125df565b9050919050565b60006020820190508181036000830152612a6881612602565b9050919050565b60006020820190508181036000830152612a8881612625565b9050919050565b60006020820190508181036000830152612aa881612648565b9050919050565b60006020820190508181036000830152612ac88161266b565b9050919050565b60006020820190508181036000830152612ae88161268e565b9050919050565b60006020820190508181036000830152612b08816126b1565b9050919050565b60006020820190508181036000830152612b28816126d4565b9050919050565b6000602082019050612b4460008301846126f7565b92915050565b6000602082019050612b5f6000830184612715565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000612ba282612ca3565b9150612bad83612ca3565b9250826fffffffffffffffffffffffffffffffff03821115612bd257612bd1612d7b565b5b828201905092915050565b6000612be882612cf9565b9150612bf383612cf9565b92508267ffffffffffffffff03821115612c1057612c0f612d7b565b5b828201905092915050565b6000612c2682612ca3565b9150612c3183612ca3565b925082821015612c4457612c43612d7b565b5b828203905092915050565b6000612c5a82612cbf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b60005b83811015612d38578082015181840152602081019050612d1d565b83811115612d47576000848401525b50505050565b6000612d5882612d69565b9050919050565b6000819050919050565b6000612d7482612daf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b60008160601b9050919050565b7f7369676e65722063616e6e6f7420626520656d70747920616464726573730000600082015250565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f5468652073776170206973207374696c6c20696e206c6f636b00000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b7f756e737570706f7274656420746f6b656e000000000000000000000000000000600082015250565b7f496e64657820616c726561647920726567697374657265640000000000000000600082015250565b7f43616e6e6f742075736520696e64657820300000000000000000000000000000600082015250565b7f72656c6561736520616d6f756e742063616e6e6f74206265206772656174657260008201527f207468616e206c6f636b696e6720616d6f756e74000000000000000000000000602082015250565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f616d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b7f7472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f7377617020646f6573206e6f7420657869737400000000000000000000000000600082015250565b7f6c6f636b696e67207377617020616c7265616479206578697374730000000000600082015250565b7f6f766572647261776e0000000000000000000000000000000000000000000000600082015250565b61305281612c4f565b811461305d57600080fd5b50565b61306981612c61565b811461307457600080fd5b50565b61308081612c6d565b811461308b57600080fd5b50565b61309781612ca3565b81146130a257600080fd5b50565b6130ae81612cdf565b81146130b957600080fd5b50565b6130c581612ce9565b81146130d057600080fd5b50565b6130dc81612d0d565b81146130e757600080fd5b5056fe5377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
