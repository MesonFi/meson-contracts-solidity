/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "outToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentChain",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasLockingSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalDemandFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalSupplyFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052605260808181529061189e60a039805160209182012060408051808201825260088152674d65736f6e20466960c01b90840152805180820182526001808252603160f81b918501919091528151938401929092527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606083015260808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d757600080fd5b506117b7806100e76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a8f81b1a11610097578063d23d1c7611610066578063d23d1c76146102b3578063ec9b5b3a146102c6578063f3fef3a3146102d9578063f7888aec146102ec57600080fd5b8063a8f81b1a1461024d578063c43a73dc14610276578063c685960114610289578063c6aea8c7146102a057600080fd5b806361565d25116100d357806361565d251461013657806368c4ac261461016d5780636bb39ae0146101a057806372cbf72e1461023857600080fd5b80633408e470146100fa57806347e7ef241461010e5780634e1389ed14610123575b600080fd5b604051600181526020015b60405180910390f35b61012161011c3660046114e5565b610317565b005b61012161013136600461154a565b6103ca565b61015f6101443660046113e7565b6001600160a01b031660009081526004602052604090205490565b604051908152602001610105565b61019061017b3660046113e7565b60016020526000908152604090205460ff1681565b6040519015158152602001610105565b6101f56101ae366004611531565b6007602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949283169391929091169086565b604080516001600160a01b0397881681529587166020870152938616938501939093526060840191909152909216608082015260a081019190915260c001610105565b604051632000000f60e21b8152602001610105565b61015f61025b3660046113e7565b6001600160a01b031660009081526005602052604090205490565b6101216102843660046115ff565b61060c565b61012161029736600461143c565b50505050505050565b6101906102ae366004611531565b610a12565b6101216102c13660046113e7565b610a2d565b6101216102d4366004611531565b610a39565b6101216102e73660046114e5565b610bf9565b61015f6102fa366004611409565b600660209081526000928352604080842090915290825290205481565b6001600160a01b038216600090815260016020526040902054829060ff1661035a5760405162461bcd60e51b8152600401610351906116bb565b60405180910390fd5b6001600160a01b0383166000908152600660209081526040808320338085529252909120546103899084610c4a565b6001600160a01b038086166000908152600660209081526040808320938616835292905220556103b98484610c65565b6103c4848285610ca8565b50505050565b6000858152600760208181526040808420815160c08101835281546001600160a01b039081168252600183015481168286015260028301548116938201939093526003820154606082018190526004830154909316608082015260059091015460a0820152938990529190526104785760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610351565b80606001518511156104e95760405162461bcd60e51b815260206004820152603460248201527f72656c6561736520616d6f756e742063616e6e6f742062652067726561746572604482015273081d1a185b881b1bd8dada5b99c8185b5bdd5b9d60621b6064820152608401610351565b6104fa868260000151868686610d30565b604081015160208201516080830151606084015188101561057b576001600160a01b038084166000908152600660209081526040808320938616835292905220546060850151610554919061054f908b610e76565b610c4a565b6001600160a01b038085166000908152600660209081526040808320938716835292905220555b600089815260076020526040812080546001600160a01b031990811682556001820180548216905560028201805482169055600382018390556004820180549091169055600501556105ce83828a610e91565b6040518981527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f49060200160405180910390a1505050505050505050565b6001600160a01b038516600090815260016020526040902054859060ff166106465760405162461bcd60e51b8152600401610351906116bb565b60008060006106548a610fce565b925092509250600083116106aa5760405162461bcd60e51b815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610351565b6040516bffffffffffffffffffffffff1960608b901b166020820152829060340160405160208183030381529060405280519060200120146107255760405162461bcd60e51b81526020600482015260146024820152730e8ded6cadc40c8decae640dcdee840dac2e8c6d60631b6044820152606401610351565b6040516bffffffffffffffffffffffff1960608a901b166020820152819060340160405160208183030381529060405280519060200120146107a95760405162461bcd60e51b815260206004820152601860248201527f726563697069656e7420646f6573206e6f74206d6174636800000000000000006044820152606401610351565b6001600160a01b0389166000908152600660209081526040808320338085529252909120548411156108145760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610351565b8a5160208c012061083681600090815260076020526040902060030154151590565b156108835760405162461bcd60e51b815260206004820152601b60248201527f6c6f636b696e67207377617020616c72656164792065786973747300000000006044820152606401610351565b6001600160a01b03808c166000908152600660209081526040808320938616835292905220546108b49086906116fe565b6001600160a01b03808d166000908152600660209081526040808320938716835292905281902091909155805160c081019091524290806108f7848d8d8d611074565b6001600160a01b03168152602001846001600160a01b031681526020018d6001600160a01b031681526020018781526020018c6001600160a01b031681526020016104b08361094691906116e6565b9052600083815260076020908152604091829020835181546001600160a01b03199081166001600160a01b0392831617835585840151600184018054831691841691909117905585850151600284018054831691841691909117905560608601516003840155608086015160048401805490921690831617905560a0909401516005909101558151858152928616908301527faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de910160405180910390a150505050505050505050505050565b60008181526007602052604081206003015415155b92915050565b610a3681611117565b50565b600081815260076020526040902060030154610a8d5760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610351565b600081815260076020908152604091829020825160c08101845281546001600160a01b0390811682526001830154811693820193909352600282015483169381019390935260038101546060840152600481015490911660808301526005015460a082018190524211610b425760405162461bcd60e51b815260206004820152601960248201527f5468652073776170206973207374696c6c20696e206c6f636b000000000000006044820152606401610351565b60408082015160608301516020808501516001600160a01b03808516600090815260068452868120918316815292529390205491929091610b839083610c4a565b6001600160a01b039384166000908152600660209081526040808320949096168252928352848120919091559485526007905250822080546001600160a01b0319908116825560018201805482169055600282018054821690556003820184905560048201805490911690556005019190915550565b6001600160a01b038216600090815260016020526040902054829060ff16610c335760405162461bcd60e51b8152600401610351906116bb565b33610c3e8484611194565b6103c48182868661120b565b600082610c5783826116e6565b9150811015610a2757600080fd5b6001600160a01b038216600090815260046020526040902054610c889082610c4a565b6001600160a01b0390921660009081526004602052604090209190915550565b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c4919061150f565b6001600160a01b038416610d865760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610351565b604080518082018252601b81527f5377617052656c656173652862797465733332207377617049642900000000006020918201529051600091610df6917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b604051602081830303815290604052805190602001209050610e1a81858585611074565b6001600160a01b0316856001600160a01b031614610e6e5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610351565b505050505050565b600082610e8383826116fe565b9150811115610a2757600080fd5b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b17905291516000928392871691610f1d9190611680565b6000604051808303816000865af19150503d8060008114610f5a576040519150601f19603f3d011682016040523d82523d6000602084013e610f5f565b606091505b5091509150818015610f89575080511580610f89575080806020019051810190610f89919061150f565b610fc75760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610351565b5050505050565b600080600080600080600087806020019051810190610fed9190611593565b96509650509550505093506040518060a0016040528060698152602001611742606991398051906020012084146110665760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207377617020726571756573742074797065686173680000006044820152606401610351565b919790965090945092505050565b6000805460405161190160f01b6020820152602281019190915260428101869052819060620160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015611102573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b0381166000818152600160208181526040808420805460ff19168417905580516080810182528481528083018581528183018681526060838101818152988852600380875294909720835181559151958201959095559351600285015594518051949594610fc7939285019291909101906112cd565b6001600160a01b0382166000908152600460205260409020548111156111e85760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610351565b6001600160a01b038216600090815260046020526040902054610c889082610e76565b6001600160a01b0380831660009081526006602090815260408083209387168352929052205481111561126c5760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610351565b6001600160a01b0380831660009081526006602090815260408083209387168352929052205461129c9082610e76565b6001600160a01b038084166000908152600660209081526040808320938816835292905220556103c4828583610e91565b828054828255906000526020600020908101928215611308579160200282015b828111156113085782518255916020019190600101906112ed565b50611314929150611318565b5090565b5b808211156113145760008155600101611319565b80356001600160a01b038116811461134457600080fd5b919050565b600082601f83011261135a57600080fd5b813567ffffffffffffffff808211156113755761137561172b565b604051601f8301601f19908116603f0116810190828211818310171561139d5761139d61172b565b816040528381528660208588010111156113b657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461134457600080fd5b6000602082840312156113f957600080fd5b6114028261132d565b9392505050565b6000806040838503121561141c57600080fd5b6114258361132d565b91506114336020840161132d565b90509250929050565b600080600080600080600060e0888a03121561145757600080fd5b6114608861132d565b9650602088013567ffffffffffffffff8082111561147d57600080fd5b6114898b838c01611349565b975060408a0135965060608a01359150808211156114a657600080fd5b506114b38a828b01611349565b9450506114c26080890161132d565b92506114d060a0890161132d565b915060c0880135905092959891949750929550565b600080604083850312156114f857600080fd5b6115018361132d565b946020939093013593505050565b60006020828403121561152157600080fd5b8151801515811461140257600080fd5b60006020828403121561154357600080fd5b5035919050565b600080600080600060a0868803121561156257600080fd5b85359450602086013593506040860135925060608601359150611587608087016113d6565b90509295509295909350565b600080600080600080600060e0888a0312156115ae57600080fd5b87519650602088015195506040880151945060608801519350608088015163ffffffff60e01b811681146115e157600080fd5b8093505060a0880151915060c0880151905092959891949750929550565b60008060008060008060c0878903121561161857600080fd5b863567ffffffffffffffff81111561162f57600080fd5b61163b89828a01611349565b96505061164a6020880161132d565b94506116586040880161132d565b9350606087013592506080870135915061167460a088016113d6565b90509295509295509295565b6000825160005b818110156116a15760208186018101518583015201611687565b818111156116b0576000828501525b509190910192915050565b6020808252601190820152703ab739bab83837b93a32b2103a37b5b2b760791b604082015260600190565b600082198211156116f9576116f9611715565b500190565b60008282101561171057611710611715565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe53776170526571756573742875696e743235362065787069726554732c627974657320696e546f6b656e2c75696e7432353620616d6f756e742c627974657334206f7574436861696e2c6279746573206f7574546f6b656e2c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
