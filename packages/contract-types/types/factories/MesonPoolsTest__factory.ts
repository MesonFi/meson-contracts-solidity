/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "inToken",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "outToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasLockingSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockingSwaps",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "metaAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalDemandFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalSupplyFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405260526080818152906118f160a039805160209182012060408051808201825260088152674d65736f6e20466960c01b908401528051808201825260018152603160f81b908401528051928301919091527fe127d7b8d403871d7ed6b19024db4422e92aee79823ba78ad61e52ee2a5f9b98908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001604051602081830303815290604052805190602001206000553480156100d457600080fd5b5061180d806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c43a73dc1161008c578063d23d1c7611610066578063d23d1c7614610299578063ec9b5b3a146102ac578063f3fef3a3146102bf578063f7888aec146102d257600080fd5b8063c43a73dc1461025c578063c68596011461026f578063c6aea8c71461028657600080fd5b806368c4ac26116100c857806368c4ac26146101535780636bb39ae01461018657806394149c1a1461021e578063a8f81b1a1461023357600080fd5b806347e7ef24146100ef5780634e1389ed1461010457806361565d2514610117575b600080fd5b6101026100fd36600461153b565b6102fd565b005b6101026101123660046115a0565b6103b0565b61014061012536600461143d565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b61017661016136600461143d565b60016020526000908152604090205460ff1681565b604051901515815260200161014a565b6101db610194366004611587565b6007602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949283169391929091169086565b604080516001600160a01b0397881681529587166020870152938616938501939093526060840191909152909216608082015260a081019190915260c00161014a565b604051632000000f60e21b815260200161014a565b61014061024136600461143d565b6001600160a01b031660009081526005602052604090205490565b61010261026a366004611655565b6105f2565b61010261027d366004611492565b50505050505050565b610176610294366004611587565b610a81565b6101026102a736600461143d565b610a9c565b6101026102ba366004611587565b610aa8565b6101026102cd36600461153b565b610c68565b6101406102e036600461145f565b600660209081526000928352604080842090915290825290205481565b6001600160a01b038216600090815260016020526040902054829060ff166103405760405162461bcd60e51b815260040161033790611711565b60405180910390fd5b6001600160a01b03831660009081526006602090815260408083203380855292529091205461036f9084610cb9565b6001600160a01b0380861660009081526006602090815260408083209386168352929052205561039f8484610cd4565b6103aa848285610d17565b50505050565b6000858152600760208181526040808420815160c08101835281546001600160a01b039081168252600183015481168286015260028301548116938201939093526003820154606082018190526004830154909316608082015260059091015460a08201529389905291905261045e5760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610337565b80606001518511156104cf5760405162461bcd60e51b815260206004820152603460248201527f72656c6561736520616d6f756e742063616e6e6f742062652067726561746572604482015273081d1a185b881b1bd8dada5b99c8185b5bdd5b9d60621b6064820152608401610337565b6104e0868260000151868686610d9f565b6040810151602082015160808301516060840151881015610561576001600160a01b03808416600090815260066020908152604080832093861683529290522054606085015161053a9190610535908b610f6f565b610cb9565b6001600160a01b038085166000908152600660209081526040808320938716835292905220555b600089815260076020526040812080546001600160a01b031990811682556001820180548216905560028201805482169055600382018390556004820180549091169055600501556105b483828a610f8a565b6040518981527fe8aa10932e72fe72aa2f3879a4dd799b95f5fbe728be1be0609e5baa14ec40f49060200160405180910390a1505050505050505050565b6001600160a01b038516600090815260016020526040902054859060ff1661062c5760405162461bcd60e51b815260040161033790611711565b600080600061063a8a6110c7565b925092509250600083116106905760405162461bcd60e51b815260206004820181905260248201527f616d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610337565b6040516bffffffffffffffffffffffff1960608b901b1660208201528290603401604051602081830303815290604052805190602001201461070b5760405162461bcd60e51b81526020600482015260146024820152730e8ded6cadc40c8decae640dcdee840dac2e8c6d60631b6044820152606401610337565b6040516bffffffffffffffffffffffff1960608a901b1660208201528190603401604051602081830303815290604052805190602001201461078f5760405162461bcd60e51b815260206004820152601860248201527f726563697069656e7420646f6573206e6f74206d6174636800000000000000006044820152606401610337565b6001600160a01b0389166000908152600660209081526040808320338085529252909120548411156107fa5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610337565b60006108438c80516020918201206000546040805161190160f01b8186015260228101929092526042808301939093528051808303909301835260629091019052805191012090565b600081815260076020526040902060030154909150156108a55760405162461bcd60e51b815260206004820152601b60248201527f6c6f636b696e67207377617020616c72656164792065786973747300000000006044820152606401610337565b6001600160a01b03808c166000908152600660209081526040808320938616835292905220546108d6908690611754565b6001600160a01b03808d166000908152600660209081526040808320938716835292905281812092909255805160c081019290925260e082019081905282905260ff881661010082015261012081018a90526101408101899052429080600161016082016020604051602081039080840390855afa15801561095c573d6000803e3d6000fd5b505050602060405103516001600160a01b03168152602001846001600160a01b031681526020018d6001600160a01b031681526020018781526020018c6001600160a01b031681526020016104b0836109b5919061173c565b9052600083815260076020908152604091829020835181546001600160a01b03199081166001600160a01b0392831617835585840151600184018054831691841691909117905585850151600284018054831691841691909117905560608601516003840155608086015160048401805490921690831617905560a0909401516005909101558151858152928616908301527faad18fe672f0d6b379db88b0e1176f10cc003e9a4d8ed142a90c0b6f8bedb8de910160405180910390a150505050505050505050505050565b60008181526007602052604081206003015415155b92915050565b610aa58161116d565b50565b600081815260076020526040902060030154610afc5760405162461bcd60e51b81526020600482015260136024820152721cddd85c08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610337565b600081815260076020908152604091829020825160c08101845281546001600160a01b0390811682526001830154811693820193909352600282015483169381019390935260038101546060840152600481015490911660808301526005015460a082018190524211610bb15760405162461bcd60e51b815260206004820152601960248201527f5468652073776170206973207374696c6c20696e206c6f636b000000000000006044820152606401610337565b60408082015160608301516020808501516001600160a01b03808516600090815260068452868120918316815292529390205491929091610bf29083610cb9565b6001600160a01b039384166000908152600660209081526040808320949096168252928352848120919091559485526007905250822080546001600160a01b0319908116825560018201805482169055600282018054821690556003820184905560048201805490911690556005019190915550565b6001600160a01b038216600090815260016020526040902054829060ff16610ca25760405162461bcd60e51b815260040161033790611711565b33610cad84846111ea565b6103aa81828686611261565b600082610cc6838261173c565b9150811015610a9657600080fd5b6001600160a01b038216600090815260046020526040902054610cf79082610cb9565b6001600160a01b0390921660009081526004602052604090209190915550565b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190611565565b6001600160a01b038416610df55760405162461bcd60e51b815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610337565b604080518082018252601b81527f5377617052656c656173652862797465733332207377617049642900000000006020918201529051600091610e65917ffb1f98601c589a04e2ceca199119c17bd547893fffb8d088acdae5aff4f9b19d91899101918252602082015260400190565b6040516020818303038152906040528051906020012090506000805482604051602001610ea992919061190160f01b81526002810192909252602282015260420190565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015610f11573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b03161461027d5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610337565b600082610f7c8382611754565b9150811115610a9657600080fd5b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161101691906116d6565b6000604051808303816000865af19150503d8060008114611053576040519150601f19603f3d011682016040523d82523d6000602084013e611058565b606091505b50915091508180156110825750805115806110825750808060200190518101906110829190611565565b6110c05760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610337565b5050505050565b6000806000806000806000878060200190518101906110e691906115e9565b96509650509550505093506040518060a00160405280606981526020016117986069913980519060200120841461115f5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207377617020726571756573742074797065686173680000006044820152606401610337565b919790965090945092505050565b6001600160a01b0381166000818152600160208181526040808420805460ff191684179055805160808101825284815280830185815281830186815260608381018181529888526003808752949097208351815591519582019590955593516002850155945180519495946110c093928501929190910190611323565b6001600160a01b03821660009081526004602052604090205481111561123e5760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610337565b6001600160a01b038216600090815260046020526040902054610cf79082610f6f565b6001600160a01b038083166000908152600660209081526040808320938716835292905220548111156112c25760405162461bcd60e51b815260206004820152600960248201526837bb32b9323930bbb760b91b6044820152606401610337565b6001600160a01b038083166000908152600660209081526040808320938716835292905220546112f29082610f6f565b6001600160a01b038084166000908152600660209081526040808320938816835292905220556103aa828583610f8a565b82805482825590600052602060002090810192821561135e579160200282015b8281111561135e578251825591602001919060010190611343565b5061136a92915061136e565b5090565b5b8082111561136a576000815560010161136f565b80356001600160a01b038116811461139a57600080fd5b919050565b600082601f8301126113b057600080fd5b813567ffffffffffffffff808211156113cb576113cb611781565b604051601f8301601f19908116603f011681019082821181831017156113f3576113f3611781565b8160405283815286602085880101111561140c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461139a57600080fd5b60006020828403121561144f57600080fd5b61145882611383565b9392505050565b6000806040838503121561147257600080fd5b61147b83611383565b915061148960208401611383565b90509250929050565b600080600080600080600060e0888a0312156114ad57600080fd5b6114b688611383565b9650602088013567ffffffffffffffff808211156114d357600080fd5b6114df8b838c0161139f565b975060408a0135965060608a01359150808211156114fc57600080fd5b506115098a828b0161139f565b94505061151860808901611383565b925061152660a08901611383565b915060c0880135905092959891949750929550565b6000806040838503121561154e57600080fd5b61155783611383565b946020939093013593505050565b60006020828403121561157757600080fd5b8151801515811461145857600080fd5b60006020828403121561159957600080fd5b5035919050565b600080600080600060a086880312156115b857600080fd5b853594506020860135935060408601359250606086013591506115dd6080870161142c565b90509295509295909350565b600080600080600080600060e0888a03121561160457600080fd5b87519650602088015195506040880151945060608801519350608088015163ffffffff60e01b8116811461163757600080fd5b8093505060a0880151915060c0880151905092959891949750929550565b60008060008060008060c0878903121561166e57600080fd5b863567ffffffffffffffff81111561168557600080fd5b61169189828a0161139f565b9650506116a060208801611383565b94506116ae60408801611383565b935060608701359250608087013591506116ca60a0880161142c565b90509295509295509295565b6000825160005b818110156116f757602081860181015185830152016116dd565b81811115611706576000828501525b509190910192915050565b6020808252601190820152703ab739bab83837b93a32b2103a37b5b2b760791b604082015260600190565b6000821982111561174f5761174f61176b565b500190565b6000828210156117665761176661176b565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe53776170526571756573742875696e743235362065787069726554732c627974657320696e546f6b656e2c75696e7432353620616d6f756e742c627974657334206f7574436861696e2c6279746573206f7574546f6b656e2c627974657320726563697069656e7429a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
