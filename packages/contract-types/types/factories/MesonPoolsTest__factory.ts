/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200201f3803806200201f8339810160408190526200003491620000e7565b6200004181600162000048565b5062000119565b60ff81166200009d5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e6465780000000000604482015260640160405180910390fd5b6001600160a01b039091166000818152600160209081526040808320805460ff90961660ff19909616861790559382528190529190912080546001600160a01b0319169091179055565b600060208284031215620000fa57600080fd5b81516001600160a01b03811681146200011257600080fd5b9392505050565b611ef680620001296000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063b3df5b3611610097578063eba7fb7711610066578063eba7fb77146102d6578063f1d2ec1d14610303578063f7888aec14610316578063ff3787191461032957600080fd5b8063b3df5b361461021c578063be18e8a414610277578063ce9247431461028a578063e16a567d1461029d57600080fd5b806360a2da98116100d357806360a2da981461019c5780638f487dc9146101e1578063903d4296146101f4578063b002249d1461020757600080fd5b80631aba3a55146100fa5780632335093c1461013c57806337b90a4f14610187575b600080fd5b610121610108366004611b6c565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b61017561014a366004611b6c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff9091168152602001610133565b61019a610195366004611cb5565b610362565b005b6101af6101aa366004611be3565b6104f9565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835264ffffffffff909116602083015201610133565b61019a6101ef366004611cb5565b610554565b61019a610202366004611cf0565b6107e9565b61020f6108e7565b6040516101339190611d90565b61025261022a366004611d13565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610133565b61019a610285366004611c06565b610a34565b61019a610298366004611c56565b610cef565b6102c86102ab366004611d3a565b60281b65ff00000000001660009081526004602052604090205490565b604051908152602001610133565b6040517e3c0000000000000000000000000000000000000000000000000000000000008152602001610133565b61019a610311366004611be3565b610e2f565b6102c8610324366004611b8e565b610f77565b610252610337366004611d3a565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600082116103b75760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064015b60405180910390fd5b8064ffffffffff811661040c5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e646578000060448201526064016103ae565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146104875760405162461bcd60e51b815260206004820152601860248201527f496e636f72726563742070726f766964657220696e646578000000000000000060448201526064016103ae565b65ffffffffffff8216600090815260046020526040812080548592906104ae908490611dea565b909155505060ff602883901c811660008181526020819052604090205490916104f39173ffffffffffffffffffffffffffffffffffffffff1690339087908514611007565b50505050565b60008060006105088585611217565b60009081526005602090815260408083205464ffffffffff8082168552600390935292205473ffffffffffffffffffffffffffffffffffffffff169760289290921c1695509350505050565b600082116105a45760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064016103ae565b338164ffffffffff81166105fa5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e646578000060448201526064016103ae565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff16156106745760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c72656164792072656769737465726564000000000000000060448201526064016103ae565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205464ffffffffff16156106ee5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c7265616479207265676973746572656400000000000060448201526064016103ae565b64ffffffffff8116600081815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526002825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff8616825260049052908120805486929061079d908490611dea565b909155505060ff602884901c811660008181526020819052604090205490916107e29173ffffffffffffffffffffffffffffffffffffffff1690859088908514611007565b5050505050565b3360008181526002602052604090205464ffffffffff16806108735760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e64526567697374657200000000000000000000000000000000000060648201526084016103ae565b64ffffffffff8116602884901b65ff00000000001617600090815260046020526040812080548692906108a7908490611e02565b909155505060ff8084166000818152602081905260409020546104f39273ffffffffffffffffffffffffffffffffffffffff909116918591889114611278565b606060015b6101008160ff16101561099f5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1661098d578060ff1660011415610936575090565b610941600182611e19565b60ff1667ffffffffffffffff81111561095c5761095c611eba565b604051908082528060200260200182016040528015610985578160200160208202803683370190505b50915061099f565b8061099781611e3c565b9150506108ec565b60015b8160ff168160ff161015610a2f5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16836109e5600184611e19565b60ff16815181106109f8576109f8611e8b565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610a2781611e3c565b9150506109a2565b505090565b84603c610a418260201c90565b61ffff1614610a925760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e00000000000000000060448201526064016103ae565b6000610a9e8784611217565b60008181526005602052604090205490915069ffffffffffffffffffff1615610b095760405162461bcd60e51b815260206004820152601360248201527f5377617020616c7265616479206578697374730000000000000000000000000060448201526064016103ae565b610b1687878787876113c7565b3360009081526002602052604090205464ffffffffff1680610ba05760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e000000000000000000000000000000000060648201526084016103ae565b6000610bae61096042611dea565b9050603089901c64ffffffffff168110610c305760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74206c6f636b20626563617573652065787069726554732069732060448201527f736f6f6e2e00000000000000000000000000000000000000000000000000000060648201526084016103ae565b65ff000000000060108a901b1664ffffffffff8316176000818152600460205260408120805460d08d901c9290610c68908490611e02565b909155505060008481526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001664ffffffffff8716602887901b69ffffffffff00000000001617179055518b917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a250505050505050505050565b6000610cfb8784611217565b60008181526005602052604090205490915069ffffffffffffffffffff1680610d665760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064016103ae565b610d748884898989896116e0565b600082815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055610db28960181c90565b60ff8116600090815260208190526040902054909150610df99073ffffffffffffffffffffffffffffffffffffffff1685610ded8c60d01c90565b8460ff1660ff14611278565b60405189907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a2505050505050505050565b6000610e3b8383611217565b60008181526005602052604090205490915069ffffffffffffffffffff1680610ea65760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064016103ae565b42602882901c64ffffffffff1610610f005760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b000000000000000000000000000060448201526064016103ae565b65ff0000000000601085901b1664ffffffffff8216176000818152600460205260408120805460d088901c9290610f38908490611dea565b90915550505060009182525060056020526040902080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602090815260408083205493851683526002909152812054909160ff169064ffffffffff16801580610fc9575060ff8216155b15610fd957600092505050611001565b64ffffffffff1660289190911b65ff0000000000161760009081526004602052604090205490505b92915050565b73ffffffffffffffffffffffffffffffffffffffff841661106a5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420737570706f727465640000000000000000000000000060448201526064016103ae565b600082116110ba5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103ae565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152306044830152606480830186905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916111579190611d55565b6000604051808303816000865af19150503d8060008114611194576040519150601f19603f3d011682016040523d82523d6000602084013e611199565b606091505b50915091508180156111c35750805115806111c35750808060200190518101906111c39190611bc1565b61120f5760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c65640000000000000000000000000060448201526064016103ae565b505050505050565b6000828260405160200161125a92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b60405160208183030381529060405280519060200120905092915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152604480830186905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929088169161130f9190611d55565b6000604051808303816000865af19150503d806000811461134c576040519150601f19603f3d011682016040523d82523d6000602084013e611351565b606091505b509150915081801561137b57508051158061137b57508080602001905181019061137b9190611bc1565b61120f5760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103ae565b73ffffffffffffffffffffffffffffffffffffffff811661142a5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016103ae565b6114348560081c90565b61ffff1660c31415611587576040517f1954524f4e205369676e6564204d6573736167653a0a33320a000000000000006020820152603981018690526000906059015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa1580156114fd573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146115815760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b506107e2565b60ff60c886901c811614156115d1576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101869052600090605c01611477565b6000858152602080822081527f7b521e60f64ab56ff03ddfb26df49be54b20672b7acfffc1adeb256b554ccb258083526040808420815194855292840180825283905260ff86169084015260608301879052608083018690529160019060a0016020604051602081039080840390855afa158015611653573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116d75760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff81166117435760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016103ae565b61174d8660081c90565b61ffff1660c314156118cb576040517f1954524f4e205369676e6564204d6573736167653a0a33320a000000000000006020820152603981018790527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b166059820152600090606d01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015611841573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146118c55760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b5061120f565b60006118d78760201c90565b61ffff1660c31415611928578560155260416020538660005260356000206020527ff6ea10de668a877958d46ed7d53eaf47124fda9bee9423390a28c203556a2e5560005260406000209050611a5b565b60ff60c888901c81161415611a21576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000009061199a908990899060200191825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020918201207fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090931690820152603c810191909152605c01604051602081830303815290604052805190602001209050611a5b565b5060148590526000868152603481206020527fd23291d9d999318ac3ed13f43ac8003d6fbd69a4b532aeec9ffad516010a208c8152604090205b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611aae573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146116d75760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b5657600080fd5b919050565b803560ff81168114611b5657600080fd5b600060208284031215611b7e57600080fd5b611b8782611b32565b9392505050565b60008060408385031215611ba157600080fd5b611baa83611b32565b9150611bb860208401611b32565b90509250929050565b600060208284031215611bd357600080fd5b81518015158114611b8757600080fd5b60008060408385031215611bf657600080fd5b82359150611bb860208401611b32565b600080600080600060a08688031215611c1e57600080fd5b853594506020860135935060408601359250611c3c60608701611b5b565b9150611c4a60808701611b32565b90509295509295909350565b60008060008060008060c08789031215611c6f57600080fd5b863595506020870135945060408701359350611c8d60608801611b5b565b9250611c9b60808801611b32565b9150611ca960a08801611b32565b90509295509295509295565b60008060408385031215611cc857600080fd5b82359150602083013565ffffffffffff81168114611ce557600080fd5b809150509250929050565b60008060408385031215611d0357600080fd5b82359150611bb860208401611b5b565b600060208284031215611d2557600080fd5b813564ffffffffff81168114611b8757600080fd5b600060208284031215611d4c57600080fd5b611b8782611b5b565b6000825160005b81811015611d765760208186018101518583015201611d5c565b81811115611d85576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611dde57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611dac565b50909695505050505050565b60008219821115611dfd57611dfd611e5c565b500190565b600082821015611e1457611e14611e5c565b500390565b600060ff821660ff841680821015611e3357611e33611e5c565b90039392505050565b600060ff821660ff811415611e5357611e53611e5c565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000806000a";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(token, overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
