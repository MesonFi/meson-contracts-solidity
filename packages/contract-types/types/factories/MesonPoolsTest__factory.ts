/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "premiumManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "mesonFeeCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200235238038062002352833981016040819052620000349162000124565b6200004182600162000068565b600680546001600160a01b0319166001600160a01b0392909216919091179055506200015c565b60ff8116620000bd5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e6465780000000000604482015260640160405180910390fd5b6001600160a01b039091166000818152600160209081526040808320805460ff90961660ff19909616861790559382528190529190912080546001600160a01b0319169091179055565b80516001600160a01b03811681146200011f57600080fd5b919050565b600080604083850312156200013857600080fd5b620001438362000107565b9150620001536020840162000107565b90509250929050565b6121e6806200016c6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063b3df5b3611610097578063eba7fb7711610066578063eba7fb77146102d6578063f1d2ec1d14610303578063f7888aec14610316578063ff3787191461032957600080fd5b8063b3df5b361461021c578063be18e8a414610277578063ce9247431461028a578063e16a567d1461029d57600080fd5b806360a2da98116100d357806360a2da981461019c5780638f487dc9146101e1578063903d4296146101f4578063b002249d1461020757600080fd5b80631aba3a55146100fa5780632335093c1461013c57806337b90a4f14610187575b600080fd5b610121610108366004611e21565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b61017561014a366004611e21565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff9091168152602001610133565b61019a610195366004611f6a565b610362565b005b6101af6101aa366004611e98565b6104f9565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835264ffffffffff909116602083015201610133565b61019a6101ef366004611f6a565b610554565b61019a610202366004611fa5565b6107e9565b61020f6108e7565b6040516101339190612045565b61025261022a366004611fc8565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610133565b61019a610285366004611ebb565b610a34565b61019a610298366004611f0b565b610d0b565b6102c86102ab366004611fef565b60281b65ff00000000001660009081526004602052604090205490565b604051908152602001610133565b6040517e3c0000000000000000000000000000000000000000000000000000000000008152602001610133565b61019a610311366004611e98565b610f64565b6102c8610324366004611e43565b6110c8565b610252610337366004611fef565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600082116103b75760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064015b60405180910390fd5b8064ffffffffff811661040c5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e646578000060448201526064016103ae565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146104875760405162461bcd60e51b815260206004820152601860248201527f496e636f72726563742070726f766964657220696e646578000000000000000060448201526064016103ae565b65ffffffffffff8216600090815260046020526040812080548592906104ae90849061209f565b909155505060ff602883901c811660008181526020819052604090205490916104f39173ffffffffffffffffffffffffffffffffffffffff1690339087908514611158565b50505050565b60008060006105088585611368565b60009081526005602090815260408083205464ffffffffff8082168552600390935292205473ffffffffffffffffffffffffffffffffffffffff169760289290921c1695509350505050565b600082116105a45760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064016103ae565b338164ffffffffff81166105fa5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e646578000060448201526064016103ae565b64ffffffffff811660009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff16156106745760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c72656164792072656769737465726564000000000000000060448201526064016103ae565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205464ffffffffff16156106ee5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c7265616479207265676973746572656400000000000060448201526064016103ae565b64ffffffffff8116600081815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526002825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff8616825260049052908120805486929061079d90849061209f565b909155505060ff602884901c811660008181526020819052604090205490916107e29173ffffffffffffffffffffffffffffffffffffffff1690859088908514611158565b5050505050565b3360008181526002602052604090205464ffffffffff16806108735760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e64526567697374657200000000000000000000000000000000000060648201526084016103ae565b64ffffffffff8116602884901b65ff00000000001617600090815260046020526040812080548692906108a79084906120f2565b909155505060ff8084166000818152602081905260409020546104f39273ffffffffffffffffffffffffffffffffffffffff9091169185918891146113c9565b606060015b6101008160ff16101561099f5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1661098d578060ff1660011415610936575090565b610941600182612109565b60ff1667ffffffffffffffff81111561095c5761095c6121aa565b604051908082528060200260200182016040528015610985578160200160208202803683370190505b50915061099f565b806109978161212c565b9150506108ec565b60015b8160ff168160ff161015610a2f5760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16836109e5600184612109565b60ff16815181106109f8576109f861217b565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610a278161212c565b9150506109a2565b505090565b84603c610a418260201c90565b61ffff1614610a925760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e00000000000000000060448201526064016103ae565b6000610a9e8784611368565b60008181526005602052604090205490915069ffffffffffffffffffff1615610b095760405162461bcd60e51b815260206004820152601360248201527f5377617020616c7265616479206578697374730000000000000000000000000060448201526064016103ae565b610b168787878787611518565b3360009081526002602052604090205464ffffffffff1680610ba05760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e000000000000000000000000000000000060648201526084016103ae565b6000610bae6109604261209f565b9050603089901c64ffffffffff168110610c305760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74206c6f636b20626563617573652065787069726554732069732060448201527f736f6f6e2e00000000000000000000000000000000000000000000000000000060648201526084016103ae565b64ffffffffff82811660108b901b65ff000000000016179060588b901c1660d08b901c610c5d91906120f2565b65ffffffffffff821660009081526004602052604081208054909190610c849084906120f2565b909155505060008481526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001664ffffffffff8716602887901b69ffffffffff00000000001617179055518b917fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb491a250505050505050505050565b794000000000000000000000000000000000000000000000000000861615801590610d3857610d38611893565b6000610d448885611368565b60008181526005602052604090205490915069ffffffffffffffffffff1680610daf5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064016103ae565b4260308a901c64ffffffffff1611610e095760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742072656c6561736520626563617573652065787069726564000060448201526064016103ae565b610e1789858a8a8a8a611922565b600082815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055610e558a60181c90565b9050600060588b901c64ffffffffff16610e6f8c60d01c90565b610e7991906120f2565b905084610ef1576000610e8b8c611dd5565b9050610e9781836120f2565b91508060046000610ebd8f600064ffffffffff1660109190911b65ff0000000000161790565b65ffffffffffff1665ffffffffffff1681526020019081526020016000206000828254610eea919061209f565b9091555050505b60ff808316600081815260208190526040902054610f2c9273ffffffffffffffffffffffffffffffffffffffff9091169189918591146113c9565b6040518b907ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad290600090a25050505050505050505050565b6000610f708383611368565b60008181526005602052604090205490915069ffffffffffffffffffff1680610fdb5760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064016103ae565b42602882901c64ffffffffff16106110355760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b000000000000000000000000000060448201526064016103ae565b64ffffffffff818116601086901b65ff0000000000161790605886901c1660d086901c61106291906120f2565b65ffffffffffff82166000908152600460205260408120805490919061108990849061209f565b90915550505060009182525060056020526040902080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602090815260408083205493851683526002909152812054909160ff169064ffffffffff1680158061111a575060ff8216155b1561112a57600092505050611152565b64ffffffffff1660289190911b65ff0000000000161760009081526004602052604090205490505b92915050565b73ffffffffffffffffffffffffffffffffffffffff84166111bb5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420737570706f727465640000000000000000000000000060448201526064016103ae565b6000821161120b5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103ae565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152306044830152606480830186905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916112a8919061200a565b6000604051808303816000865af19150503d80600081146112e5576040519150601f19603f3d011682016040523d82523d6000602084013e6112ea565b606091505b50915091508180156113145750805115806113145750808060200190518101906113149190611e76565b6113605760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c65640000000000000000000000000060448201526064016103ae565b505050505050565b600082826040516020016113ab92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b60405160208183030381529060405280519060200120905092915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152604480830186905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290881691611460919061200a565b6000604051808303816000865af19150503d806000811461149d576040519150601f19603f3d011682016040523d82523d6000602084013e6114a2565b606091505b50915091508180156114cc5750805115806114cc5750808060200190518101906114cc9190611e76565b6113605760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103ae565b73ffffffffffffffffffffffffffffffffffffffff811661157b5760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016103ae565b79080000000000000000000000000000000000000000000000000085161515600886901c61ffff1660c31415611742576000816115d8577f1954524f4e205369676e6564204d6573736167653a0a33320a000000000000006115fa565b7f1954524f4e205369676e6564204d6573736167653a0a33330a000000000000005b6040517fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009091166020820152603981018890526059015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8716918301919091526060820188905260808201879052915060019060a0016020604051602081039080840390855afa1580156116b7573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461173b5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b50506107e2565b8015611783576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101879052600090605c01611631565b6000868152602080822081527f7b521e60f64ab56ff03ddfb26df49be54b20672b7acfffc1adeb256b554ccb258083526040808420815194855292840180825283905260ff87169084015260608301889052608083018790529160019060a0016020604051602081039080840390855afa158015611805573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146118895760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b5050505050505050565b60065473ffffffffffffffffffffffffffffffffffffffff1633146119205760405162461bcd60e51b815260206004820152602160248201527f43616c6c6572206973206e6f7420746865207072656d69756d206d616e61676560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016103ae565b565b73ffffffffffffffffffffffffffffffffffffffff81166119855760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d7074792061646472657373000060448201526064016103ae565b79080000000000000000000000000000000000000000000000000086161515600887901c61ffff1660c31415611b77576000816119e2577f1954524f4e205369676e6564204d6573736167653a0a33320a00000000000000611a04565b7f1954524f4e205369676e6564204d6573736167653a0a35330a000000000000005b6040517fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009091166020820152603981018990527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606089901b166059820152606d01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8716918301919091526060820188905260808201879052915060019060a0016020604051602081039080840390855afa158015611aec573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611b705760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b5050611360565b60008115611c69576040517f19457468657265756d205369676e6564204d6573736167653a0a33320000000090611be2908a908a9060200191825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020918201207fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090931690820152603c810191909152605c01604051602081830303815290604052805190602001209050611cfe565b611c738860201c90565b61ffff1660c31415611cc4578660155260416020538760005260356000206020527ff6ea10de668a877958d46ed7d53eaf47124fda9bee9423390a28c203556a2e5560005260406000209050611cfe565b5060148690526000878152603481206020527fd23291d9d999318ac3ed13f43ac8003d6fbd69a4b532aeec9ffad516010a208c8152604090205b60408051600081526020810180835283905260ff861691810191909152606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611d51573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118895760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ae565b60006111526103e860d084901c6120b7565b803573ffffffffffffffffffffffffffffffffffffffff81168114611e0b57600080fd5b919050565b803560ff81168114611e0b57600080fd5b600060208284031215611e3357600080fd5b611e3c82611de7565b9392505050565b60008060408385031215611e5657600080fd5b611e5f83611de7565b9150611e6d60208401611de7565b90509250929050565b600060208284031215611e8857600080fd5b81518015158114611e3c57600080fd5b60008060408385031215611eab57600080fd5b82359150611e6d60208401611de7565b600080600080600060a08688031215611ed357600080fd5b853594506020860135935060408601359250611ef160608701611e10565b9150611eff60808701611de7565b90509295509295909350565b60008060008060008060c08789031215611f2457600080fd5b863595506020870135945060408701359350611f4260608801611e10565b9250611f5060808801611de7565b9150611f5e60a08801611de7565b90509295509295509295565b60008060408385031215611f7d57600080fd5b82359150602083013565ffffffffffff81168114611f9a57600080fd5b809150509250929050565b60008060408385031215611fb857600080fd5b82359150611e6d60208401611e10565b600060208284031215611fda57600080fd5b813564ffffffffff81168114611e3c57600080fd5b60006020828403121561200157600080fd5b611e3c82611e10565b6000825160005b8181101561202b5760208186018101518583015201612011565b8181111561203a576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561209357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612061565b50909695505050505050565b600082198211156120b2576120b261214c565b500190565b6000826120ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156121045761210461214c565b500390565b600060ff821660ff8416808210156121235761212361214c565b90039392505050565b600060ff821660ff8114156121435761214361214c565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000806000a";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    premiumManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(
      token,
      premiumManager,
      overrides || {}
    ) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    token: string,
    premiumManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, premiumManager, overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
