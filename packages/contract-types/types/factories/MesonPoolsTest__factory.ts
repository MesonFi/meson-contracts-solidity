/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MesonPoolsTest,
  MesonPoolsTestInterface,
} from "../MesonPoolsTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "SwapReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "balanceIndex",
        type: "uint48",
      },
    ],
    name: "depositAndRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "getLockedSwap",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "until",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedSwap",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c6538038062001c658339810160408190526200003491620000fa565b6200004181600162000048565b506200012c565b60ff81166200009d5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420757365203020617320746f6b656e20696e6465780000000000604482015260640160405180910390fd5b6001600160a01b03919091166000818152602081815260408083208054600160ff19918216811790925560028452828520805490911660ff90971696871790559483529390529190912080546001600160a01b0319169091179055565b6000602082840312156200010d57600080fd5b81516001600160a01b03811681146200012557600080fd5b9392505050565b611b29806200013c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b3df5b361161008c578063e76afb5411610066578063e76afb5414610260578063eba7fb7714610315578063f7888aec14610342578063ff3787191461037657600080fd5b8063b3df5b36146101df578063be18e8a41461023a578063d3705a921461024d57600080fd5b80636198e339116100c85780636198e339146101915780639033ed08146101a45780639432984f146101b7578063b002249d146101ca57600080fd5b80630b9b44af146100ef5780631aba3a55146101045780632335093c14610146575b600080fd5b6101026100fd3660046118a8565b6103af565b005b61012b6101123660046117ac565b60036020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b61017f6101543660046117ac565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60405160ff909116815260200161013d565b61010261019f36600461188f565b61053a565b6101026101b2366004611823565b61072b565b6101026101c5366004611865565b610862565b6101d26109bd565b60405161013d9190611975565b6102156101ed3660046118f8565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013d565b6101026102483660046118a8565b610b0e565b61010261025b366004611823565b610dd3565b6102db61026e36600461188f565b60009081526006602090815260408083205464ffffffffff60a082901c8116855260049093529220547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83169373ffffffffffffffffffffffffffffffffffffffff9091169260c81c90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015264ffffffffff169082015260600161013d565b6040517e3c000000000000000000000000000000000000000000000000000000000000815260200161013d565b6103556103503660046117ce565b6110cc565b6040516fffffffffffffffffffffffffffffffff909116815260200161013d565b61021561038436600461191f565b60ff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000858152600660205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16806104305760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f742065786973740000000000000000000000000060448201526064015b60405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152610487908790603401604051602081830303815290604052805190602001208787878661113d565b60ff601887901c1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff166104c3818460808a901c6112b1565b6000878152600660205260409081902080547fffff000000000000000000000000000000000000000000000000000000000000169055517ffa628b578e095243f0544bfad9255f49d79d03a5bbf6c85875d05a215e247ad2906105299089815260200190565b60405180910390a150505050505050565b6000818152600660205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16806105b65760405162461bcd60e51b815260206004820152601360248201527f5377617020646f6573206e6f74206578697374000000000000000000000000006044820152606401610427565b807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c842901b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16116106495760405162461bcd60e51b815260206004820152601260248201527f53776170207374696c6c20696e206c6f636b00000000000000000000000000006044820152606401610427565b65ff0000000000601083901b1664ffffffffff60a083901c1617600081815260056020526040902054608084901c91601885901c9161069a906fffffffffffffffffffffffffffffffff1684611430565b65ffffffffffff91909116600090815260056020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff90951694909417909355958152600690955290932080547fffff000000000000000000000000000000000000000000000000000000000000169055505050565b6000826fffffffffffffffffffffffffffffffff161161078d5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610427565b65ffffffffffff81166000908152600560205260409020546107c1906fffffffffffffffffffffffffffffffff1683611430565b65ffffffffffff8216600090815260056020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9590951694909417909355602884901c60ff16825260019052205461085e9073ffffffffffffffffffffffffffffffffffffffff1633846fffffffffffffffffffffffffffffffff166114b2565b5050565b3360008181526003602052604090205464ffffffffff16806108ec5760405162461bcd60e51b815260206004820152602e60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465720000000000000000000000000000000000006064820152608401610427565b65ff0000000000602884901b1664ffffffffff82161760008181526005602052604090205461092d906fffffffffffffffffffffffffffffffff1686611560565b65ffffffffffff8216600090815260056020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff95861617905560ff8816835260019091529020546109b69173ffffffffffffffffffffffffffffffffffffffff90911690859088166112b1565b5050505050565b606060015b6101008160ff161015610a755760ff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16610a63578060ff1660011415610a0c575090565b610a17600182611a4c565b60ff1667ffffffffffffffff811115610a3257610a32611aed565b604051908082528060200260200182016040528015610a5b578160200160208202803683370190505b509150610a75565b80610a6d81611a6f565b9150506109c2565b60015b8160ff168160ff161015610b095760ff811660009081526001602081905260409091205473ffffffffffffffffffffffffffffffffffffffff16908490610abf9084611a4c565b60ff1681518110610ad257610ad2611abe565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610b0181611a6f565b915050610a78565b505090565b84602081901c61ffff16603c14610b675760405162461bcd60e51b815260206004820152601760248201527f53776170206e6f7420666f72207468697320636861696e0000000000000000006044820152606401610427565b6000868152600660205260409020547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615610be35760405162461bcd60e51b815260206004820152601360248201527f5377617020616c726561647920657869737473000000000000000000000000006044820152606401610427565b610bf086868686866115e2565b3360009081526003602052604090205464ffffffffff1680610c7a5760405162461bcd60e51b815260206004820152602f60248201527f43616c6c6572206e6f7420726567697374657265642e2043616c6c206465706f60448201527f736974416e6452656769737465722e00000000000000000000000000000000006064820152608401610427565b60008080610c8a6104b042611a03565b6020878152600c86815260188d901c600790815260008051925191859052835165ffffffffffff831682526005909452604090205460309290921c9650945091925090610ce9906fffffffffffffffffffffffffffffffff1685611560565b65ffffffffffff8416600090815260056020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff95909516949094179093558d8252600681529082902080547fffff000000000000000000000000000000000000000000000000000000000000167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851617905590518c81527fbfb879c34323c5601fafe832c3a8a1e31e12c288695838726ddeada86034edb4910160405180910390a15050505050505050505050565b6000826fffffffffffffffffffffffffffffffff1611610e355760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610427565b338164ffffffffff8116610e8b5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742075736520302061732070726f766964657220696e64657800006044820152606401610427565b64ffffffffff811660009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610f055760405162461bcd60e51b815260206004820152601860248201527f496e64657820616c7265616479207265676973746572656400000000000000006044820152606401610427565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090205464ffffffffff1615610f7f5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c726561647920726567697374657265640000000000006044820152606401610427565b64ffffffffff8116600081815260046020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526003825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001690941790935565ffffffffffff86168252600590522054611039906fffffffffffffffffffffffffffffffff1685611430565b65ffffffffffff8416600090815260056020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff958616179055602887901c60ff16835260019091529020546110c69173ffffffffffffffffffffffffffffffffffffffff90911690849087166114b2565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260209081526040808320549385168352600382528083205464ffffffffff1660289490941b65ff0000000000169390931782526005905220546fffffffffffffffffffffffffffffffff165b92915050565b73ffffffffffffffffffffffffffffffffffffffff81166111a05760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610427565b60008681526020868152604080832082527f5ef297f2881340f11ed62c7c08e0e0c235c333ad8f340d7285f529f16716968a8352808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa158015611224573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146112a85760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610427565b50505050505050565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611378919061193a565b6000604051808303816000865af19150503d80600081146113b5576040519150601f19603f3d011682016040523d82523d6000602084013e6113ba565b606091505b50915091508180156113e45750805115806113e45750808060200190518101906113e49190611801565b6109b65760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610427565b60006fffffffffffffffffffffffffffffffff831661144f83856119cf565b9150816fffffffffffffffffffffffffffffffff1610156111375760405162461bcd60e51b815260206004820152600860248201527f6f766572666c6f770000000000000000000000000000000000000000000000006044820152606401610427565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152306024830152604482018390528416906323b872dd90606401602060405180830381600087803b15801561152857600080fd5b505af115801561153c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c69190611801565b60006fffffffffffffffffffffffffffffffff831661157f8385611a1b565b9150816fffffffffffffffffffffffffffffffff1611156111375760405162461bcd60e51b815260206004820152600960248201527f756e646572666c6f7700000000000000000000000000000000000000000000006044820152606401610427565b73ffffffffffffffffffffffffffffffffffffffff81166116455760405162461bcd60e51b815260206004820152601e60248201527f5369676e65722063616e6e6f7420626520656d707479206164647265737300006044820152606401610427565b6000858152602080822081527f9862d877599564bcd97c37305a7b0fdbe621d9c2a125026f2ad601f754a75abc82526040808320815193845291830180825282905260ff85169083015260608201869052608082018590529060019060a0016020604051602081039080840390855afa1580156116c6573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461174a5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610427565b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461177657600080fd5b919050565b80356fffffffffffffffffffffffffffffffff8116811461177657600080fd5b803560ff8116811461177657600080fd5b6000602082840312156117be57600080fd5b6117c782611752565b9392505050565b600080604083850312156117e157600080fd5b6117ea83611752565b91506117f860208401611752565b90509250929050565b60006020828403121561181357600080fd5b815180151581146117c757600080fd5b6000806040838503121561183657600080fd5b61183f8361177b565b9150602083013565ffffffffffff8116811461185a57600080fd5b809150509250929050565b6000806040838503121561187857600080fd5b6118818361177b565b91506117f86020840161179b565b6000602082840312156118a157600080fd5b5035919050565b600080600080600060a086880312156118c057600080fd5b8535945060208601359350604086013592506118de6060870161179b565b91506118ec60808701611752565b90509295509295909350565b60006020828403121561190a57600080fd5b813564ffffffffff811681146117c757600080fd5b60006020828403121561193157600080fd5b6117c78261179b565b6000825160005b8181101561195b5760208186018101518583015201611941565b8181111561196a576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156119c357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611991565b50909695505050505050565b60006fffffffffffffffffffffffffffffffff8083168185168083038211156119fa576119fa611a8f565b01949350505050565b60008219821115611a1657611a16611a8f565b500190565b60006fffffffffffffffffffffffffffffffff83811690831681811015611a4457611a44611a8f565b039392505050565b600060ff821660ff841680821015611a6657611a66611a8f565b90039392505050565b600060ff821660ff811415611a8657611a86611a8f565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000806000a";

type MesonPoolsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonPoolsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonPoolsTest__factory extends ContractFactory {
  constructor(...args: MesonPoolsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonPoolsTest> {
    return super.deploy(token, overrides || {}) as Promise<MesonPoolsTest>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): MesonPoolsTest {
    return super.attach(address) as MesonPoolsTest;
  }
  connect(signer: Signer): MesonPoolsTest__factory {
    return super.connect(signer) as MesonPoolsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonPoolsTestInterface {
    return new utils.Interface(_abi) as MesonPoolsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonPoolsTest {
    return new Contract(address, _abi, signerOrProvider) as MesonPoolsTest;
  }
}
