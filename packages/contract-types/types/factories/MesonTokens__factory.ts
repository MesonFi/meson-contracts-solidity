/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonTokens, MesonTokensInterface } from "../MesonTokens";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610156806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632335093c1461003b578063ff3787191461008b575b600080fd5b6100746100493660046100e9565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60405160ff90911681526020015b60405180910390f35b6100c4610099366004610126565b60ff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610082565b6000602082840312156100fb57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461011f57600080fd5b9392505050565b60006020828403121561013857600080fd5b813560ff8116811461011f57600080fdfea164736f6c6343000806000a";

type MesonTokensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonTokensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonTokens__factory extends ContractFactory {
  constructor(...args: MesonTokensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonTokens> {
    return super.deploy(overrides || {}) as Promise<MesonTokens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonTokens {
    return super.attach(address) as MesonTokens;
  }
  connect(signer: Signer): MesonTokens__factory {
    return super.connect(signer) as MesonTokens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonTokensInterface {
    return new utils.Interface(_abi) as MesonTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonTokens {
    return new Contract(address, _abi, signerOrProvider) as MesonTokens;
  }
}
