/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonSwapTest, MesonSwapTestInterface } from "../MesonSwapTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "expireTsForSwap",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "initiatorForSwap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "providerIndexForSwap",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
    ],
    name: "requestSwap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "total",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "expireTs",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIndexForSwap",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "totalForSwap",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060800160405280605281526020016200248f60529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000b795949392919062000117565b60405160208183030381529060405280519060200120600055348015620000dd57600080fd5b50620001bc565b620000ef8162000174565b82525050565b620001008162000188565b82525050565b6200011181620001b2565b82525050565b600060a0820190506200012e6000830188620000f5565b6200013d6020830187620000f5565b6200014c6040830186620000f5565b6200015b606083018562000106565b6200016a6080830184620000e4565b9695505050505050565b6000620001818262000192565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6122c380620001cc6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638e93243b116100ad578063d541beb311610071578063d541beb314610354578063dcf66b6d14610370578063e52d0404146103a0578063e7b9c155146103d0578063f7888aec1461040057610121565b80638e93243b1461029a57806394149c1a146102b65780639d866985146102d4578063a433799f14610308578063d23d1c761461033857610121565b80634f64b2be116100f45780634f64b2be146101d2578063552c0120146102025780636316d5541461021e57806385a991f71461024e5780638dac03cd1461026a57610121565b80631548fdce146101265780631aba3a55146101425780633ce4dd0f146101725780634b89bad6146101a2575b600080fd5b610140600480360381019061013b91906113e9565b610430565b005b61015c6004803603810190610157919061134f565b61047d565b6040516101699190611c21565b60405180910390f35b61018c600480360381019061018791906113e9565b6104a0565b6040516101999190611c06565b60405180910390f35b6101bc60048036038101906101b791906113e9565b6104cf565b6040516101c99190611c57565b60405180910390f35b6101ec60048036038101906101e79190611666565b6104ef565b6040516101f9919061196b565b60405180910390f35b61021c600480360381019061021791906114b8565b61052e565b005b610238600480360381019061023391906113e9565b610580565b6040516102459190611c3c565b60405180910390f35b610268600480360381019061026391906115bd565b6105a5565b005b610284600480360381019061027f91906113e9565b6108f0565b6040516102919190611a10565b60405180910390f35b6102b460048036038101906102af9190611693565b610902565b005b6102be610b5d565b6040516102cb9190611a8b565b60405180910390f35b6102ee60048036038101906102e991906113e9565b610b6c565b6040516102ff9594939291906119bd565b60405180910390f35b610322600480360381019061031d91906113e9565b610c0d565b60405161032f919061196b565b60405180910390f35b610352600480360381019061034d919061134f565b610c40565b005b61036e600480360381019061036991906113e9565b610c4c565b005b61038a600480360381019061038591906113e9565b610c99565b6040516103979190611c21565b60405180910390f35b6103ba60048036038101906103b59190611693565b610cbc565b6040516103c7919061196b565b60405180910390f35b6103ea60048036038101906103e59190611561565b610cef565b6040516103f79190611a2b565b60405180910390f35b61041a6004803603810190610415919061137c565b610cf7565b6040516104279190611c06565b60405180910390f35b8061043a81610d35565b610479576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047090611ba6565b60405180910390fd5b5050565b60036020528060005260406000206000915054906101000a900463ffffffff1681565b60096020528060005260406000206000915054906101000a90046fffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b600281815481106104ff57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8561053881610d35565b610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90611ba6565b60405180910390fd5b50505050505050565b600b6020528060005260406000206000915054906101000a900465ffffffffffff1681565b600060028660ff16815481106105be576105bd611ee2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000806000806105fb8b86610d3c565b9350935093509350600184878a8a604051600081526020016040526040516106269493929190611a46565b6020604051602081039080840390855afa158015610648573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b690611aa6565b60405180910390fd5b6000600360006106cd610f5e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff169050600061072e858565ffffffffffff16610f66565b90506040518060a001604052808c73ffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1681526020018d60ff168152602001826fffffffffffffffffffffffffffffffff1681526020018465ffffffffffff168152506006600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160186101000a81548160ff021916908360ff16021790555060608201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060808201518160010160106101000a81548165ffffffffffff021916908365ffffffffffff1602179055509050506108aa878c83610fad565b7fd7a1fd45274eb446b18cdf83061f521e75114fa2c53ecb42bd853bba72097bab866040516108d99190611a2b565b60405180910390a150505050505050505050505050565b60006108fb82610d35565b9050919050565b600061090c610f5e565b905060008263ffffffff1611610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e90611b46565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611b26565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1614610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490611b06565b60405180910390fd5b80600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000638000003c60e01b905090565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900463ffffffff16908060000160189054906101000a900460ff16908060010160009054906101000a90046fffffffffffffffffffffffffffffffff16908060010160109054906101000a900465ffffffffffff16905085565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c4981611054565b50565b80610c5681610d35565b610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c90611ba6565b60405180910390fd5b5050565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600092915050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000919050565b600080600080600080600080610d518a611111565b93509350935093508389604051602001610d6b9190611919565b6040516020818303038152906040528051906020012014610dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db890611be6565b60405180910390fd5b6000836fffffffffffffffffffffffffffffffff1611610e16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0d90611ac6565b60405180910390fd5b6000429050610e108165ffffffffffff16610e319190611d2a565b67ffffffffffffffff168265ffffffffffff1611610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b90611b66565b60405180910390fd5b611c208165ffffffffffff16610e9a9190611d2a565b67ffffffffffffffff168265ffffffffffff1610610eed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee490611ae6565b60405180910390fd5b6000610ef88c6111b8565b9050610f0381610d35565b15610f43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3a90611bc6565b60405180910390fd5b80858585995099509950995050505050505092959194509250565b600033905090565b6000826fffffffffffffffffffffffffffffffff168284610f879190611ce4565b9150816fffffffffffffffffffffffffffffffff161015610fa757600080fd5b92915050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846fffffffffffffffffffffffffffffffff166040518463ffffffff1660e01b8152600401610ffc93929190611986565b602060405180830381600087803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104e91906113bc565b50505050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000806000806000806000898060200190518101906111339190611416565b5050945094509450945094506040518060a0016040528060638152602001612254606391398051906020012085146111a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119790611b86565b60405180910390fd5b83838383985098509850985050505050509193509193565b60008082805190602001209050600054816040516020016111da929190611934565b60405160208183030381529060405280519060200120915050919050565b600061120b61120684611c97565b611c72565b90508281526020810184848401111561122757611226611f45565b5b611232848285611e45565b509392505050565b60008135905061124981612184565b92915050565b60008135905061125e8161219b565b92915050565b6000815190506112738161219b565b92915050565b600081359050611288816121b2565b92915050565b60008151905061129d816121b2565b92915050565b6000815190506112b2816121c9565b92915050565b600082601f8301126112cd576112cc611f40565b5b81356112dd8482602086016111f8565b91505092915050565b6000815190506112f5816121e0565b92915050565b60008135905061130a816121f7565b92915050565b60008135905061131f8161220e565b92915050565b60008151905061133481612225565b92915050565b6000813590506113498161223c565b92915050565b60006020828403121561136557611364611f4f565b5b60006113738482850161123a565b91505092915050565b6000806040838503121561139357611392611f4f565b5b60006113a18582860161123a565b92505060206113b28582860161123a565b9150509250929050565b6000602082840312156113d2576113d1611f4f565b5b60006113e084828501611264565b91505092915050565b6000602082840312156113ff576113fe611f4f565b5b600061140d84828501611279565b91505092915050565b600080600080600080600060e0888a03121561143557611434611f4f565b5b60006114438a828b0161128e565b97505060206114548a828b0161128e565b96505060406114658a828b016112e6565b95505060606114768a828b01611325565b94505060806114878a828b01611325565b93505060a06114988a828b016112a3565b92505060c06114a98a828b0161128e565b91505092959891949750929550565b60008060008060008060c087890312156114d5576114d4611f4f565b5b60006114e389828a01611279565b965050602087013567ffffffffffffffff81111561150457611503611f4a565b5b61151089828a016112b8565b955050604061152189828a01611279565b945050606061153289828a01611279565b935050608061154389828a0161133a565b92505060a061155489828a0161124f565b9150509295509295509295565b6000806040838503121561157857611577611f4f565b5b600083013567ffffffffffffffff81111561159657611595611f4a565b5b6115a2858286016112b8565b92505060206115b38582860161133a565b9150509250929050565b60008060008060008060c087890312156115da576115d9611f4f565b5b600087013567ffffffffffffffff8111156115f8576115f7611f4a565b5b61160489828a016112b8565b965050602061161589828a0161133a565b955050604061162689828a0161123a565b945050606061163789828a01611279565b935050608061164889828a01611279565b92505060a061165989828a0161133a565b9150509295509295509295565b60006020828403121561167c5761167b611f4f565b5b600061168a848285016112fb565b91505092915050565b6000602082840312156116a9576116a8611f4f565b5b60006116b784828501611310565b91505092915050565b6116c981611d68565b82525050565b6116e06116db82611d68565b611e85565b82525050565b6116ef81611d7a565b82525050565b6116fe81611d86565b82525050565b61171561171082611d86565b611e97565b82525050565b61172481611d90565b82525050565b6000611737601183611cc8565b915061174282611f72565b602082019050919050565b600061175a600283611cd9565b915061176582611f9b565b600282019050919050565b600061177d602583611cc8565b915061178882611fc4565b604082019050919050565b60006117a0601383611cc8565b91506117ab82612013565b602082019050919050565b60006117c3601a83611cc8565b91506117ce8261203c565b602082019050919050565b60006117e6601883611cc8565b91506117f182612065565b602082019050919050565b6000611809601283611cc8565b91506118148261208e565b602082019050919050565b600061182c601483611cc8565b9150611837826120b7565b602082019050919050565b600061184f601d83611cc8565b915061185a826120e0565b602082019050919050565b6000611872600e83611cc8565b915061187d82612109565b602082019050919050565b6000611895600d83611cc8565b91506118a082612132565b602082019050919050565b60006118b8601683611cc8565b91506118c38261215b565b602082019050919050565b6118d781611dbc565b82525050565b6118e681611df8565b82525050565b6118f581611e02565b82525050565b61190481611e12565b82525050565b61191381611e38565b82525050565b600061192582846116cf565b60148201915081905092915050565b600061193f8261174d565b915061194b8285611704565b60208201915061195b8284611704565b6020820191508190509392505050565b600060208201905061198060008301846116c0565b92915050565b600060608201905061199b60008301866116c0565b6119a860208301856116c0565b6119b560408301846118dd565b949350505050565b600060a0820190506119d260008301886116c0565b6119df60208301876118ec565b6119ec604083018661190a565b6119f960608301856118ce565b611a0660808301846118fb565b9695505050505050565b6000602082019050611a2560008301846116e6565b92915050565b6000602082019050611a4060008301846116f5565b92915050565b6000608082019050611a5b60008301876116f5565b611a68602083018661190a565b611a7560408301856116f5565b611a8260608301846116f5565b95945050505050565b6000602082019050611aa0600083018461171b565b92915050565b60006020820190508181036000830152611abf8161172a565b9050919050565b60006020820190508181036000830152611adf81611770565b9050919050565b60006020820190508181036000830152611aff81611793565b9050919050565b60006020820190508181036000830152611b1f816117b6565b9050919050565b60006020820190508181036000830152611b3f816117d9565b9050919050565b60006020820190508181036000830152611b5f816117fc565b9050919050565b60006020820190508181036000830152611b7f8161181f565b9050919050565b60006020820190508181036000830152611b9f81611842565b9050919050565b60006020820190508181036000830152611bbf81611865565b9050919050565b60006020820190508181036000830152611bdf81611888565b9050919050565b60006020820190508181036000830152611bff816118ab565b9050919050565b6000602082019050611c1b60008301846118ce565b92915050565b6000602082019050611c3660008301846118ec565b92915050565b6000602082019050611c5160008301846118fb565b92915050565b6000602082019050611c6c600083018461190a565b92915050565b6000611c7c611c8d565b9050611c888282611e54565b919050565b6000604051905090565b600067ffffffffffffffff821115611cb257611cb1611f11565b5b611cbb82611f54565b9050602081019050919050565b600082825260208201905092915050565b600081905092915050565b6000611cef82611dbc565b9150611cfa83611dbc565b9250826fffffffffffffffffffffffffffffffff03821115611d1f57611d1e611eb3565b5b828201905092915050565b6000611d3582611e24565b9150611d4083611e24565b92508267ffffffffffffffff03821115611d5d57611d5c611eb3565b5b828201905092915050565b6000611d7382611dd8565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600065ffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b611e5d82611f54565b810181811067ffffffffffffffff82111715611e7c57611e7b611f11565b5b80604052505050565b6000611e9082611ea1565b9050919050565b6000819050919050565b6000611eac82611f65565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f7377617020616d6f756e74206d7573742062652067726561746572207468616e60008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f6578706972657320747320746f6f206c61746500000000000000000000000000600082015250565b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b7f496e64657820616c726561647920726567697374657265640000000000000000600082015250565b7f43616e6e6f742075736520696e64657820300000000000000000000000000000600082015250565b7f6578706972657320747320746f6f206561726c79000000000000000000000000600082015250565b7f496e76616c696420737761702072657175657374207479706568617368000000600082015250565b7f73776170206e6f7420666f756e64000000000000000000000000000000000000600082015250565b7f7377617020636f6e666c69637400000000000000000000000000000000000000600082015250565b7f696e546f6b656e20646f6573206e6f74206d6174636800000000000000000000600082015250565b61218d81611d68565b811461219857600080fd5b50565b6121a481611d7a565b81146121af57600080fd5b50565b6121bb81611d86565b81146121c657600080fd5b50565b6121d281611d90565b81146121dd57600080fd5b50565b6121e981611dbc565b81146121f457600080fd5b50565b61220081611df8565b811461220b57600080fd5b50565b61221781611e02565b811461222257600080fd5b50565b61222e81611e12565b811461223957600080fd5b50565b61224581611e38565b811461225057600080fd5b5056fe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e29a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonSwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonSwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonSwapTest__factory extends ContractFactory {
  constructor(...args: MesonSwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonSwapTest> {
    return super.deploy(overrides || {}) as Promise<MesonSwapTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonSwapTest {
    return super.attach(address) as MesonSwapTest;
  }
  connect(signer: Signer): MesonSwapTest__factory {
    return super.connect(signer) as MesonSwapTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonSwapTestInterface {
    return new utils.Interface(_abi) as MesonSwapTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonSwapTest {
    return new Contract(address, _abi, signerOrProvider) as MesonSwapTest;
  }
}
