/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonSwapTest, MesonSwapTestInterface } from "../MesonSwapTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "recipient",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "expireTsForSwap",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "initiatorForSwap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "providerIndexForSwap",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
    ],
    name: "requestSwap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "inTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "total",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "expireTs",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIndexForSwap",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "totalForSwap",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060800160405280605281526020016200242660529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000b795949392919062000117565b60405160208183030381529060405280519060200120600055348015620000dd57600080fd5b50620001bc565b620000ef8162000174565b82525050565b620001008162000188565b82525050565b6200011181620001b2565b82525050565b600060a0820190506200012e6000830188620000f5565b6200013d6020830187620000f5565b6200014c6040830186620000f5565b6200015b606083018562000106565b6200016a6080830184620000e4565b9695505050505050565b6000620001818262000192565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61225a80620001cc6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638e93243b116100ad578063d541beb311610071578063d541beb314610354578063dcf66b6d14610370578063e52d0404146103a0578063e7b9c155146103d0578063f7888aec1461040057610121565b80638e93243b1461029a57806394149c1a146102b65780639d866985146102d4578063a433799f14610308578063d23d1c761461033857610121565b80634f64b2be116100f45780634f64b2be146101d2578063552c0120146102025780636316d5541461021e57806385a991f71461024e5780638dac03cd1461026a57610121565b80631548fdce146101265780631aba3a55146101425780633ce4dd0f146101725780634b89bad6146101a2575b600080fd5b610140600480360381019061013b9190611396565b610430565b005b61015c600480360381019061015791906112fc565b61047d565b6040516101699190611bce565b60405180910390f35b61018c60048036038101906101879190611396565b6104a0565b6040516101999190611bb3565b60405180910390f35b6101bc60048036038101906101b79190611396565b6104cf565b6040516101c99190611c04565b60405180910390f35b6101ec60048036038101906101e79190611613565b6104ef565b6040516101f99190611918565b60405180910390f35b61021c60048036038101906102179190611465565b61052e565b005b61023860048036038101906102339190611396565b610580565b6040516102459190611be9565b60405180910390f35b6102686004803603810190610263919061156a565b6105a5565b005b610284600480360381019061027f9190611396565b6108b1565b60405161029191906119bd565b60405180910390f35b6102b460048036038101906102af9190611640565b6108c3565b005b6102be610b1e565b6040516102cb9190611a38565b60405180910390f35b6102ee60048036038101906102e99190611396565b610b2d565b6040516102ff95949392919061196a565b60405180910390f35b610322600480360381019061031d9190611396565b610bce565b60405161032f9190611918565b60405180910390f35b610352600480360381019061034d91906112fc565b610c01565b005b61036e60048036038101906103699190611396565b610c0d565b005b61038a60048036038101906103859190611396565b610c5a565b6040516103979190611bce565b60405180910390f35b6103ba60048036038101906103b59190611640565b610c7d565b6040516103c79190611918565b60405180910390f35b6103ea60048036038101906103e5919061150e565b610cb0565b6040516103f791906119d8565b60405180910390f35b61041a60048036038101906104159190611329565b610cb8565b6040516104279190611bb3565b60405180910390f35b8061043a81610cf6565b610479576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047090611b53565b60405180910390fd5b5050565b60036020528060005260406000206000915054906101000a900463ffffffff1681565b60096020528060005260406000206000915054906101000a90046fffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b600281815481106104ff57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8561053881610cf6565b610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90611b53565b60405180910390fd5b50505050505050565b600b6020528060005260406000206000915054906101000a900465ffffffffffff1681565b600060028660ff16815481106105be576105bd611e79565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000806000806105fb8b86610cfd565b9350935093509350600184878a8a6040516000815260200160405260405161062694939291906119f3565b6020604051602081039080840390855afa158015610648573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b690611a53565b60405180910390fd5b6000600360006106cd610f0b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff169050600061072e858565ffffffffffff16610f13565b90508a6007600088815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816008600088815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055508b600a600088815260200190815260200160002060006101000a81548160ff021916908360ff160217905550806009600088815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555082600b600088815260200190815260200160002060006101000a81548165ffffffffffff021916908365ffffffffffff16021790555061086b878c83610f5a565b7fd7a1fd45274eb446b18cdf83061f521e75114fa2c53ecb42bd853bba72097bab8660405161089a91906119d8565b60405180910390a150505050505050505050505050565b60006108bc82610cf6565b9050919050565b60006108cd610f0b565b905060008263ffffffff1611610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090f90611af3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90611ad3565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1614610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5590611ab3565b60405180910390fd5b80600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000638000003c60e01b905090565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900463ffffffff16908060000160189054906101000a900460ff16908060010160009054906101000a90046fffffffffffffffffffffffffffffffff16908060010160109054906101000a900465ffffffffffff16905085565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c0a81611001565b50565b80610c1781610cf6565b610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90611b53565b60405180910390fd5b5050565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600092915050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000919050565b600080600080600080600080610d128a6110be565b93509350935093508389604051602001610d2c91906118c6565b6040516020818303038152906040528051906020012014610d82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7990611b93565b60405180910390fd5b6000836fffffffffffffffffffffffffffffffff1611610dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dce90611a73565b60405180910390fd5b6000429050610e1081610dea9190611cd7565b65ffffffffffff168265ffffffffffff1611610e3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3290611b13565b60405180910390fd5b611c2081610e499190611cd7565b65ffffffffffff168265ffffffffffff1610610e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9190611a93565b60405180910390fd5b6000610ea58c611165565b9050610eb081610cf6565b15610ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee790611b73565b60405180910390fd5b80858585995099509950995050505050505092959194509250565b600033905090565b6000826fffffffffffffffffffffffffffffffff168284610f349190611c91565b9150816fffffffffffffffffffffffffffffffff161015610f5457600080fd5b92915050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846fffffffffffffffffffffffffffffffff166040518463ffffffff1660e01b8152600401610fa993929190611933565b602060405180830381600087803b158015610fc357600080fd5b505af1158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb9190611369565b50505050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000806000806000806000898060200190518101906110e091906113c3565b5050945094509450945094506040518060a00160405280606381526020016121eb6063913980519060200120851461114d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114490611b33565b60405180910390fd5b83838383985098509850985050505050509193509193565b60008082805190602001209050600054816040516020016111879291906118e1565b60405160208183030381529060405280519060200120915050919050565b60006111b86111b384611c44565b611c1f565b9050828152602081018484840111156111d4576111d3611edc565b5b6111df848285611ddc565b509392505050565b6000813590506111f68161211b565b92915050565b60008135905061120b81612132565b92915050565b60008151905061122081612132565b92915050565b60008135905061123581612149565b92915050565b60008151905061124a81612149565b92915050565b60008151905061125f81612160565b92915050565b600082601f83011261127a57611279611ed7565b5b813561128a8482602086016111a5565b91505092915050565b6000815190506112a281612177565b92915050565b6000813590506112b78161218e565b92915050565b6000813590506112cc816121a5565b92915050565b6000815190506112e1816121bc565b92915050565b6000813590506112f6816121d3565b92915050565b60006020828403121561131257611311611ee6565b5b6000611320848285016111e7565b91505092915050565b600080604083850312156113405761133f611ee6565b5b600061134e858286016111e7565b925050602061135f858286016111e7565b9150509250929050565b60006020828403121561137f5761137e611ee6565b5b600061138d84828501611211565b91505092915050565b6000602082840312156113ac576113ab611ee6565b5b60006113ba84828501611226565b91505092915050565b600080600080600080600060e0888a0312156113e2576113e1611ee6565b5b60006113f08a828b0161123b565b97505060206114018a828b0161123b565b96505060406114128a828b01611293565b95505060606114238a828b016112d2565b94505060806114348a828b016112d2565b93505060a06114458a828b01611250565b92505060c06114568a828b0161123b565b91505092959891949750929550565b60008060008060008060c0878903121561148257611481611ee6565b5b600061149089828a01611226565b965050602087013567ffffffffffffffff8111156114b1576114b0611ee1565b5b6114bd89828a01611265565b95505060406114ce89828a01611226565b94505060606114df89828a01611226565b93505060806114f089828a016112e7565b92505060a061150189828a016111fc565b9150509295509295509295565b6000806040838503121561152557611524611ee6565b5b600083013567ffffffffffffffff81111561154357611542611ee1565b5b61154f85828601611265565b9250506020611560858286016112e7565b9150509250929050565b60008060008060008060c0878903121561158757611586611ee6565b5b600087013567ffffffffffffffff8111156115a5576115a4611ee1565b5b6115b189828a01611265565b96505060206115c289828a016112e7565b95505060406115d389828a016111e7565b94505060606115e489828a01611226565b93505060806115f589828a01611226565b92505060a061160689828a016112e7565b9150509295509295509295565b60006020828403121561162957611628611ee6565b5b6000611637848285016112a8565b91505092915050565b60006020828403121561165657611655611ee6565b5b6000611664848285016112bd565b91505092915050565b61167681611d13565b82525050565b61168d61168882611d13565b611e1c565b82525050565b61169c81611d25565b82525050565b6116ab81611d31565b82525050565b6116c26116bd82611d31565b611e2e565b82525050565b6116d181611d3b565b82525050565b60006116e4601183611c75565b91506116ef82611f09565b602082019050919050565b6000611707600283611c86565b915061171282611f32565b600282019050919050565b600061172a602583611c75565b915061173582611f5b565b604082019050919050565b600061174d601383611c75565b915061175882611faa565b602082019050919050565b6000611770601a83611c75565b915061177b82611fd3565b602082019050919050565b6000611793601883611c75565b915061179e82611ffc565b602082019050919050565b60006117b6601283611c75565b91506117c182612025565b602082019050919050565b60006117d9601483611c75565b91506117e48261204e565b602082019050919050565b60006117fc601d83611c75565b915061180782612077565b602082019050919050565b600061181f600e83611c75565b915061182a826120a0565b602082019050919050565b6000611842600d83611c75565b915061184d826120c9565b602082019050919050565b6000611865601683611c75565b9150611870826120f2565b602082019050919050565b61188481611d67565b82525050565b61189381611da3565b82525050565b6118a281611dad565b82525050565b6118b181611dbd565b82525050565b6118c081611dcf565b82525050565b60006118d2828461167c565b60148201915081905092915050565b60006118ec826116fa565b91506118f882856116b1565b60208201915061190882846116b1565b6020820191508190509392505050565b600060208201905061192d600083018461166d565b92915050565b6000606082019050611948600083018661166d565b611955602083018561166d565b611962604083018461188a565b949350505050565b600060a08201905061197f600083018861166d565b61198c6020830187611899565b61199960408301866118b7565b6119a6606083018561187b565b6119b360808301846118a8565b9695505050505050565b60006020820190506119d26000830184611693565b92915050565b60006020820190506119ed60008301846116a2565b92915050565b6000608082019050611a0860008301876116a2565b611a1560208301866118b7565b611a2260408301856116a2565b611a2f60608301846116a2565b95945050505050565b6000602082019050611a4d60008301846116c8565b92915050565b60006020820190508181036000830152611a6c816116d7565b9050919050565b60006020820190508181036000830152611a8c8161171d565b9050919050565b60006020820190508181036000830152611aac81611740565b9050919050565b60006020820190508181036000830152611acc81611763565b9050919050565b60006020820190508181036000830152611aec81611786565b9050919050565b60006020820190508181036000830152611b0c816117a9565b9050919050565b60006020820190508181036000830152611b2c816117cc565b9050919050565b60006020820190508181036000830152611b4c816117ef565b9050919050565b60006020820190508181036000830152611b6c81611812565b9050919050565b60006020820190508181036000830152611b8c81611835565b9050919050565b60006020820190508181036000830152611bac81611858565b9050919050565b6000602082019050611bc8600083018461187b565b92915050565b6000602082019050611be36000830184611899565b92915050565b6000602082019050611bfe60008301846118a8565b92915050565b6000602082019050611c1960008301846118b7565b92915050565b6000611c29611c3a565b9050611c358282611deb565b919050565b6000604051905090565b600067ffffffffffffffff821115611c5f57611c5e611ea8565b5b611c6882611eeb565b9050602081019050919050565b600082825260208201905092915050565b600081905092915050565b6000611c9c82611d67565b9150611ca783611d67565b9250826fffffffffffffffffffffffffffffffff03821115611ccc57611ccb611e4a565b5b828201905092915050565b6000611ce282611dbd565b9150611ced83611dbd565b92508265ffffffffffff03821115611d0857611d07611e4a565b5b828201905092915050565b6000611d1e82611d83565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600065ffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b611df482611eeb565b810181811067ffffffffffffffff82111715611e1357611e12611ea8565b5b80604052505050565b6000611e2782611e38565b9050919050565b6000819050919050565b6000611e4382611efc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f7377617020616d6f756e74206d7573742062652067726561746572207468616e60008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f6578706972657320747320746f6f206c61746500000000000000000000000000600082015250565b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b7f496e64657820616c726561647920726567697374657265640000000000000000600082015250565b7f43616e6e6f742075736520696e64657820300000000000000000000000000000600082015250565b7f6578706972657320747320746f6f206561726c79000000000000000000000000600082015250565b7f496e76616c696420737761702072657175657374207479706568617368000000600082015250565b7f73776170206e6f7420666f756e64000000000000000000000000000000000000600082015250565b7f7377617020636f6e666c69637400000000000000000000000000000000000000600082015250565b7f696e546f6b656e20646f6573206e6f74206d6174636800000000000000000000600082015250565b61212481611d13565b811461212f57600080fd5b50565b61213b81611d25565b811461214657600080fd5b50565b61215281611d31565b811461215d57600080fd5b50565b61216981611d3b565b811461217457600080fd5b50565b61218081611d67565b811461218b57600080fd5b50565b61219781611da3565b81146121a257600080fd5b50565b6121ae81611dad565b81146121b957600080fd5b50565b6121c581611dbd565b81146121d057600080fd5b50565b6121dc81611dcf565b81146121e757600080fd5b5056fe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e29a164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonSwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonSwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonSwapTest__factory extends ContractFactory {
  constructor(...args: MesonSwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonSwapTest> {
    return super.deploy(overrides || {}) as Promise<MesonSwapTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonSwapTest {
    return super.attach(address) as MesonSwapTest;
  }
  connect(signer: Signer): MesonSwapTest__factory {
    return super.connect(signer) as MesonSwapTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonSwapTestInterface {
    return new utils.Interface(_abi) as MesonSwapTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonSwapTest {
    return new Contract(address, _abi, signerOrProvider) as MesonSwapTest;
  }
}
