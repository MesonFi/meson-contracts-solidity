/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonSwapTest, MesonSwapTestInterface } from "../MesonSwapTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapBonded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenToSwapList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
    ],
    name: "bondSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "recipientHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "depositToPool",
        type: "bool",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "hasSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "providerIndex",
        type: "uint32",
      },
    ],
    name: "postSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSwap",
        type: "bytes",
      },
    ],
    name: "requestSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d2f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638e93243b11610081578063d23d1c761161005b578063d23d1c7614610203578063e52d040414610216578063f7888aec1461027157600080fd5b80638e93243b146101af57806394149c1a146101c25780639d327f45146101f057600080fd5b80637c41e82a116100b25780637c41e82a146101415780638a7e4552146101545780638dac03cd1461016757600080fd5b80631aba3a55146100d95780634c5c8123146101195780635dc013e31461012e575b600080fd5b6100ff6100e73660046118f1565b60066020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b61012c610127366004611a50565b6102a5565b005b61012c61013c366004611a50565b61042f565b61012c61014f366004611a2d565b6105f9565b61012c610162366004611b1b565b6107a3565b61019f610175366004611963565b60009081526008602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b6040519015158152602001610110565b61012c6101bd366004611ba0565b6109e9565b6040517f8000003c000000000000000000000000000000000000000000000000000000008152602001610110565b61012c6101fe366004611a92565b610c0e565b61012c6102113660046118f1565b610e84565b61024c610224366004611ba0565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610110565b61028461027f366004611913565b610f5c565b6040516fffffffffffffffffffffffffffffffff9091168152602001610110565b60006102b18383610fc0565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f7377617020636f6e666c6963740000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000806103528585611035565b91509150600061035f3390565b60408051808201825273ffffffffffffffffffffffffffffffffffffffff8084168252600060208084018281528a8352600890915293902091518254935163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090941691161791909117905590506103f4838284611296565b6040518481527fa67aeefca6ffac499b56c6e714636f7ade5d82fde82aef50665ad3e88be5cb4b9060200160405180910390a1505050505050565b600061043b8383610fc0565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16806104ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f6e6f207377617000000000000000000000000000000000000000000000000000604482015260640161033c565b60008060006104d9878761135b565b9250925092504265ffffffffffff168165ffffffffffff1610610558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f73776170206973206c6f636b6564000000000000000000000000000000000000604482015260640161033c565b600083815260036020908152604080832054888452600890925290912080547fffffffffffffffff00000000000000000000000000000000000000000000000016905573ffffffffffffffffffffffffffffffffffffffff166105bc818685611411565b6040518681527f5a399591cfd74c375a1ffd61c20221db0db82381f65516889ed13c8cd1f99d5b9060200160405180910390a15050505050505050565b60008281526008602052604090205473ffffffffffffffffffffffffffffffffffffffff16610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f6e6f207377617000000000000000000000000000000000000000000000000000604482015260640161033c565b60008281526008602052604090205474010000000000000000000000000000000000000000900463ffffffff1615610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f7377617020626f6e64656420746f20616e6f746865722070726f766964657200604482015260640161033c565b60008281526008602090815260409182902080547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000063ffffffff86160217905590518381527f9dadb60bc000bbd7b49430723ed56b6aa35909dcab91ec2cb17ed5da7ae4ffd6910160405180910390a15050565b60006107af8888610fc0565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff168061085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f73776170206e6f7420666f756e64206f72206e6f7420626f6e64656400000000604482015260640161033c565b61086f8389600054858b8b8b6115c5565b60008061087c8c8c61135b565b50600087815260086020526040902080547fffffffffffffffff0000000000000000000000000000000000000000000000001690559092509050851561095b57600082815260056020908152604080832063ffffffff871684529091529020546108f8906fffffffffffffffffffffffffffffffff168261180c565b600083815260056020908152604080832063ffffffff88168452909152902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff929092169190911790556109a8565b63ffffffff831660009081526007602090815260408083205485845260039092529091205473ffffffffffffffffffffffffffffffffffffffff91821691166109a5818385611411565b50505b6040518581527f6921a2110a802468e8955f2885822155442ad19c60f42db0444a6993c23d20629060200160405180910390a1505050505050505050505050565b3363ffffffff8216610a57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616e6e6f742075736520696e64657820300000000000000000000000000000604482015260640161033c565b63ffffffff821660009081526007602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610aea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e64657820616c726561647920726567697374657265640000000000000000604482015260640161033c565b73ffffffffffffffffffffffffffffffffffffffff811660009081526006602052604090205463ffffffff1615610b7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4164647265737320616c72656164792072656769737465726564000000000000604482015260640161033c565b63ffffffff9091166000818152600760209081526040808320805473ffffffffffffffffffffffffffffffffffffffff9096167fffffffffffffffffffffffff000000000000000000000000000000000000000090961686179055938252600690529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000169091179055565b6000610c1a8888610fc0565b60008181526008602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615610ca9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f7377617020636f6e666c69637400000000000000000000000000000000000000604482015260640161033c565b60408051600081526020810180835283905260ff851691810191909152606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610cfc573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610d9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161033c565b600080610da78a8a611035565b60408051808201825273ffffffffffffffffffffffffffffffffffffffff808d16825263ffffffff808a16602080850191825260008b815260089091529490942092518354945190911674010000000000000000000000000000000000000000027fffffffffffffffff0000000000000000000000000000000000000000000000009094169116179190911790559092509050610e45828983611296565b6040518381527fd7a1fd45274eb446b18cdf83061f521e75114fa2c53ecb42bd853bba72097bab9060200160405180910390a150505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020818152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690931790925581517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b168183015282518082036014018152603490910183528051908201208084526003825282842080547fffffffffffffffffffffffff000000000000000000000000000000000000000016861790559383526004905290205550565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602090815260408083205460068352818420549084526005835281842063ffffffff90911684529091529020546fffffffffffffffffffffffffffffffff165b92915050565b6000808383604051610fd3929190611bbb565b6040519081900381206000547f1901000000000000000000000000000000000000000000000000000000000000602084015260228301526042820181905291506062016040516020818303038152906040528051906020012091505092915050565b6000806000806000611047878761135b565b600083815260036020526040902054929550909350915073ffffffffffffffffffffffffffffffffffffffff16806110db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f6b656e20756e737570706f72746564000000000000000000000000000000604482015260640161033c565b6000836fffffffffffffffffffffffffffffffff161161117d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f7377617020616d6f756e74206d7573742062652067726561746572207468616e60448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161033c565b4261118a610e1082611c3a565b65ffffffffffff168365ffffffffffff1611611202576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f65787069726520747320746f6f206561726c7900000000000000000000000000604482015260640161033c565b61120e611c2082611c3a565b65ffffffffffff168365ffffffffffff1610611286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f65787069726520747320746f6f206c6174650000000000000000000000000000604482015260640161033c565b50945090925050505b9250929050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301523060248301526fffffffffffffffffffffffffffffffff831660448301528416906323b872dd90606401602060405180830381600087803b15801561131d57600080fd5b505af1158015611331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113559190611946565b50505050565b600080808080808061136f888a018a61197c565b50509450509350935093506040518060a0016040528060638152602001611c9560639139805190602001208414611402576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c696420737761702072657175657374207479706568617368000000604482015260640161033c565b91955093509150509250925092565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526fffffffffffffffffffffffffffffffff8516604480840191909152845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916114ec9190611bcb565b6000604051808303816000865af19150503d8060008114611529576040519150601f19603f3d011682016040523d82523d6000602084013e61152e565b606091505b50915091508180156115585750805115806115585750808060200190518101906115589190611946565b6115be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161033c565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8416611642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f7369676e65722063616e6e6f7420626520656d70747920616464726573730000604482015260640161033c565b60006040518060600160405280602b8152602001611cf8602b913980516020918201206040805192830191909152810189905260608101889052608001604051602081830303815290604052805190602001209050600086826040516020016116dd9291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8616918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015611763573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611801576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161033c565b505050505050505050565b60006fffffffffffffffffffffffffffffffff831661182b8385611c06565b9150816fffffffffffffffffffffffffffffffff161015610fba57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461186f57600080fd5b919050565b60008083601f84011261188657600080fd5b50813567ffffffffffffffff81111561189e57600080fd5b60208301915083602082850101111561128f57600080fd5b803563ffffffff8116811461186f57600080fd5b803565ffffffffffff8116811461186f57600080fd5b803560ff8116811461186f57600080fd5b60006020828403121561190357600080fd5b61190c8261184b565b9392505050565b6000806040838503121561192657600080fd5b61192f8361184b565b915061193d6020840161184b565b90509250929050565b60006020828403121561195857600080fd5b815161190c81611c86565b60006020828403121561197557600080fd5b5035919050565b600080600080600080600060e0888a03121561199757600080fd5b873596506020880135955060408801356fffffffffffffffffffffffffffffffff811681146119c557600080fd5b94506119d3606089016118ca565b93506119e1608089016118ca565b925060a08801357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a1657600080fd5b8092505060c0880135905092959891949750929550565b60008060408385031215611a4057600080fd5b8235915061193d602084016118b6565b60008060208385031215611a6357600080fd5b823567ffffffffffffffff811115611a7a57600080fd5b611a8685828601611874565b90969095509350505050565b600080600080600080600060c0888a031215611aad57600080fd5b873567ffffffffffffffff811115611ac457600080fd5b611ad08a828b01611874565b9098509650611ae390506020890161184b565b94506040880135935060608801359250611aff608089016118e0565b9150611b0d60a089016118b6565b905092959891949750929550565b600080600080600080600060c0888a031215611b3657600080fd5b873567ffffffffffffffff811115611b4d57600080fd5b611b598a828b01611874565b909850965050602088013594506040880135935060608801359250611b80608089016118e0565b915060a0880135611b9081611c86565b8091505092959891949750929550565b600060208284031215611bb257600080fd5b61190c826118b6565b8183823760009101908152919050565b6000825160005b81811015611bec5760208186018101518583015201611bd2565b81811115611bfb576000828501525b509190910192915050565b60006fffffffffffffffffffffffffffffffff808316818516808303821115611c3157611c31611c57565b01949350505050565b600065ffffffffffff808316818516808303821115611c3157611c315b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8015158114610f5957600080fdfe537761705265717565737428627974657320696e546f6b656e2c75696e7431323820616d6f756e742c75696e743438206665652c75696e7434382065787069726554732c627974657334206f7574436861696e2c6279746573206f7574546f6b656e295377617052656c656173652862797465733332207377617049642c627974657320726563697069656e7429a164736f6c6343000806000a";

type MesonSwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonSwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonSwapTest__factory extends ContractFactory {
  constructor(...args: MesonSwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonSwapTest> {
    return super.deploy(overrides || {}) as Promise<MesonSwapTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonSwapTest {
    return super.attach(address) as MesonSwapTest;
  }
  connect(signer: Signer): MesonSwapTest__factory {
    return super.connect(signer) as MesonSwapTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonSwapTestInterface {
    return new utils.Interface(_abi) as MesonSwapTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonSwapTest {
    return new Contract(address, _abi, signerOrProvider) as MesonSwapTest;
  }
}
