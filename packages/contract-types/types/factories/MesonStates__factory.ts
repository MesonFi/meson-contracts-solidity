/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonStates, MesonStatesInterface } from "../MesonStates";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoinType",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051806080016040528060528152602001610a4860529139805190602001206040518060400160405280600881526020017f4d65736f6e204669000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012046306040516020016100b495949392919061010c565b604051602081830303815290604052805190602001206000553480156100d957600080fd5b506101a5565b6100e88161015f565b82525050565b6100f781610171565b82525050565b6101068161019b565b82525050565b600060a08201905061012160008301886100ee565b61012e60208301876100ee565b61013b60408301866100ee565b61014860608301856100fd565b61015560808301846100df565b9695505050505050565b600061016a8261017b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610894806101b46000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631aba3a55146100675780634f64b2be146100975780638e93243b146100c757806394149c1a146100e3578063e52d040414610101578063f7888aec14610131575b600080fd5b610081600480360381019061007c91906104e5565b610161565b60405161008e9190610702565b60405180910390f35b6100b160048036038101906100ac9190610552565b610184565b6040516100be9190610651565b60405180910390f35b6100e160048036038101906100dc919061057f565b6101c3565b005b6100eb61041e565b6040516100f8919061066c565b60405180910390f35b61011b6004803603810190610116919061057f565b61042d565b6040516101289190610651565b60405180910390f35b61014b60048036038101906101469190610512565b610460565b60405161015891906106e7565b60405180910390f35b60036020528060005260406000206000915054906101000a900463ffffffff1681565b6002818154811061019457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006101cd61049e565b905060008263ffffffff1611610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020f906106c7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd906106a7565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161461035e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035590610687565b60405180910390fd5b80600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000638000003c60e01b905090565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528160005260406000206020528060005260406000206000915091509054906101000a90046fffffffffffffffffffffffffffffffff1681565b600033905090565b6000813590506104b581610842565b92915050565b6000813590506104ca81610859565b92915050565b6000813590506104df81610870565b92915050565b6000602082840312156104fb576104fa6107c2565b5b6000610509848285016104a6565b91505092915050565b60008060408385031215610529576105286107c2565b5b6000610537858286016104a6565b9250506020610548858286016104a6565b9150509250929050565b600060208284031215610568576105676107c2565b5b6000610576848285016104bb565b91505092915050565b600060208284031215610595576105946107c2565b5b60006105a3848285016104d0565b91505092915050565b6105b58161072e565b82525050565b6105c481610740565b82525050565b60006105d7601a8361071d565b91506105e2826107c7565b602082019050919050565b60006105fa60188361071d565b9150610605826107f0565b602082019050919050565b600061061d60128361071d565b915061062882610819565b602082019050919050565b61063c8161076c565b82525050565b61064b816107b2565b82525050565b600060208201905061066660008301846105ac565b92915050565b600060208201905061068160008301846105bb565b92915050565b600060208201905081810360008301526106a0816105ca565b9050919050565b600060208201905081810360008301526106c0816105ed565b9050919050565b600060208201905081810360008301526106e081610610565b9050919050565b60006020820190506106fc6000830184610633565b92915050565b60006020820190506107176000830184610642565b92915050565b600082825260208201905092915050565b600061073982610788565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600080fd5b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b7f496e64657820616c726561647920726567697374657265640000000000000000600082015250565b7f43616e6e6f742075736520696e64657820300000000000000000000000000000600082015250565b61084b8161072e565b811461085657600080fd5b50565b610862816107a8565b811461086d57600080fd5b50565b610879816107b2565b811461088457600080fd5b5056fea164736f6c6343000806000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

type MesonStatesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonStatesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonStates__factory extends ContractFactory {
  constructor(...args: MesonStatesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonStates> {
    return super.deploy(overrides || {}) as Promise<MesonStates>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonStates {
    return super.attach(address) as MesonStates;
  }
  connect(signer: Signer): MesonStates__factory {
    return super.connect(signer) as MesonStates__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonStatesInterface {
    return new utils.Interface(_abi) as MesonStatesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonStates {
    return new Contract(address, _abi, signerOrProvider) as MesonStates;
  }
}
