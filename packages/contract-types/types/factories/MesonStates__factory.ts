/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MesonStates, MesonStatesInterface } from "../MesonStates";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    name: "addressOfIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShortCoinType",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfAddress",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "indexOfToken",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "tokenForIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105aa806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b3df5b361161005b578063b3df5b3614610124578063eba7fb771461017f578063f7888aec146101ac578063ff3787191461022557600080fd5b80631aba3a55146100825780632335093c146100c4578063b002249d1461010f575b600080fd5b6100a96100903660046103d4565b60026020526000908152604090205464ffffffffff1681565b60405164ffffffffff90911681526020015b60405180910390f35b6100fd6100d23660046103d4565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405160ff90911681526020016100bb565b61011761025e565b6040516100bb9190610473565b61015a610132366004610429565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bb565b6040517e3c00000000000000000000000000000000000000000000000000000000000081526020016100bb565b6102176101ba3660046103f6565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832054939094168252600281528382205464ffffffffff1660289390931b65ff0000000000169290921781526004909152205490565b6040519081526020016100bb565b61015a610233366004610450565b60ff1660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b606060015b6101008160ff1610156103165760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16610304578060ff16600114156102ad575090565b6102b86001826104cd565b60ff1667ffffffffffffffff8111156102d3576102d361056e565b6040519080825280602002602001820160405280156102fc578160200160208202803683370190505b509150610316565b8061030e816104f0565b915050610263565b60015b8160ff168160ff1610156103a65760ff811660009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff168361035c6001846104cd565b60ff168151811061036f5761036f61053f565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061039e816104f0565b915050610319565b505090565b803573ffffffffffffffffffffffffffffffffffffffff811681146103cf57600080fd5b919050565b6000602082840312156103e657600080fd5b6103ef826103ab565b9392505050565b6000806040838503121561040957600080fd5b610412836103ab565b9150610420602084016103ab565b90509250929050565b60006020828403121561043b57600080fd5b813564ffffffffff811681146103ef57600080fd5b60006020828403121561046257600080fd5b813560ff811681146103ef57600080fd5b6020808252825182820181905260009190848201906040850190845b818110156104c157835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161048f565b50909695505050505050565b600060ff821660ff8416808210156104e7576104e7610510565b90039392505050565b600060ff821660ff81141561050757610507610510565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000806000a";

type MesonStatesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MesonStatesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MesonStates__factory extends ContractFactory {
  constructor(...args: MesonStatesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MesonStates> {
    return super.deploy(overrides || {}) as Promise<MesonStates>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MesonStates {
    return super.attach(address) as MesonStates;
  }
  connect(signer: Signer): MesonStates__factory {
    return super.connect(signer) as MesonStates__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MesonStatesInterface {
    return new utils.Interface(_abi) as MesonStatesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MesonStates {
    return new Contract(address, _abi, signerOrProvider) as MesonStates;
  }
}
